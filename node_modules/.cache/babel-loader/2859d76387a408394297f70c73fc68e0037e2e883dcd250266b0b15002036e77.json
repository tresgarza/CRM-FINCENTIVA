{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{USER_ROLES}from'../utils/constants/roles';// Tipos\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[session,setSession]=useState(null);const[loading,setLoading]=useState(false);// Simular verificación de sesión al iniciar\nuseEffect(()=>{const checkStoredUser=()=>{try{const storedUser=localStorage.getItem('crm_user');if(storedUser){setUser(JSON.parse(storedUser));}}catch(error){console.error('Error checking stored user:',error);}finally{setLoading(false);}};checkStoredUser();},[]);const signIn=async(email,password)=>{try{setLoading(true);// Simulación de autenticación\nif(email==='admin@fincentiva.com'&&password==='admin123'){const mockUser={id:'1',email:'admin@fincentiva.com',name:'Administrador',role:'SUPERADMIN'};// Guardar en localStorage para mantener la sesión\nlocalStorage.setItem('crm_user',JSON.stringify(mockUser));setUser(mockUser);return{data:{user:mockUser},error:null};}return{data:null,error:'Credenciales inválidas'};}catch(error){console.error('Error signing in:',error);return{error,data:null};}finally{setLoading(false);}};const signInWithCode=async(accessCode,userType)=>{try{setLoading(true);// Consultar la base de datos para verificar el access_code\nlet queryUrl='http://localhost:3100/query';let queryBody={};if(userType===USER_ROLES.ADVISOR){queryBody={query:`SELECT * FROM advisors WHERE access_code = '${accessCode}' LIMIT 1`};}else if(userType===USER_ROLES.COMPANY_ADMIN){queryBody={query:`SELECT * FROM company_admins WHERE access_code = '${accessCode}' LIMIT 1`};}else{return{data:null,error:'Tipo de usuario no válido'};}const response=await fetch(queryUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(queryBody)});const result=await response.json();if(result.error){console.error('Database error:',result.error);return{data:null,error:'Error de base de datos'};}if(result.data&&result.data.length>0){const userData=result.data[0];const userInfo={id:userData.id,email:userData.email,name:userData.name,role:userType,entityId:userType===USER_ROLES.COMPANY_ADMIN?userData.company_id:userData.id};// Guardar en localStorage para mantener la sesión\nlocalStorage.setItem('crm_user',JSON.stringify(userInfo));setUser(userInfo);return{data:{user:userInfo},error:null};}return{data:null,error:'Código de acceso inválido'};}catch(error){console.error('Error signing in with code:',error);return{error,data:null};}finally{setLoading(false);}};const signOut=async()=>{try{// Eliminar datos de sesión\nlocalStorage.removeItem('crm_user');setUser(null);setSession(null);}catch(error){console.error('Error signing out:',error);}};const value={user,session,loading,signIn,signInWithCode,signOut,setUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","USER_ROLES","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","session","setSession","loading","setLoading","checkStoredUser","storedUser","localStorage","getItem","JSON","parse","error","console","signIn","email","password","mockUser","id","name","role","setItem","stringify","data","signInWithCode","accessCode","userType","queryUrl","queryBody","ADVISOR","query","COMPANY_ADMIN","response","fetch","method","headers","body","result","json","length","userData","userInfo","entityId","company_id","signOut","removeItem","value","Provider"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Session } from '@supabase/supabase-js';\nimport { USER_ROLES } from '../utils/constants/roles';\n\n// Tipos\ninterface User {\n  id: string;\n  email: string;\n  name?: string;\n  role: string;\n  entityId?: string; // ID del asesor o empresa asociada\n}\n\ninterface AuthContextType {\n  user: User | null;\n  session: Session | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<{\n    error: any | null;\n    data: any | null;\n  }>;\n  signInWithCode: (accessCode: string, userType: string) => Promise<{\n    error: any | null;\n    data: any | null;\n  }>;\n  signOut: () => Promise<void>;\n  setUser: React.Dispatch<React.SetStateAction<User | null>>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  // Simular verificación de sesión al iniciar\n  useEffect(() => {\n    const checkStoredUser = () => {\n      try {\n        const storedUser = localStorage.getItem('crm_user');\n        if (storedUser) {\n          setUser(JSON.parse(storedUser));\n        }\n      } catch (error) {\n        console.error('Error checking stored user:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkStoredUser();\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    try {\n      setLoading(true);\n      \n      // Simulación de autenticación\n      if (email === 'admin@fincentiva.com' && password === 'admin123') {\n        const mockUser: User = {\n          id: '1',\n          email: 'admin@fincentiva.com',\n          name: 'Administrador',\n          role: 'SUPERADMIN',\n        };\n        \n        // Guardar en localStorage para mantener la sesión\n        localStorage.setItem('crm_user', JSON.stringify(mockUser));\n        setUser(mockUser);\n        \n        return { data: { user: mockUser }, error: null };\n      }\n      \n      return { data: null, error: 'Credenciales inválidas' };\n    } catch (error) {\n      console.error('Error signing in:', error);\n      return { error, data: null };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signInWithCode = async (accessCode: string, userType: string) => {\n    try {\n      setLoading(true);\n      \n      // Consultar la base de datos para verificar el access_code\n      let queryUrl = 'http://localhost:3100/query';\n      let queryBody = {};\n      \n      if (userType === USER_ROLES.ADVISOR) {\n        queryBody = {\n          query: `SELECT * FROM advisors WHERE access_code = '${accessCode}' LIMIT 1`\n        };\n      } else if (userType === USER_ROLES.COMPANY_ADMIN) {\n        queryBody = {\n          query: `SELECT * FROM company_admins WHERE access_code = '${accessCode}' LIMIT 1`\n        };\n      } else {\n        return { data: null, error: 'Tipo de usuario no válido' };\n      }\n      \n      const response = await fetch(queryUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(queryBody),\n      });\n      \n      const result = await response.json();\n      \n      if (result.error) {\n        console.error('Database error:', result.error);\n        return { data: null, error: 'Error de base de datos' };\n      }\n      \n      if (result.data && result.data.length > 0) {\n        const userData = result.data[0];\n        const userInfo: User = {\n          id: userData.id,\n          email: userData.email,\n          name: userData.name,\n          role: userType,\n          entityId: userType === USER_ROLES.COMPANY_ADMIN ? userData.company_id : userData.id,\n        };\n        \n        // Guardar en localStorage para mantener la sesión\n        localStorage.setItem('crm_user', JSON.stringify(userInfo));\n        setUser(userInfo);\n        \n        return { data: { user: userInfo }, error: null };\n      }\n      \n      return { data: null, error: 'Código de acceso inválido' };\n    } catch (error) {\n      console.error('Error signing in with code:', error);\n      return { error, data: null };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      // Eliminar datos de sesión\n      localStorage.removeItem('crm_user');\n      setUser(null);\n      setSession(null);\n    } catch (error) {\n      console.error('Error signing out:', error);\n    }\n  };\n\n  const value = {\n    user,\n    session,\n    loading,\n    signIn,\n    signInWithCode,\n    signOut,\n    setUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}