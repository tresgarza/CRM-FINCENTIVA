{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';// Constantes para almacenamiento\nconst STORAGE_KEY_TOKEN='crm_token';// Initialize the Supabase client\nexport const supabase=createClient(process.env.REACT_APP_SUPABASE_URL||'your-supabase-url',process.env.REACT_APP_SUPABASE_ANON_KEY||'your-supabase-anon-key');// Get a Supabase client with the auth token if available\nexport const getAuthenticatedClient=()=>{const token=localStorage.getItem(STORAGE_KEY_TOKEN);if(token){// Return a client with the auth token for authenticated access\nreturn createClient(process.env.REACT_APP_SUPABASE_URL||'your-supabase-url',process.env.REACT_APP_SUPABASE_ANON_KEY||'your-supabase-anon-key',{global:{headers:{Authorization:`Bearer ${token}`}}});}// Fall back to the default client if no token is available\nreturn supabase;};// Export a method to get access to Supabase Storage\nexport const getStorage=()=>supabase.storage;","map":{"version":3,"names":["createClient","STORAGE_KEY_TOKEN","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","getAuthenticatedClient","token","localStorage","getItem","global","headers","Authorization","getStorage","storage"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient, SupabaseClient } from '@supabase/supabase-js';\n\n// Constantes para almacenamiento\nconst STORAGE_KEY_TOKEN = 'crm_token';\n\n// Initialize the Supabase client\nexport const supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL || 'your-supabase-url',\n  process.env.REACT_APP_SUPABASE_ANON_KEY || 'your-supabase-anon-key'\n);\n\n// Get a Supabase client with the auth token if available\nexport const getAuthenticatedClient = (): SupabaseClient => {\n  const token = localStorage.getItem(STORAGE_KEY_TOKEN);\n  \n  if (token) {\n    // Return a client with the auth token for authenticated access\n    return createClient(\n      process.env.REACT_APP_SUPABASE_URL || 'your-supabase-url',\n      process.env.REACT_APP_SUPABASE_ANON_KEY || 'your-supabase-anon-key',\n      {\n        global: {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }\n      }\n    );\n  }\n  \n  // Fall back to the default client if no token is available\n  return supabase;\n};\n\n// Export a method to get access to Supabase Storage\nexport const getStorage = () => supabase.storage; "],"mappings":"AAAA,OAASA,YAAY,KAAwB,uBAAuB,CAEpE;AACA,KAAM,CAAAC,iBAAiB,CAAG,WAAW,CAErC;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAGF,YAAY,CAClCG,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,mBAAmB,CACzDF,OAAO,CAACC,GAAG,CAACE,2BAA2B,EAAI,wBAC7C,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,sBAAsB,CAAGA,CAAA,GAAsB,CAC1D,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAACT,iBAAiB,CAAC,CAErD,GAAIO,KAAK,CAAE,CACT;AACA,MAAO,CAAAR,YAAY,CACjBG,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,mBAAmB,CACzDF,OAAO,CAACC,GAAG,CAACE,2BAA2B,EAAI,wBAAwB,CACnE,CACEK,MAAM,CAAE,CACNC,OAAO,CAAE,CACPC,aAAa,CAAE,UAAUL,KAAK,EAChC,CACF,CACF,CACF,CAAC,CACH,CAEA;AACA,MAAO,CAAAN,QAAQ,CACjB,CAAC,CAED;AACA,MAAO,MAAM,CAAAY,UAAU,CAAGA,CAAA,GAAMZ,QAAQ,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}