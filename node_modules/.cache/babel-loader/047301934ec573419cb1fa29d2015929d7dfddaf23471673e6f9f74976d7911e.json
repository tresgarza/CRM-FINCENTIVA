{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/clients/ClientForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DocumentUploader from '../documents/DocumentUploader';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { executeQuery } from '../../services/mcpService';\n\n// Interfaz para documentos\n\n// Props para el componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Categorías de documentos predefinidas\nconst DOCUMENT_CATEGORIES = [{\n  value: 'identificacion',\n  label: 'Identificación Oficial'\n}, {\n  value: 'comprobante_domicilio',\n  label: 'Comprobante de Domicilio'\n}, {\n  value: 'comprobante_ingresos',\n  label: 'Comprobante de Ingresos'\n}, {\n  value: 'estados_cuenta',\n  label: 'Estados de Cuenta Bancarios'\n}, {\n  value: 'rfc',\n  label: 'Constancia de Situación Fiscal (RFC)'\n}, {\n  value: 'curp',\n  label: 'CURP'\n}, {\n  value: 'otros',\n  label: 'Otros Documentos'\n}];\n\n// Tipos de empleo\nconst EMPLOYMENT_TYPES = [{\n  value: 'empleado',\n  label: 'Empleado'\n}, {\n  value: 'autonomo',\n  label: 'Autónomo / Freelance'\n}, {\n  value: 'empresario',\n  label: 'Empresario'\n}, {\n  value: 'jubilado',\n  label: 'Jubilado'\n}, {\n  value: 'desempleado',\n  label: 'Desempleado'\n}, {\n  value: 'estudiante',\n  label: 'Estudiante'\n}, {\n  value: 'otro',\n  label: 'Otro'\n}];\n\n// Estados civiles\nconst MARITAL_STATUS_TYPES = [{\n  value: 'soltero',\n  label: 'Soltero/a'\n}, {\n  value: 'casado',\n  label: 'Casado/a'\n}, {\n  value: 'divorciado',\n  label: 'Divorciado/a'\n}, {\n  value: 'viudo',\n  label: 'Viudo/a'\n}, {\n  value: 'union_libre',\n  label: 'Unión Libre'\n}];\n\n// Tipos de cuenta bancaria\nconst BANK_ACCOUNT_TYPES = [{\n  value: 'nomina',\n  label: 'Nómina'\n}, {\n  value: 'ahorro',\n  label: 'Ahorro'\n}, {\n  value: 'cheques',\n  label: 'Cheques'\n}, {\n  value: 'inversiones',\n  label: 'Inversiones'\n}];\n\n// Tipos de frecuencia de ingresos\nconst INCOME_FREQUENCY_TYPES = [{\n  value: 'semanal',\n  label: 'Semanal'\n}, {\n  value: 'quincenal',\n  label: 'Quincenal'\n}, {\n  value: 'mensual',\n  label: 'Mensual'\n}, {\n  value: 'bimestral',\n  label: 'Bimestral'\n}, {\n  value: 'trimestral',\n  label: 'Trimestral'\n}, {\n  value: 'semestral',\n  label: 'Semestral'\n}, {\n  value: 'anual',\n  label: 'Anual'\n}, {\n  value: 'irregular',\n  label: 'Irregular'\n}];\n\n// Métodos de pago\nconst PAYMENT_METHOD_TYPES = [{\n  value: 'efectivo',\n  label: 'Efectivo'\n}, {\n  value: 'transferencia',\n  label: 'Transferencia'\n}, {\n  value: 'tarjeta',\n  label: 'Tarjeta de Crédito/Débito'\n}, {\n  value: 'cheque',\n  label: 'Cheque'\n}, {\n  value: 'domiciliacion',\n  label: 'Domiciliación Bancaria'\n}];\n\n// Propósitos de crédito\nconst CREDIT_PURPOSE_TYPES = [{\n  value: 'personal',\n  label: 'Gastos Personales'\n}, {\n  value: 'negocio',\n  label: 'Negocio/Inversión'\n}, {\n  value: 'vivienda',\n  label: 'Vivienda'\n}, {\n  value: 'auto',\n  label: 'Automóvil'\n}, {\n  value: 'educacion',\n  label: 'Educación'\n}, {\n  value: 'salud',\n  label: 'Salud'\n}, {\n  value: 'deudas',\n  label: 'Consolidación de Deudas'\n}, {\n  value: 'otro',\n  label: 'Otro'\n}];\n\n// Tipos de relación para referencias\nconst RELATIONSHIP_TYPES = [{\n  value: 'familiar',\n  label: 'Familiar'\n}, {\n  value: 'amigo',\n  label: 'Amigo'\n}, {\n  value: 'companero_trabajo',\n  label: 'Compañero de Trabajo'\n}, {\n  value: 'vecino',\n  label: 'Vecino'\n}, {\n  value: 'otro',\n  label: 'Otro'\n}];\nconst ClientForm = ({\n  initialData = {},\n  onSubmit,\n  onSavePartial,\n  isSubmitting\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n\n  // Estado para los datos del formulario\n  const [formData, setFormData] = useState({\n    first_name: '',\n    paternal_surname: '',\n    maternal_surname: '',\n    email: '',\n    phone: '',\n    address: '',\n    city: '',\n    state: '',\n    postal_code: '',\n    birth_date: '',\n    gender: '',\n    marital_status: '',\n    employment_type: '',\n    employment_years: undefined,\n    rfc: '',\n    curp: '',\n    monthly_income: undefined,\n    additional_income: undefined,\n    monthly_expenses: undefined,\n    other_loan_balances: undefined,\n    bank_name: '',\n    bank_clabe: '',\n    bank_account_number: '',\n    bank_account_type: '',\n    bank_account_origin: '',\n    company_id: '',\n    // Nuevos campos\n    street_number_ext: '',\n    street_number_int: '',\n    neighborhood: '',\n    home_phone: '',\n    birth_state: '',\n    nationality: '',\n    job_position: '',\n    employer_name: '',\n    employer_phone: '',\n    employer_address: '',\n    employer_activity: '',\n    mortgage_payment: undefined,\n    rent_payment: undefined,\n    dependent_persons: undefined,\n    income_frequency: '',\n    payment_method: '',\n    credit_purpose: '',\n    spouse_paternal_surname: '',\n    spouse_maternal_surname: '',\n    reference1_name: '',\n    reference1_relationship: '',\n    reference1_address: '',\n    reference1_phone: '',\n    reference2_name: '',\n    reference2_relationship: '',\n    reference2_address: '',\n    reference2_phone: '',\n    ...initialData\n  });\n\n  // Estado para errores de validación\n  const [errors, setErrors] = useState({});\n\n  // Estado para documentos\n  const [documents, setDocuments] = useState([]);\n\n  // Estado para el paso actual del formulario\n  const [currentStep, setCurrentStep] = useState(1);\n\n  // Estado para empresas\n  const [companies, setCompanies] = useState([]);\n  const [loadingCompanies, setLoadingCompanies] = useState(true);\n\n  // Calcular el progreso de llenado de formulario\n  const calculateProgress = () => {\n    let filledFields = 0;\n    let totalFields = 0;\n\n    // Paso 1: Datos Personales Básicos\n    const step1Fields = ['first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone', 'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address', 'city', 'state', 'postal_code', 'company_id', 'street_number_ext', 'street_number_int', 'neighborhood', 'home_phone', 'birth_state', 'nationality', 'spouse_paternal_surname', 'spouse_maternal_surname', 'dependent_persons'];\n    totalFields += step1Fields.length;\n    filledFields += step1Fields.filter(field => formData[field]).length;\n\n    // Paso 2: Detalles Financieros y Empleo\n    const step2Fields = ['employment_type', 'employment_years', 'job_position', 'employer_name', 'employer_phone', 'employer_address', 'employer_activity', 'monthly_income', 'additional_income', 'monthly_expenses', 'other_loan_balances', 'mortgage_payment', 'rent_payment', 'income_frequency', 'payment_method', 'credit_purpose'];\n    totalFields += step2Fields.length;\n    filledFields += step2Fields.filter(field => formData[field] !== undefined && formData[field] !== '').length;\n\n    // Paso 3: Datos Bancarios y Referencias\n    const step3Fields = ['bank_name', 'bank_clabe', 'bank_account_number', 'bank_account_type', 'bank_account_origin', 'reference1_name', 'reference1_relationship', 'reference1_address', 'reference1_phone', 'reference2_name', 'reference2_relationship', 'reference2_address', 'reference2_phone'];\n    totalFields += step3Fields.length;\n    filledFields += step3Fields.filter(field => formData[field]).length;\n\n    // Calcular porcentaje\n    return Math.round(filledFields / totalFields * 100);\n  };\n\n  // State for section saving\n  const [sectionSubmitting, setSectionSubmitting] = useState(false);\n\n  // Use useMemo instead of useState + useEffect to calculate progress\n  const progress = useMemo(() => calculateProgress(), [\n  // Adding all form fields as dependencies\n  formData.first_name, formData.paternal_surname, formData.maternal_surname\n  // (additional dependencies would go here)\n  ]);\n\n  // Helper function to collect fields for current step\n  const collectFieldsForStep = (data, step) => {\n    const partialData = {};\n\n    // This is a simplified version - your actual implementation may be more complex\n    if (step === 1) {\n      // Personal info fields\n      Object.assign(partialData, {\n        first_name: data.first_name,\n        paternal_surname: data.paternal_surname,\n        maternal_surname: data.maternal_surname\n        // Add more fields as needed\n      });\n    } else if (step === 2) {\n      // Financial info fields\n      Object.assign(partialData, {\n        employment_type: data.employment_type,\n        employment_years: data.employment_years\n        // Add more fields as needed\n      });\n    } else if (step === 3) {\n      // Bank and reference info\n      Object.assign(partialData, {\n        bank_name: data.bank_name,\n        bank_clabe: data.bank_clabe\n        // Add more fields as needed\n      });\n    }\n    return partialData;\n  };\n\n  // Event handlers\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'number' ? value === '' ? undefined : parseFloat(value) : value\n    }));\n  };\n  const handleDocumentAdded = document => {\n    setDocuments(prev => [...prev, document]);\n  };\n  const handleDocumentRemoved = index => {\n    setDocuments(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleCompanyChange = e => {\n    const {\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      company_id: value\n    }));\n  };\n\n  // Step navigation\n  const nextStep = () => {\n    if (currentStep < 4) {\n      setCurrentStep(prev => prev + 1);\n    }\n  };\n  const prevStep = () => {\n    if (currentStep > 1) {\n      setCurrentStep(prev => prev - 1);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Submit form logic would go here\n    try {\n      await onSubmit(formData, documents);\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n\n  // Fetch companies on component mount\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setLoadingCompanies(true);\n        const response = await executeQuery('SELECT id, name FROM companies ORDER BY name ASC');\n        if (response && response.data) {\n          setCompanies(response.data);\n        }\n      } catch (err) {\n        console.error('Error fetching companies:', err);\n      } finally {\n        setLoadingCompanies(false);\n      }\n    };\n    fetchCompanies();\n  }, []);\n\n  // Render function for different steps\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold\",\n            children: \"Datos Personales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label-text\",\n                  children: \"Nombre(s)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"first_name\",\n                value: formData.first_name || '',\n                onChange: handleChange,\n                className: \"input input-bordered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Informaci\\xF3n Laboral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label-text\",\n                  children: \"Tipo de Empleo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"employment_type\",\n                value: formData.employment_type || '',\n                onChange: handleChange,\n                className: `select select-bordered w-full ${errors.employment_type ? 'select-error' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Seleccionar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, this), EMPLOYMENT_TYPES.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Datos Bancarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label-text\",\n                  children: \"Banco\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"bank_name\",\n                value: formData.bank_name || '',\n                onChange: handleChange,\n                className: \"input input-bordered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Documentos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DocumentUploader, {\n            onDocumentAdded: handleDocumentAdded,\n            onDocumentRemoved: handleDocumentRemoved,\n            existingDocuments: documents,\n            categories: DOCUMENT_CATEGORIES\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold\",\n            children: initialData !== null && initialData !== void 0 && initialData.id ? 'Editar Cliente' : 'Nuevo Cliente'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm\",\n            children: [\"Paso \", currentStep, \" de 4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full bg-gray-200 rounded-full h-2.5 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-600 h-2.5 rounded-full\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), renderStep(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 flex justify-between\",\n        children: [currentStep > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: prevStep,\n          className: \"btn btn-outline\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2 ml-auto\",\n          children: currentStep < 4 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: nextStep,\n            className: \"btn btn-primary\",\n            children: \"Siguiente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success\",\n            disabled: isSubmitting,\n            children: isSubmitting ? 'Guardando...' : 'Guardar Cliente'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientForm, \"gv2SJhRYU0MUfGP57X3DA7qQsfI=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ClientForm;\nexport default ClientForm;\nvar _c;\n$RefreshReg$(_c, \"ClientForm\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useNavigate","DocumentUploader","useAuth","executeQuery","jsxDEV","_jsxDEV","DOCUMENT_CATEGORIES","value","label","EMPLOYMENT_TYPES","MARITAL_STATUS_TYPES","BANK_ACCOUNT_TYPES","INCOME_FREQUENCY_TYPES","PAYMENT_METHOD_TYPES","CREDIT_PURPOSE_TYPES","RELATIONSHIP_TYPES","ClientForm","initialData","onSubmit","onSavePartial","isSubmitting","_s","navigate","user","formData","setFormData","first_name","paternal_surname","maternal_surname","email","phone","address","city","state","postal_code","birth_date","gender","marital_status","employment_type","employment_years","undefined","rfc","curp","monthly_income","additional_income","monthly_expenses","other_loan_balances","bank_name","bank_clabe","bank_account_number","bank_account_type","bank_account_origin","company_id","street_number_ext","street_number_int","neighborhood","home_phone","birth_state","nationality","job_position","employer_name","employer_phone","employer_address","employer_activity","mortgage_payment","rent_payment","dependent_persons","income_frequency","payment_method","credit_purpose","spouse_paternal_surname","spouse_maternal_surname","reference1_name","reference1_relationship","reference1_address","reference1_phone","reference2_name","reference2_relationship","reference2_address","reference2_phone","errors","setErrors","documents","setDocuments","currentStep","setCurrentStep","companies","setCompanies","loadingCompanies","setLoadingCompanies","calculateProgress","filledFields","totalFields","step1Fields","length","filter","field","step2Fields","step3Fields","Math","round","sectionSubmitting","setSectionSubmitting","progress","collectFieldsForStep","data","step","partialData","Object","assign","handleChange","e","name","type","target","prev","parseFloat","handleDocumentAdded","document","handleDocumentRemoved","index","_","i","handleCompanyChange","nextStep","prevStep","handleSubmit","preventDefault","error","console","fetchCompanies","response","err","renderStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","option","onDocumentAdded","onDocumentRemoved","existingDocuments","categories","id","style","width","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/clients/ClientForm.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Client } from '../../services/clientService';\nimport DocumentUploader from '../documents/DocumentUploader';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { executeQuery } from '../../services/mcpService';\n\n// Interfaz para documentos\ninterface ClientDocument {\n  id?: string;\n  file: File;\n  category: string;\n  name: string;\n}\n\n// Props para el componente\ninterface ClientFormProps {\n  initialData?: Partial<Client>;\n  onSubmit: (data: Partial<Client>, documents: ClientDocument[]) => Promise<void>;\n  onSavePartial?: (data: Partial<Client>, step: number) => Promise<any>;\n  isSubmitting: boolean;\n}\n\n// Categorías de documentos predefinidas\nconst DOCUMENT_CATEGORIES = [\n  { value: 'identificacion', label: 'Identificación Oficial' },\n  { value: 'comprobante_domicilio', label: 'Comprobante de Domicilio' },\n  { value: 'comprobante_ingresos', label: 'Comprobante de Ingresos' },\n  { value: 'estados_cuenta', label: 'Estados de Cuenta Bancarios' },\n  { value: 'rfc', label: 'Constancia de Situación Fiscal (RFC)' },\n  { value: 'curp', label: 'CURP' },\n  { value: 'otros', label: 'Otros Documentos' },\n];\n\n// Tipos de empleo\nconst EMPLOYMENT_TYPES = [\n  { value: 'empleado', label: 'Empleado' },\n  { value: 'autonomo', label: 'Autónomo / Freelance' },\n  { value: 'empresario', label: 'Empresario' },\n  { value: 'jubilado', label: 'Jubilado' },\n  { value: 'desempleado', label: 'Desempleado' },\n  { value: 'estudiante', label: 'Estudiante' },\n  { value: 'otro', label: 'Otro' },\n];\n\n// Estados civiles\nconst MARITAL_STATUS_TYPES = [\n  { value: 'soltero', label: 'Soltero/a' },\n  { value: 'casado', label: 'Casado/a' },\n  { value: 'divorciado', label: 'Divorciado/a' },\n  { value: 'viudo', label: 'Viudo/a' },\n  { value: 'union_libre', label: 'Unión Libre' },\n];\n\n// Tipos de cuenta bancaria\nconst BANK_ACCOUNT_TYPES = [\n  { value: 'nomina', label: 'Nómina' },\n  { value: 'ahorro', label: 'Ahorro' },\n  { value: 'cheques', label: 'Cheques' },\n  { value: 'inversiones', label: 'Inversiones' },\n];\n\n// Tipos de frecuencia de ingresos\nconst INCOME_FREQUENCY_TYPES = [\n  { value: 'semanal', label: 'Semanal' },\n  { value: 'quincenal', label: 'Quincenal' },\n  { value: 'mensual', label: 'Mensual' },\n  { value: 'bimestral', label: 'Bimestral' },\n  { value: 'trimestral', label: 'Trimestral' },\n  { value: 'semestral', label: 'Semestral' },\n  { value: 'anual', label: 'Anual' },\n  { value: 'irregular', label: 'Irregular' },\n];\n\n// Métodos de pago\nconst PAYMENT_METHOD_TYPES = [\n  { value: 'efectivo', label: 'Efectivo' },\n  { value: 'transferencia', label: 'Transferencia' },\n  { value: 'tarjeta', label: 'Tarjeta de Crédito/Débito' },\n  { value: 'cheque', label: 'Cheque' },\n  { value: 'domiciliacion', label: 'Domiciliación Bancaria' },\n];\n\n// Propósitos de crédito\nconst CREDIT_PURPOSE_TYPES = [\n  { value: 'personal', label: 'Gastos Personales' },\n  { value: 'negocio', label: 'Negocio/Inversión' },\n  { value: 'vivienda', label: 'Vivienda' },\n  { value: 'auto', label: 'Automóvil' },\n  { value: 'educacion', label: 'Educación' },\n  { value: 'salud', label: 'Salud' },\n  { value: 'deudas', label: 'Consolidación de Deudas' },\n  { value: 'otro', label: 'Otro' },\n];\n\n// Tipos de relación para referencias\nconst RELATIONSHIP_TYPES = [\n  { value: 'familiar', label: 'Familiar' },\n  { value: 'amigo', label: 'Amigo' },\n  { value: 'companero_trabajo', label: 'Compañero de Trabajo' },\n  { value: 'vecino', label: 'Vecino' },\n  { value: 'otro', label: 'Otro' },\n];\n\nconst ClientForm: React.FC<ClientFormProps> = ({ initialData = {}, onSubmit, onSavePartial, isSubmitting }) => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  \n  // Estado para los datos del formulario\n  const [formData, setFormData] = useState<Partial<Client>>({\n    first_name: '',\n    paternal_surname: '',\n    maternal_surname: '',\n    email: '',\n    phone: '',\n    address: '',\n    city: '',\n    state: '',\n    postal_code: '',\n    birth_date: '',\n    gender: '',\n    marital_status: '',\n    employment_type: '',\n    employment_years: undefined,\n    rfc: '',\n    curp: '',\n    monthly_income: undefined,\n    additional_income: undefined,\n    monthly_expenses: undefined,\n    other_loan_balances: undefined,\n    bank_name: '',\n    bank_clabe: '',\n    bank_account_number: '',\n    bank_account_type: '',\n    bank_account_origin: '',\n    company_id: '',\n    // Nuevos campos\n    street_number_ext: '',\n    street_number_int: '',\n    neighborhood: '',\n    home_phone: '',\n    birth_state: '',\n    nationality: '',\n    job_position: '',\n    employer_name: '',\n    employer_phone: '',\n    employer_address: '',\n    employer_activity: '',\n    mortgage_payment: undefined,\n    rent_payment: undefined,\n    dependent_persons: undefined,\n    income_frequency: '',\n    payment_method: '',\n    credit_purpose: '',\n    spouse_paternal_surname: '',\n    spouse_maternal_surname: '',\n    reference1_name: '',\n    reference1_relationship: '',\n    reference1_address: '',\n    reference1_phone: '',\n    reference2_name: '',\n    reference2_relationship: '',\n    reference2_address: '',\n    reference2_phone: '',\n    ...initialData,\n  });\n\n  // Estado para errores de validación\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  \n  // Estado para documentos\n  const [documents, setDocuments] = useState<ClientDocument[]>([]);\n  \n  // Estado para el paso actual del formulario\n  const [currentStep, setCurrentStep] = useState(1);\n  \n  // Estado para empresas\n  const [companies, setCompanies] = useState<{id: string, name: string}[]>([]);\n  const [loadingCompanies, setLoadingCompanies] = useState(true);\n  \n  // Calcular el progreso de llenado de formulario\n  const calculateProgress = () => {\n    let filledFields = 0;\n    let totalFields = 0;\n    \n    // Paso 1: Datos Personales Básicos\n    const step1Fields = ['first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone', \n      'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address', 'city', 'state', \n      'postal_code', 'company_id', 'street_number_ext', 'street_number_int', 'neighborhood', \n      'home_phone', 'birth_state', 'nationality', 'spouse_paternal_surname', 'spouse_maternal_surname',\n      'dependent_persons'];\n    totalFields += step1Fields.length;\n    filledFields += step1Fields.filter(field => formData[field as keyof Partial<Client>]).length;\n    \n    // Paso 2: Detalles Financieros y Empleo\n    const step2Fields = ['employment_type', 'employment_years', 'job_position', 'employer_name', \n      'employer_phone', 'employer_address', 'employer_activity', 'monthly_income', 'additional_income', \n      'monthly_expenses', 'other_loan_balances', 'mortgage_payment', 'rent_payment', \n      'income_frequency', 'payment_method', 'credit_purpose'];\n    totalFields += step2Fields.length;\n    filledFields += step2Fields.filter(field => formData[field as keyof Partial<Client>] !== undefined && formData[field as keyof Partial<Client>] !== '').length;\n    \n    // Paso 3: Datos Bancarios y Referencias\n    const step3Fields = ['bank_name', 'bank_clabe', 'bank_account_number', 'bank_account_type', \n      'bank_account_origin', 'reference1_name', 'reference1_relationship', 'reference1_address', \n      'reference1_phone', 'reference2_name', 'reference2_relationship', 'reference2_address', \n      'reference2_phone'];\n    totalFields += step3Fields.length;\n    filledFields += step3Fields.filter(field => formData[field as keyof Partial<Client>]).length;\n    \n    // Calcular porcentaje\n    return Math.round((filledFields / totalFields) * 100);\n  };\n  \n  // State for section saving\n  const [sectionSubmitting, setSectionSubmitting] = useState(false);\n\n  // Use useMemo instead of useState + useEffect to calculate progress\n  const progress = useMemo(() => calculateProgress(), [\n    // Adding all form fields as dependencies\n    formData.first_name,\n    formData.paternal_surname,\n    formData.maternal_surname,\n    // (additional dependencies would go here)\n  ]);\n\n  // Helper function to collect fields for current step\n  const collectFieldsForStep = (data: Partial<Client>, step: number): Partial<Client> => {\n    const partialData: Partial<Client> = {};\n    \n    // This is a simplified version - your actual implementation may be more complex\n    if (step === 1) {\n      // Personal info fields\n      Object.assign(partialData, {\n        first_name: data.first_name,\n        paternal_surname: data.paternal_surname,\n        maternal_surname: data.maternal_surname,\n        // Add more fields as needed\n      });\n    } else if (step === 2) {\n      // Financial info fields\n      Object.assign(partialData, {\n        employment_type: data.employment_type,\n        employment_years: data.employment_years,\n        // Add more fields as needed\n      });\n    } else if (step === 3) {\n      // Bank and reference info\n      Object.assign(partialData, {\n        bank_name: data.bank_name,\n        bank_clabe: data.bank_clabe,\n        // Add more fields as needed\n      });\n    }\n    \n    return partialData;\n  };\n\n  // Event handlers\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value, type } = e.target as HTMLInputElement;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'number' ? (value === '' ? undefined : parseFloat(value)) : value\n    }));\n  };\n\n  const handleDocumentAdded = (document: ClientDocument) => {\n    setDocuments(prev => [...prev, document]);\n  };\n\n  const handleDocumentRemoved = (index: number) => {\n    setDocuments(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const handleCompanyChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      company_id: value\n    }));\n  };\n\n  // Step navigation\n  const nextStep = () => {\n    if (currentStep < 4) {\n      setCurrentStep(prev => prev + 1);\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep > 1) {\n      setCurrentStep(prev => prev - 1);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    // Submit form logic would go here\n    try {\n      await onSubmit(formData, documents);\n    } catch (error: any) {\n      console.error('Error submitting form:', error);\n    }\n  };\n\n  // Fetch companies on component mount\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setLoadingCompanies(true);\n        const response = await executeQuery('SELECT id, name FROM companies ORDER BY name ASC');\n        if (response && response.data) {\n          setCompanies(response.data);\n        }\n      } catch (err) {\n        console.error('Error fetching companies:', err);\n      } finally {\n        setLoadingCompanies(false);\n      }\n    };\n\n    fetchCompanies();\n  }, []);\n\n  // Render function for different steps\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return (\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-bold\">Datos Personales</h3>\n            \n            {/* This would contain all your step 1 form fields */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"form-control\">\n                <label className=\"label\">\n                  <span className=\"label-text\">Nombre(s)</span>\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"first_name\"\n                  value={formData.first_name || ''}\n                  onChange={handleChange}\n                  className=\"input input-bordered\"\n                />\n              </div>\n              {/* More fields would go here */}\n            </div>\n          </div>\n        );\n      case 2:\n        return (\n          <div className=\"space-y-6\">\n            <h3 className=\"text-lg font-semibold\">Información Laboral</h3>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"form-control w-full\">\n                <label className=\"label\">\n                  <span className=\"label-text\">Tipo de Empleo</span>\n                </label>\n                <select\n                  name=\"employment_type\"\n                  value={formData.employment_type || ''}\n                  onChange={handleChange}\n                  className={`select select-bordered w-full ${errors.employment_type ? 'select-error' : ''}`}\n                >\n                  <option value=\"\">Seleccionar</option>\n                  {EMPLOYMENT_TYPES.map(option => (\n                    <option key={option.value} value={option.value}>{option.label}</option>\n                  ))}\n                </select>\n              </div>\n              {/* More fields would go here */}\n            </div>\n          </div>\n        );\n      case 3:\n        return (\n          <div className=\"space-y-6\">\n            <h3 className=\"text-lg font-semibold\">Datos Bancarios</h3>\n            \n            {/* Bank account form fields would go here */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"form-control w-full\">\n                <label className=\"label\">\n                  <span className=\"label-text\">Banco</span>\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"bank_name\"\n                  value={formData.bank_name || ''}\n                  onChange={handleChange}\n                  className=\"input input-bordered\"\n                />\n              </div>\n              {/* More fields would go here */}\n            </div>\n          </div>\n        );\n      case 4:\n        return (\n          <div className=\"space-y-6\">\n            <h3 className=\"text-lg font-semibold\">Documentos</h3>\n            <DocumentUploader\n              onDocumentAdded={handleDocumentAdded}\n              onDocumentRemoved={handleDocumentRemoved}\n              existingDocuments={documents}\n              categories={DOCUMENT_CATEGORIES}\n            />\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-2\">\n            <h2 className=\"text-xl font-bold\">\n              {initialData?.id ? 'Editar Cliente' : 'Nuevo Cliente'}\n            </h2>\n            <div className=\"text-sm\">\n              Paso {currentStep} de 4\n            </div>\n          </div>\n          \n          <div className=\"w-full bg-gray-200 rounded-full h-2.5 mb-4\">\n            <div \n              className=\"bg-blue-600 h-2.5 rounded-full\" \n              style={{ width: `${progress}%` }}\n            ></div>\n          </div>\n        </div>\n        \n        {renderStep()}\n        \n        <div className=\"mt-8 flex justify-between\">\n          {currentStep > 1 && (\n            <button \n              type=\"button\" \n              onClick={prevStep}\n              className=\"btn btn-outline\"\n            >\n              Anterior\n            </button>\n          )}\n          \n          <div className=\"flex space-x-2 ml-auto\">\n            {currentStep < 4 ? (\n              <button \n                type=\"button\" \n                onClick={nextStep}\n                className=\"btn btn-primary\"\n              >\n                Siguiente\n              </button>\n            ) : (\n              <button \n                type=\"submit\" \n                className=\"btn btn-success\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? 'Guardando...' : 'Guardar Cliente'}\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ClientForm; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,YAAY,QAAQ,2BAA2B;;AAExD;;AAQA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA;AACA,MAAMC,mBAAmB,GAAG,CAC1B;EAAEC,KAAK,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAyB,CAAC,EAC5D;EAAED,KAAK,EAAE,uBAAuB;EAAEC,KAAK,EAAE;AAA2B,CAAC,EACrE;EAAED,KAAK,EAAE,sBAAsB;EAAEC,KAAK,EAAE;AAA0B,CAAC,EACnE;EAAED,KAAK,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAA8B,CAAC,EACjE;EAAED,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAuC,CAAC,EAC/D;EAAED,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAO,CAAC,EAChC;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAmB,CAAC,CAC9C;;AAED;AACA,MAAMC,gBAAgB,GAAG,CACvB;EAAEF,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAuB,CAAC,EACpD;EAAED,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,EAC5C;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAc,CAAC,EAC9C;EAAED,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,EAC5C;EAAED,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAO,CAAC,CACjC;;AAED;AACA,MAAME,oBAAoB,GAAG,CAC3B;EAAEH,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAY,CAAC,EACxC;EAAED,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAW,CAAC,EACtC;EAAED,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAe,CAAC,EAC9C;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAU,CAAC,EACpC;EAAED,KAAK,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAc,CAAC,CAC/C;;AAED;AACA,MAAMG,kBAAkB,GAAG,CACzB;EAAEJ,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EACpC;EAAED,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EACpC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EACtC;EAAED,KAAK,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAc,CAAC,CAC/C;;AAED;AACA,MAAMI,sBAAsB,GAAG,CAC7B;EAAEL,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EACtC;EAAED,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAY,CAAC,EAC1C;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EACtC;EAAED,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAY,CAAC,EAC1C;EAAED,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,EAC5C;EAAED,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAY,CAAC,EAC1C;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAClC;EAAED,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAY,CAAC,CAC3C;;AAED;AACA,MAAMK,oBAAoB,GAAG,CAC3B;EAAEN,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAgB,CAAC,EAClD;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAA4B,CAAC,EACxD;EAAED,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EACpC;EAAED,KAAK,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAyB,CAAC,CAC5D;;AAED;AACA,MAAMM,oBAAoB,GAAG,CAC3B;EAAEP,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAoB,CAAC,EACjD;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAoB,CAAC,EAChD;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAY,CAAC,EACrC;EAAED,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAY,CAAC,EAC1C;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAClC;EAAED,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAA0B,CAAC,EACrD;EAAED,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAO,CAAC,CACjC;;AAED;AACA,MAAMO,kBAAkB,GAAG,CACzB;EAAER,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAClC;EAAED,KAAK,EAAE,mBAAmB;EAAEC,KAAK,EAAE;AAAuB,CAAC,EAC7D;EAAED,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EACpC;EAAED,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAO,CAAC,CACjC;AAED,MAAMQ,UAAqC,GAAGA,CAAC;EAAEC,WAAW,GAAG,CAAC,CAAC;EAAEC,QAAQ;EAAEC,aAAa;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC7G,MAAMC,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEuB;EAAK,CAAC,GAAGrB,OAAO,CAAC,CAAC;;EAE1B;EACA,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAkB;IACxD6B,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE,EAAE;IACpBC,gBAAgB,EAAE,EAAE;IACpBC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,EAAE;IAClBC,eAAe,EAAE,EAAE;IACnBC,gBAAgB,EAAEC,SAAS;IAC3BC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,cAAc,EAAEH,SAAS;IACzBI,iBAAiB,EAAEJ,SAAS;IAC5BK,gBAAgB,EAAEL,SAAS;IAC3BM,mBAAmB,EAAEN,SAAS;IAC9BO,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,EAAE;IACdC,mBAAmB,EAAE,EAAE;IACvBC,iBAAiB,EAAE,EAAE;IACrBC,mBAAmB,EAAE,EAAE;IACvBC,UAAU,EAAE,EAAE;IACd;IACAC,iBAAiB,EAAE,EAAE;IACrBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,EAAE;IAClBC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,gBAAgB,EAAExB,SAAS;IAC3ByB,YAAY,EAAEzB,SAAS;IACvB0B,iBAAiB,EAAE1B,SAAS;IAC5B2B,gBAAgB,EAAE,EAAE;IACpBC,cAAc,EAAE,EAAE;IAClBC,cAAc,EAAE,EAAE;IAClBC,uBAAuB,EAAE,EAAE;IAC3BC,uBAAuB,EAAE,EAAE;IAC3BC,eAAe,EAAE,EAAE;IACnBC,uBAAuB,EAAE,EAAE;IAC3BC,kBAAkB,EAAE,EAAE;IACtBC,gBAAgB,EAAE,EAAE;IACpBC,eAAe,EAAE,EAAE;IACnBC,uBAAuB,EAAE,EAAE;IAC3BC,kBAAkB,EAAE,EAAE;IACtBC,gBAAgB,EAAE,EAAE;IACpB,GAAG9D;EACL,CAAC,CAAC;;EAEF;EACA,MAAM,CAAC+D,MAAM,EAAEC,SAAS,CAAC,GAAGpF,QAAQ,CAAyB,CAAC,CAAC,CAAC;;EAEhE;EACA,MAAM,CAACqF,SAAS,EAAEC,YAAY,CAAC,GAAGtF,QAAQ,CAAmB,EAAE,CAAC;;EAEhE;EACA,MAAM,CAACuF,WAAW,EAAEC,cAAc,CAAC,GAAGxF,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAM,CAACyF,SAAS,EAAEC,YAAY,CAAC,GAAG1F,QAAQ,CAA+B,EAAE,CAAC;EAC5E,MAAM,CAAC2F,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5F,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA,MAAM6F,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIC,YAAY,GAAG,CAAC;IACpB,IAAIC,WAAW,GAAG,CAAC;;IAEnB;IACA,MAAMC,WAAW,GAAG,CAAC,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,OAAO,EAAE,OAAO,EACzF,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EACnF,aAAa,EAAE,YAAY,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,cAAc,EACrF,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,yBAAyB,EAAE,yBAAyB,EAChG,mBAAmB,CAAC;IACtBD,WAAW,IAAIC,WAAW,CAACC,MAAM;IACjCH,YAAY,IAAIE,WAAW,CAACE,MAAM,CAACC,KAAK,IAAIxE,QAAQ,CAACwE,KAAK,CAA0B,CAAC,CAACF,MAAM;;IAE5F;IACA,MAAMG,WAAW,GAAG,CAAC,iBAAiB,EAAE,kBAAkB,EAAE,cAAc,EAAE,eAAe,EACzF,gBAAgB,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,mBAAmB,EAChG,kBAAkB,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,cAAc,EAC7E,kBAAkB,EAAE,gBAAgB,EAAE,gBAAgB,CAAC;IACzDL,WAAW,IAAIK,WAAW,CAACH,MAAM;IACjCH,YAAY,IAAIM,WAAW,CAACF,MAAM,CAACC,KAAK,IAAIxE,QAAQ,CAACwE,KAAK,CAA0B,KAAKxD,SAAS,IAAIhB,QAAQ,CAACwE,KAAK,CAA0B,KAAK,EAAE,CAAC,CAACF,MAAM;;IAE7J;IACA,MAAMI,WAAW,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,qBAAqB,EAAE,mBAAmB,EACxF,qBAAqB,EAAE,iBAAiB,EAAE,yBAAyB,EAAE,oBAAoB,EACzF,kBAAkB,EAAE,iBAAiB,EAAE,yBAAyB,EAAE,oBAAoB,EACtF,kBAAkB,CAAC;IACrBN,WAAW,IAAIM,WAAW,CAACJ,MAAM;IACjCH,YAAY,IAAIO,WAAW,CAACH,MAAM,CAACC,KAAK,IAAIxE,QAAQ,CAACwE,KAAK,CAA0B,CAAC,CAACF,MAAM;;IAE5F;IACA,OAAOK,IAAI,CAACC,KAAK,CAAET,YAAY,GAAGC,WAAW,GAAI,GAAG,CAAC;EACvD,CAAC;;EAED;EACA,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzG,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACA,MAAM0G,QAAQ,GAAGxG,OAAO,CAAC,MAAM2F,iBAAiB,CAAC,CAAC,EAAE;EAClD;EACAlE,QAAQ,CAACE,UAAU,EACnBF,QAAQ,CAACG,gBAAgB,EACzBH,QAAQ,CAACI;EACT;EAAA,CACD,CAAC;;EAEF;EACA,MAAM4E,oBAAoB,GAAGA,CAACC,IAAqB,EAAEC,IAAY,KAAsB;IACrF,MAAMC,WAA4B,GAAG,CAAC,CAAC;;IAEvC;IACA,IAAID,IAAI,KAAK,CAAC,EAAE;MACd;MACAE,MAAM,CAACC,MAAM,CAACF,WAAW,EAAE;QACzBjF,UAAU,EAAE+E,IAAI,CAAC/E,UAAU;QAC3BC,gBAAgB,EAAE8E,IAAI,CAAC9E,gBAAgB;QACvCC,gBAAgB,EAAE6E,IAAI,CAAC7E;QACvB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI8E,IAAI,KAAK,CAAC,EAAE;MACrB;MACAE,MAAM,CAACC,MAAM,CAACF,WAAW,EAAE;QACzBrE,eAAe,EAAEmE,IAAI,CAACnE,eAAe;QACrCC,gBAAgB,EAAEkE,IAAI,CAAClE;QACvB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAImE,IAAI,KAAK,CAAC,EAAE;MACrB;MACAE,MAAM,CAACC,MAAM,CAACF,WAAW,EAAE;QACzB5D,SAAS,EAAE0D,IAAI,CAAC1D,SAAS;QACzBC,UAAU,EAAEyD,IAAI,CAACzD;QACjB;MACF,CAAC,CAAC;IACJ;IAEA,OAAO2D,WAAW;EACpB,CAAC;;EAED;EACA,MAAMG,YAAY,GAAIC,CAAgF,IAAK;IACzG,MAAM;MAAEC,IAAI;MAAEzG,KAAK;MAAE0G;IAAK,CAAC,GAAGF,CAAC,CAACG,MAA0B;IAC1DzF,WAAW,CAAC0F,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC,IAAI,KAAK,QAAQ,GAAI1G,KAAK,KAAK,EAAE,GAAGiC,SAAS,GAAG4E,UAAU,CAAC7G,KAAK,CAAC,GAAIA;IAC/E,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM8G,mBAAmB,GAAIC,QAAwB,IAAK;IACxDnC,YAAY,CAACgC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEG,QAAQ,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,qBAAqB,GAAIC,KAAa,IAAK;IAC/CrC,YAAY,CAACgC,IAAI,IAAIA,IAAI,CAACpB,MAAM,CAAC,CAAC0B,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKF,KAAK,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMG,mBAAmB,GAAIZ,CAAuC,IAAK;IACvE,MAAM;MAAExG;IAAM,CAAC,GAAGwG,CAAC,CAACG,MAAM;IAC1BzF,WAAW,CAAC0F,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP/D,UAAU,EAAE7C;IACd,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMqH,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIxC,WAAW,GAAG,CAAC,EAAE;MACnBC,cAAc,CAAC8B,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAClC;EACF,CAAC;EAED,MAAMU,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIzC,WAAW,GAAG,CAAC,EAAE;MACnBC,cAAc,CAAC8B,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAClC;EACF,CAAC;EAED,MAAMW,YAAY,GAAG,MAAOf,CAAkB,IAAK;IACjDA,CAAC,CAACgB,cAAc,CAAC,CAAC;IAClB;IACA,IAAI;MACF,MAAM7G,QAAQ,CAACM,QAAQ,EAAE0D,SAAS,CAAC;IACrC,CAAC,CAAC,OAAO8C,KAAU,EAAE;MACnBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;EACAlI,SAAS,CAAC,MAAM;IACd,MAAMoI,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACFzC,mBAAmB,CAAC,IAAI,CAAC;QACzB,MAAM0C,QAAQ,GAAG,MAAMhI,YAAY,CAAC,kDAAkD,CAAC;QACvF,IAAIgI,QAAQ,IAAIA,QAAQ,CAAC1B,IAAI,EAAE;UAC7BlB,YAAY,CAAC4C,QAAQ,CAAC1B,IAAI,CAAC;QAC7B;MACF,CAAC,CAAC,OAAO2B,GAAG,EAAE;QACZH,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEI,GAAG,CAAC;MACjD,CAAC,SAAS;QACR3C,mBAAmB,CAAC,KAAK,CAAC;MAC5B;IACF,CAAC;IAEDyC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvB,QAAQjD,WAAW;MACjB,KAAK,CAAC;QACJ,oBACE/E,OAAA;UAAKiI,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBlI,OAAA;YAAIiI,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAGvDtI,OAAA;YAAKiI,SAAS,EAAC,uCAAuC;YAAAC,QAAA,eACpDlI,OAAA;cAAKiI,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BlI,OAAA;gBAAOiI,SAAS,EAAC,OAAO;gBAAAC,QAAA,eACtBlI,OAAA;kBAAMiI,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxC,CAAC,eACRtI,OAAA;gBACE4G,IAAI,EAAC,MAAM;gBACXD,IAAI,EAAC,YAAY;gBACjBzG,KAAK,EAAEiB,QAAQ,CAACE,UAAU,IAAI,EAAG;gBACjCkH,QAAQ,EAAE9B,YAAa;gBACvBwB,SAAS,EAAC;cAAsB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAEV,KAAK,CAAC;QACJ,oBACEtI,OAAA;UAAKiI,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBlI,OAAA;YAAIiI,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAE9DtI,OAAA;YAAKiI,SAAS,EAAC,uCAAuC;YAAAC,QAAA,eACpDlI,OAAA;cAAKiI,SAAS,EAAC,qBAAqB;cAAAC,QAAA,gBAClClI,OAAA;gBAAOiI,SAAS,EAAC,OAAO;gBAAAC,QAAA,eACtBlI,OAAA;kBAAMiI,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAc;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C,CAAC,eACRtI,OAAA;gBACE2G,IAAI,EAAC,iBAAiB;gBACtBzG,KAAK,EAAEiB,QAAQ,CAACc,eAAe,IAAI,EAAG;gBACtCsG,QAAQ,EAAE9B,YAAa;gBACvBwB,SAAS,EAAE,iCAAiCtD,MAAM,CAAC1C,eAAe,GAAG,cAAc,GAAG,EAAE,EAAG;gBAAAiG,QAAA,gBAE3FlI,OAAA;kBAAQE,KAAK,EAAC,EAAE;kBAAAgI,QAAA,EAAC;gBAAW;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACpClI,gBAAgB,CAACoI,GAAG,CAACC,MAAM,iBAC1BzI,OAAA;kBAA2BE,KAAK,EAAEuI,MAAM,CAACvI,KAAM;kBAAAgI,QAAA,EAAEO,MAAM,CAACtI;gBAAK,GAAhDsI,MAAM,CAACvI,KAAK;kBAAAiI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAA6C,CACvE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAEV,KAAK,CAAC;QACJ,oBACEtI,OAAA;UAAKiI,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBlI,OAAA;YAAIiI,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAG1DtI,OAAA;YAAKiI,SAAS,EAAC,uCAAuC;YAAAC,QAAA,eACpDlI,OAAA;cAAKiI,SAAS,EAAC,qBAAqB;cAAAC,QAAA,gBAClClI,OAAA;gBAAOiI,SAAS,EAAC,OAAO;gBAAAC,QAAA,eACtBlI,OAAA;kBAAMiI,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC,eACRtI,OAAA;gBACE4G,IAAI,EAAC,MAAM;gBACXD,IAAI,EAAC,WAAW;gBAChBzG,KAAK,EAAEiB,QAAQ,CAACuB,SAAS,IAAI,EAAG;gBAChC6F,QAAQ,EAAE9B,YAAa;gBACvBwB,SAAS,EAAC;cAAsB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAEV,KAAK,CAAC;QACJ,oBACEtI,OAAA;UAAKiI,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBlI,OAAA;YAAIiI,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrDtI,OAAA,CAACJ,gBAAgB;YACf8I,eAAe,EAAE1B,mBAAoB;YACrC2B,iBAAiB,EAAEzB,qBAAsB;YACzC0B,iBAAiB,EAAE/D,SAAU;YAC7BgE,UAAU,EAAE5I;UAAoB;YAAAkI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAEV;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,oBACEtI,OAAA;IAAKiI,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlI,OAAA;MAAMa,QAAQ,EAAE4G,YAAa;MAAAS,QAAA,gBAC3BlI,OAAA;QAAKiI,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBlI,OAAA;UAAKiI,SAAS,EAAC,wCAAwC;UAAAC,QAAA,gBACrDlI,OAAA;YAAIiI,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC9BtH,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEkI,EAAE,GAAG,gBAAgB,GAAG;UAAe;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,eACLtI,OAAA;YAAKiI,SAAS,EAAC,SAAS;YAAAC,QAAA,GAAC,OAClB,EAACnD,WAAW,EAAC,OACpB;UAAA;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENtI,OAAA;UAAKiI,SAAS,EAAC,4CAA4C;UAAAC,QAAA,eACzDlI,OAAA;YACEiI,SAAS,EAAC,gCAAgC;YAC1Cc,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAG9C,QAAQ;YAAI;UAAE;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELN,UAAU,CAAC,CAAC,eAEbhI,OAAA;QAAKiI,SAAS,EAAC,2BAA2B;QAAAC,QAAA,GACvCnD,WAAW,GAAG,CAAC,iBACd/E,OAAA;UACE4G,IAAI,EAAC,QAAQ;UACbqC,OAAO,EAAEzB,QAAS;UAClBS,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC5B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT,eAEDtI,OAAA;UAAKiI,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EACpCnD,WAAW,GAAG,CAAC,gBACd/E,OAAA;YACE4G,IAAI,EAAC,QAAQ;YACbqC,OAAO,EAAE1B,QAAS;YAClBU,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC5B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAETtI,OAAA;YACE4G,IAAI,EAAC,QAAQ;YACbqB,SAAS,EAAC,iBAAiB;YAC3BiB,QAAQ,EAAEnI,YAAa;YAAAmH,QAAA,EAEtBnH,YAAY,GAAG,cAAc,GAAG;UAAiB;YAAAoH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C;QACT;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtH,EAAA,CAlXIL,UAAqC;EAAA,QACxBhB,WAAW,EACXE,OAAO;AAAA;AAAAsJ,EAAA,GAFpBxI,UAAqC;AAoX3C,eAAeA,UAAU;AAAC,IAAAwI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}