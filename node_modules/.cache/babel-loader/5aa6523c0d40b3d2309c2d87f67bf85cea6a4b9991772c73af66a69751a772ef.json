{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNotifications } from '../../contexts/NotificationContext';\nimport { setNotificationHandler } from '../../services/applicationService';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * AppShell component that sets up application-wide features like notifications\n */\nconst AppShell = ({\n  children\n}) => {\n  _s();\n  const {\n    notifyNewApplication\n  } = useNotifications();\n\n  // Register the notification handler when the component mounts\n  useEffect(() => {\n    // Register the notification handler from NotificationContext\n    setNotificationHandler(notifyNewApplication);\n\n    // Cleanup when component unmounts\n    return () => {\n      // Reset the handler to avoid memory leaks\n      setNotificationHandler(() => {});\n    };\n  }, [notifyNewApplication]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(AppShell, \"QivcF3AjlIPRNOj7zZ0UXZERzcI=\", false, function () {\n  return [useNotifications];\n});\n_c = AppShell;\nexport default AppShell;\nvar _c;\n$RefreshReg$(_c, \"AppShell\");","map":{"version":3,"names":["React","useEffect","useNotifications","setNotificationHandler","Fragment","_Fragment","jsxDEV","_jsxDEV","AppShell","children","_s","notifyNewApplication","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/AppShell.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNotifications } from '../../contexts/NotificationContext';\nimport { setNotificationHandler } from '../../services/applicationService';\n\ninterface AppShellProps {\n  children: React.ReactNode;\n}\n\n/**\n * AppShell component that sets up application-wide features like notifications\n */\nconst AppShell: React.FC<AppShellProps> = ({ children }) => {\n  const { notifyNewApplication } = useNotifications();\n  \n  // Register the notification handler when the component mounts\n  useEffect(() => {\n    // Register the notification handler from NotificationContext\n    setNotificationHandler(notifyNewApplication);\n    \n    // Cleanup when component unmounts\n    return () => {\n      // Reset the handler to avoid memory leaks\n      setNotificationHandler(() => {});\n    };\n  }, [notifyNewApplication]);\n  \n  return (\n    <>\n      {children}\n    </>\n  );\n};\n\nexport default AppShell; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,sBAAsB,QAAQ,mCAAmC;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAM3E;AACA;AACA;AACA,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC;EAAqB,CAAC,GAAGT,gBAAgB,CAAC,CAAC;;EAEnD;EACAD,SAAS,CAAC,MAAM;IACd;IACAE,sBAAsB,CAACQ,oBAAoB,CAAC;;IAE5C;IACA,OAAO,MAAM;MACX;MACAR,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC;IAClC,CAAC;EACH,CAAC,EAAE,CAACQ,oBAAoB,CAAC,CAAC;EAE1B,oBACEJ,OAAA,CAAAF,SAAA;IAAAI,QAAA,EACGA;EAAQ,gBACT,CAAC;AAEP,CAAC;AAACC,EAAA,CApBIF,QAAiC;EAAA,QACJN,gBAAgB;AAAA;AAAAU,EAAA,GAD7CJ,QAAiC;AAsBvC,eAAeA,QAAQ;AAAC,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}