{"ast":null,"code":"/**\n * Formatea un valor numérico a formato de moneda\n * @param amount Monto a formatear\n * @param options Opciones de formato\n * @returns String formateado como moneda\n */export const formatCurrency=function(amount){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(amount===undefined||amount===null)return\"$0.00\";const{currency='MXN',maximumFractionDigits=2,minimumFractionDigits=2}=options;return new Intl.NumberFormat('es-MX',{style:'currency',currency,maximumFractionDigits,minimumFractionDigits}).format(amount);};/**\n * Formatea una fecha a formato legible\n * @param dateString String de fecha para formatear\n * @param format Formato deseado\n * @returns String de fecha formateada\n */export const formatDate=function(dateString){let format=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'short';if(!dateString)return'N/A';try{const date=new Date(dateString);// Verificar que la fecha es válida\nif(isNaN(date.getTime()))return'Fecha inválida';if(format==='short'){return date.toLocaleDateString('es-MX',{year:'numeric',month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit',second:'2-digit'});}if(format==='datetime'){return date.toLocaleDateString('es-MX',{year:'numeric',month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit',second:'2-digit'});}if(format==='long'){return date.toLocaleDateString('es-MX',{year:'numeric',month:'long',day:'numeric',hour:'2-digit',minute:'2-digit',second:'2-digit'});}if(format==='relative'){const now=new Date();const diffMs=now.getTime()-date.getTime();const diffSecs=Math.floor(diffMs/1000);const diffMins=Math.floor(diffSecs/60);const diffHours=Math.floor(diffMins/60);const diffDays=Math.floor(diffHours/24);if(diffSecs<60)return'Hace unos segundos';if(diffMins<60)return`Hace ${diffMins} min${diffMins>1?'s':''}`;if(diffHours<24)return`Hace ${diffHours} hora${diffHours>1?'s':''}`;if(diffDays<7)return`Hace ${diffDays} día${diffDays>1?'s':''}`;return date.toLocaleDateString('es-MX',{year:'numeric',month:'short',day:'numeric'});}return dateString;}catch(error){console.error('Error formateando fecha:',error);return dateString;}};","map":{"version":3,"names":["formatCurrency","amount","options","arguments","length","undefined","currency","maximumFractionDigits","minimumFractionDigits","Intl","NumberFormat","style","format","formatDate","dateString","date","Date","isNaN","getTime","toLocaleDateString","year","month","day","hour","minute","second","now","diffMs","diffSecs","Math","floor","diffMins","diffHours","diffDays","error","console"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/utils/formatters.ts"],"sourcesContent":["/**\n * Formatea un valor numérico a formato de moneda\n * @param amount Monto a formatear\n * @param options Opciones de formato\n * @returns String formateado como moneda\n */\nexport const formatCurrency = (\n  amount: number | undefined | null,\n  options: {\n    currency?: string;\n    maximumFractionDigits?: number;\n    minimumFractionDigits?: number;\n  } = {}\n): string => {\n  if (amount === undefined || amount === null) return \"$0.00\";\n  \n  const {\n    currency = 'MXN',\n    maximumFractionDigits = 2,\n    minimumFractionDigits = 2,\n  } = options;\n  \n  return new Intl.NumberFormat('es-MX', {\n    style: 'currency',\n    currency,\n    maximumFractionDigits,\n    minimumFractionDigits\n  }).format(amount);\n};\n\n/**\n * Formatea una fecha a formato legible\n * @param dateString String de fecha para formatear\n * @param format Formato deseado\n * @returns String de fecha formateada\n */\nexport const formatDate = (\n  dateString: string | undefined | null,\n  format: 'short' | 'long' | 'relative' | 'datetime' = 'short'\n): string => {\n  if (!dateString) return 'N/A';\n  \n  try {\n    const date = new Date(dateString);\n    \n    // Verificar que la fecha es válida\n    if (isNaN(date.getTime())) return 'Fecha inválida';\n    \n    if (format === 'short') {\n      return date.toLocaleDateString('es-MX', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n    }\n    \n    if (format === 'datetime') {\n      return date.toLocaleDateString('es-MX', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n      });\n    }\n    \n    if (format === 'long') {\n      return date.toLocaleDateString('es-MX', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n    }\n    \n    if (format === 'relative') {\n      const now = new Date();\n      const diffMs = now.getTime() - date.getTime();\n      const diffSecs = Math.floor(diffMs / 1000);\n      const diffMins = Math.floor(diffSecs / 60);\n      const diffHours = Math.floor(diffMins / 60);\n      const diffDays = Math.floor(diffHours / 24);\n      \n      if (diffSecs < 60) return 'Hace unos segundos';\n      if (diffMins < 60) return `Hace ${diffMins} min${diffMins > 1 ? 's' : ''}`;\n      if (diffHours < 24) return `Hace ${diffHours} hora${diffHours > 1 ? 's' : ''}`;\n      if (diffDays < 7) return `Hace ${diffDays} día${diffDays > 1 ? 's' : ''}`;\n      \n      return date.toLocaleDateString('es-MX', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n      });\n    }\n    \n    return dateString;\n  } catch (error) {\n    console.error('Error formateando fecha:', error);\n    return dateString;\n  }\n}; "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAA,cAAc,CAAG,QAAAA,CAC5BC,MAAiC,CAMtB,IALX,CAAAC,OAIC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAEN,GAAIF,MAAM,GAAKI,SAAS,EAAIJ,MAAM,GAAK,IAAI,CAAE,MAAO,OAAO,CAE3D,KAAM,CACJK,QAAQ,CAAG,KAAK,CAChBC,qBAAqB,CAAG,CAAC,CACzBC,qBAAqB,CAAG,CAC1B,CAAC,CAAGN,OAAO,CAEX,MAAO,IAAI,CAAAO,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CACpCC,KAAK,CAAE,UAAU,CACjBL,QAAQ,CACRC,qBAAqB,CACrBC,qBACF,CAAC,CAAC,CAACI,MAAM,CAACX,MAAM,CAAC,CACnB,CAAC,CAED;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAY,UAAU,CAAG,QAAAA,CACxBC,UAAqC,CAE1B,IADX,CAAAF,MAAkD,CAAAT,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,OAAO,CAE5D,GAAI,CAACW,UAAU,CAAE,MAAO,KAAK,CAE7B,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,UAAU,CAAC,CAEjC;AACA,GAAIG,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAAE,MAAO,gBAAgB,CAElD,GAAIN,MAAM,GAAK,OAAO,CAAE,CACtB,MAAO,CAAAG,IAAI,CAACI,kBAAkB,CAAC,OAAO,CAAE,CACtCC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,SAAS,CAChBC,GAAG,CAAE,SAAS,CACdC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,SACV,CAAC,CAAC,CACJ,CAEA,GAAIb,MAAM,GAAK,UAAU,CAAE,CACzB,MAAO,CAAAG,IAAI,CAACI,kBAAkB,CAAC,OAAO,CAAE,CACtCC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,SAAS,CAChBC,GAAG,CAAE,SAAS,CACdC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,SACV,CAAC,CAAC,CACJ,CAEA,GAAIb,MAAM,GAAK,MAAM,CAAE,CACrB,MAAO,CAAAG,IAAI,CAACI,kBAAkB,CAAC,OAAO,CAAE,CACtCC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,MAAM,CACbC,GAAG,CAAE,SAAS,CACdC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,SACV,CAAC,CAAC,CACJ,CAEA,GAAIb,MAAM,GAAK,UAAU,CAAE,CACzB,KAAM,CAAAc,GAAG,CAAG,GAAI,CAAAV,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAW,MAAM,CAAGD,GAAG,CAACR,OAAO,CAAC,CAAC,CAAGH,IAAI,CAACG,OAAO,CAAC,CAAC,CAC7C,KAAM,CAAAU,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAG,IAAI,CAAC,CAC1C,KAAM,CAAAI,QAAQ,CAAGF,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAG,EAAE,CAAC,CAC1C,KAAM,CAAAI,SAAS,CAAGH,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAG,EAAE,CAAC,CAC3C,KAAM,CAAAE,QAAQ,CAAGJ,IAAI,CAACC,KAAK,CAACE,SAAS,CAAG,EAAE,CAAC,CAE3C,GAAIJ,QAAQ,CAAG,EAAE,CAAE,MAAO,oBAAoB,CAC9C,GAAIG,QAAQ,CAAG,EAAE,CAAE,MAAO,QAAQA,QAAQ,OAAOA,QAAQ,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,EAAE,CAC1E,GAAIC,SAAS,CAAG,EAAE,CAAE,MAAO,QAAQA,SAAS,QAAQA,SAAS,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,EAAE,CAC9E,GAAIC,QAAQ,CAAG,CAAC,CAAE,MAAO,QAAQA,QAAQ,OAAOA,QAAQ,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,EAAE,CAEzE,MAAO,CAAAlB,IAAI,CAACI,kBAAkB,CAAC,OAAO,CAAE,CACtCC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SACP,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAR,UAAU,CACnB,CAAE,MAAOoB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,CAAApB,UAAU,CACnB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}