{"ast":null,"code":"import { walkObject } from '@chakra-ui/utils';\nimport { getPseudoPropNames } from '../pseudos.mjs';\nimport { extractTokens, extractSemanticTokens } from './theme-tokens.mjs';\nfunction flattenTokens(theme) {\n  const tokens = extractTokens(theme);\n  const semanticTokens = extractSemanticTokens(theme);\n  const pseudoPropNames = getPseudoPropNames(theme);\n  const isSemanticCondition = key => pseudoPropNames.includes(key) || \"default\" === key;\n  const result = {};\n  walkObject(tokens, (value, path) => {\n    if (value == null) return;\n    result[path.join(\".\")] = {\n      isSemantic: false,\n      value\n    };\n  });\n  walkObject(semanticTokens, (value, path) => {\n    if (value == null) return;\n    result[path.join(\".\")] = {\n      isSemantic: true,\n      value\n    };\n  }, {\n    stop: value => Object.keys(value).every(isSemanticCondition)\n  });\n  return result;\n}\nexport { flattenTokens };","map":{"version":3,"names":["walkObject","getPseudoPropNames","extractTokens","extractSemanticTokens","flattenTokens","theme","tokens","semanticTokens","pseudoPropNames","isSemanticCondition","key","includes","result","value","path","join","isSemantic","stop","Object","keys","every"],"sources":["/Users/diegogg98/NEW CRM MAR18/node_modules/@chakra-ui/styled-system/dist/esm/create-theme-vars/flatten-tokens.mjs"],"sourcesContent":["import { walkObject } from '@chakra-ui/utils';\nimport { getPseudoPropNames } from '../pseudos.mjs';\nimport { extractTokens, extractSemanticTokens } from './theme-tokens.mjs';\n\nfunction flattenTokens(theme) {\n  const tokens = extractTokens(theme);\n  const semanticTokens = extractSemanticTokens(theme);\n  const pseudoPropNames = getPseudoPropNames(theme);\n  const isSemanticCondition = (key) => pseudoPropNames.includes(key) || \"default\" === key;\n  const result = {};\n  walkObject(tokens, (value, path) => {\n    if (value == null)\n      return;\n    result[path.join(\".\")] = { isSemantic: false, value };\n  });\n  walkObject(\n    semanticTokens,\n    (value, path) => {\n      if (value == null)\n        return;\n      result[path.join(\".\")] = { isSemantic: true, value };\n    },\n    {\n      stop: (value) => Object.keys(value).every(isSemanticCondition)\n    }\n  );\n  return result;\n}\n\nexport { flattenTokens };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,kBAAkB,QAAQ,gBAAgB;AACnD,SAASC,aAAa,EAAEC,qBAAqB,QAAQ,oBAAoB;AAEzE,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,MAAMC,MAAM,GAAGJ,aAAa,CAACG,KAAK,CAAC;EACnC,MAAME,cAAc,GAAGJ,qBAAqB,CAACE,KAAK,CAAC;EACnD,MAAMG,eAAe,GAAGP,kBAAkB,CAACI,KAAK,CAAC;EACjD,MAAMI,mBAAmB,GAAIC,GAAG,IAAKF,eAAe,CAACG,QAAQ,CAACD,GAAG,CAAC,IAAI,SAAS,KAAKA,GAAG;EACvF,MAAME,MAAM,GAAG,CAAC,CAAC;EACjBZ,UAAU,CAACM,MAAM,EAAE,CAACO,KAAK,EAAEC,IAAI,KAAK;IAClC,IAAID,KAAK,IAAI,IAAI,EACf;IACFD,MAAM,CAACE,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG;MAAEC,UAAU,EAAE,KAAK;MAAEH;IAAM,CAAC;EACvD,CAAC,CAAC;EACFb,UAAU,CACRO,cAAc,EACd,CAACM,KAAK,EAAEC,IAAI,KAAK;IACf,IAAID,KAAK,IAAI,IAAI,EACf;IACFD,MAAM,CAACE,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG;MAAEC,UAAU,EAAE,IAAI;MAAEH;IAAM,CAAC;EACtD,CAAC,EACD;IACEI,IAAI,EAAGJ,KAAK,IAAKK,MAAM,CAACC,IAAI,CAACN,KAAK,CAAC,CAACO,KAAK,CAACX,mBAAmB;EAC/D,CACF,CAAC;EACD,OAAOG,MAAM;AACf;AAEA,SAASR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}