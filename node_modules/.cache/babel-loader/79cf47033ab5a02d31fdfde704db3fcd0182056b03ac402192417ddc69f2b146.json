{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/pages/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChartBarIcon, CurrencyDollarIcon, UserGroupIcon, ClipboardDocumentCheckIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { USER_ROLES } from '../utils/constants/roles';\nimport { APPLICATION_TYPE_LABELS } from '../utils/constants/applications';\n\n// Componentes de UI\nimport MainLayout from '../components/layout/MainLayout';\nimport MetricCard from '../components/ui/charts/MetricCard';\nimport StatusDistributionChart from '../components/ui/charts/StatusDistributionChart';\nimport MonthlyApplicationsChart from '../components/ui/charts/MonthlyApplicationsChart';\nimport AmountRangeChart from '../components/ui/charts/AmountRangeChart';\nimport AdvisorPerformanceChart from '../components/ui/charts/AdvisorPerformanceChart';\n\n// Servicios\nimport { getGeneralDashboardStats, getAdvisorDashboardStats, getCompanyDashboardStats } from '../services/dashboardService';\n\n// Interfaces adicionales\n\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\n\n// Tipo combinado para stats con todas las propiedades posibles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _stats$statusCounts;\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState(null);\n  const [error, setError] = useState(null);\n  const [partialData, setPartialData] = useState(false);\n\n  // Formatear moneda (pesos)\n  const formatCurrency = value => {\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n      minimumFractionDigits: 2,\n      // Siempre mostrar 2 decimales\n      maximumFractionDigits: 2 // Siempre mostrar 2 decimales\n    }).format(numValue);\n  };\n\n  // Comprobar si el objeto es de tipo AdvisorStats\n  const isAdvisorStats = obj => {\n    return 'conversionRate' in obj && typeof obj.conversionRate === 'number';\n  };\n\n  // Función para cargar los datos del dashboard según el rol del usuario\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        console.log(\"Fetching dashboard data with user:\", user);\n        if (!user) {\n          setError(\"No hay sesión de usuario\");\n          setIsLoading(false);\n          return;\n        }\n\n        // Variable para almacenar los datos\n        let dashboardData = null;\n        const startTime = Date.now();\n\n        // Obtener estadísticas dependiendo del rol\n        if (user.role === USER_ROLES.SUPERADMIN) {\n          // SUPERADMIN ve estadísticas generales\n          console.log(\"Fetching general dashboard stats\");\n          dashboardData = await getGeneralDashboardStats();\n        } else if (user.role === USER_ROLES.ADVISOR) {\n          // ADVISOR ve estadísticas filtradas para las empresas que tiene asignadas\n          if (!user.entityId) {\n            console.error(\"Asesor sin ID de entidad\");\n            setError(\"Error: Asesor sin identificador válido\");\n            setIsLoading(false);\n            return;\n          }\n          console.log(\"Fetching advisor stats with ID:\", user.entityId);\n          try {\n            dashboardData = await getAdvisorDashboardStats(user.entityId);\n          } catch (advisorError) {\n            console.error(\"Error fetching advisor stats:\", advisorError);\n            setError(\"Error al cargar las estadísticas del asesor. Verifique la conexión al servidor MCP.\");\n            setPartialData(true);\n            // Continue with partial data\n          }\n        } else if (user.role === USER_ROLES.COMPANY_ADMIN) {\n          // COMPANY_ADMIN ve estadísticas de su empresa\n          if (!user.entityId) {\n            console.error(\"Admin de empresa sin ID de entidad\");\n            setError(\"Error: Administrador sin identificador válido\");\n            setIsLoading(false);\n            return;\n          }\n          console.log(\"Fetching company stats with ID:\", user.entityId);\n          try {\n            dashboardData = await getCompanyDashboardStats(user.entityId);\n          } catch (companyError) {\n            console.error(\"Error fetching company stats:\", companyError);\n            setError(\"Error al cargar las estadísticas de la empresa. Verifique la conexión al servidor MCP.\");\n            setPartialData(true);\n            // Continue with partial data\n          }\n        } else {\n          setError(\"Rol de usuario no reconocido\");\n          setIsLoading(false);\n          return;\n        }\n        const endTime = Date.now();\n        console.log(`Dashboard data fetched in ${endTime - startTime}ms:`, dashboardData);\n\n        // If we still don't have data at this point, create a default empty dashboard\n        if (!dashboardData) {\n          console.log(\"Creating default empty dashboard data\");\n          dashboardData = {\n            totalApplications: 0,\n            applicationsByStatus: [{\n              status: 'pending',\n              count: 0\n            }, {\n              status: 'approved',\n              count: 0\n            }, {\n              status: 'rejected',\n              count: 0\n            }],\n            avgAmount: 0,\n            minAmount: 0,\n            maxAmount: 0,\n            recentApplications: [],\n            applicationsByMonth: [{\n              month: new Date().toISOString().slice(0, 7),\n              count: 0\n            }],\n            totalApproved: 0,\n            totalRejected: 0,\n            totalPending: 0,\n            pendingApproval: 0,\n            totalClients: 0,\n            statusCounts: {\n              'pending': 0,\n              'approved': 0,\n              'rejected': 0\n            },\n            amountRanges: [{\n              range: '0-5,000',\n              count: 0\n            }, {\n              range: '5,001-10,000',\n              count: 0\n            }, {\n              range: '10,001+',\n              count: 0\n            }]\n          };\n          setPartialData(true);\n        }\n\n        // Actualizar el estado con los datos obtenidos\n        setStats(dashboardData);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching dashboard data:\", error);\n        setError(\"Error al cargar los datos del dashboard. Verifique la conexión al servidor MCP.\");\n        setPartialData(true);\n        setIsLoading(false);\n\n        // Set default empty stats to avoid UI errors\n        setStats({\n          totalApplications: 0,\n          applicationsByStatus: [{\n            status: 'error',\n            count: 1\n          }],\n          avgAmount: 0,\n          minAmount: 0,\n          maxAmount: 0,\n          recentApplications: [],\n          applicationsByMonth: [{\n            month: new Date().toISOString().slice(0, 7),\n            count: 0\n          }],\n          totalApproved: 0,\n          totalRejected: 0,\n          totalPending: 0,\n          pendingApproval: 0,\n          totalClients: 0\n        });\n      }\n    };\n    fetchDashboardData();\n  }, [user]);\n\n  // Obtener la etiqueta legible para el tipo de aplicación\n  const getApplicationTypeLabel = type => {\n    if (!type) return 'N/A';\n\n    // Normalizar el tipo a minúsculas para comparación\n    const normalizedType = type.toLowerCase();\n\n    // Verificar si es alguno de los tipos definidos en APPLICATION_TYPE_LABELS\n    for (const [key, value] of Object.entries(APPLICATION_TYPE_LABELS)) {\n      if (key.toLowerCase() === normalizedType || key.toLowerCase().includes(normalizedType) || normalizedType.includes(key.toLowerCase())) {\n        return value;\n      }\n    }\n\n    // Mapeo directo para valores específicos\n    // Este mapeo garantiza que los valores exactos de la base de datos se traduzcan correctamente\n    const typeMappings = {\n      'selected_plans': 'Planes Seleccionados',\n      'product_simulations': 'Simulación de Producto',\n      'cash_requests': 'Solicitud de Efectivo',\n      'auto_loan': 'Crédito Automotriz',\n      'car_backed_loan': 'Crédito con Garantía Automotriz',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n\n    // Buscar coincidencia exacta primero\n    if (typeMappings[normalizedType]) {\n      return typeMappings[normalizedType];\n    }\n\n    // Buscar una coincidencia parcial\n    for (const [key, value] of Object.entries(typeMappings)) {\n      if (normalizedType.includes(key) || key.includes(normalizedType)) {\n        return value;\n      }\n    }\n\n    // Si no hay coincidencia, retornar el valor original\n    return type;\n  };\n\n  // Si está cargando, mostrar indicador\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading loading-spinner loading-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si hay error, mostrar mensaje\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si no hay datos, mostrar mensaje\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No hay datos disponibles para mostrar en el dashboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), partialData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Total de Solicitudes\",\n          value: stats.totalApplications,\n          icon: /*#__PURE__*/_jsxDEV(ChartBarIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 19\n          }, this),\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Solicitudes Aprobadas\",\n          value: ((_stats$statusCounts = stats.statusCounts) === null || _stats$statusCounts === void 0 ? void 0 : _stats$statusCounts.approved) || 0,\n          previousValue: stats.previousMonthApproved,\n          icon: /*#__PURE__*/_jsxDEV(ClipboardDocumentCheckIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 19\n          }, this),\n          color: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Monto Promedio\",\n          value: stats.avgAmount,\n          formatValue: formatCurrency,\n          icon: /*#__PURE__*/_jsxDEV(CurrencyDollarIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 19\n          }, this),\n          color: \"indigo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), isAdvisorStats(stats) ? /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Tasa de Conversi\\xF3n\",\n          value: stats.conversionRate,\n          isPercentage: true,\n          icon: /*#__PURE__*/_jsxDEV(UserGroupIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 21\n          }, this),\n          color: \"purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Total de Clientes\",\n          value: 'totalClients' in stats && stats.totalClients ? Number(stats.totalClients) : 'No clients',\n          icon: /*#__PURE__*/_jsxDEV(UserGroupIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 21\n          }, this),\n          color: \"purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Solicitudes por Mes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), stats.applicationsByMonth && Array.isArray(stats.applicationsByMonth) && /*#__PURE__*/_jsxDEV(MonthlyApplicationsChart, {\n              data: stats.applicationsByMonth.map(item => ({\n                month: String(item.month || ''),\n                count: Number(item.count || 0)\n              })),\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Distribuci\\xF3n por Estado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatusDistributionChart, {\n              data: stats.applicationsByStatus.map(item => ({\n                status: String(item.status || ''),\n                count: Number(item.count || 0)\n              })),\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Distribuci\\xF3n por Monto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), stats.amountRanges && /*#__PURE__*/_jsxDEV(AmountRangeChart, {\n              data: stats.amountRanges,\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), (user === null || user === void 0 ? void 0 : user.role) === USER_ROLES.SUPERADMIN && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Rendimiento de Asesores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), stats.advisorPerformance && /*#__PURE__*/_jsxDEV(AdvisorPerformanceChart, {\n              data: stats.advisorPerformance,\n              height: 300,\n              title: \"\",\n              maxBars: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card bg-base-100 shadow-md mt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title text-lg font-semibold\",\n            children: \"Solicitudes Recientes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-zebra w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Cliente\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Tipo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Monto\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Estado\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Fecha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: stats.recentApplications && stats.recentApplications.length > 0 ? stats.recentApplications.map((app, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"hover cursor-pointer\",\n                  onClick: () => navigate(`/applications/${app.id}`),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: String(app.client_name || 'N/A')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: getApplicationTypeLabel(app.application_type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatCurrency(Number(app.amount || 0))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge badge-${String(app.status) === 'approved' ? 'success' : String(app.status) === 'rejected' ? 'error' : String(app.status) === 'pending' ? 'warning' : String(app.status) === 'in_review' ? 'info' : 'ghost'}`,\n                      children: String(app.status || 'N/A')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: app.created_at ? new Date(String(app.created_at)).toLocaleDateString() : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: 5,\n                    className: \"text-center\",\n                    children: \"No hay solicitudes recientes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"2uONEl0IvT3ffK3kW+iswzhuMjw=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ChartBarIcon","CurrencyDollarIcon","UserGroupIcon","ClipboardDocumentCheckIcon","useAuth","USER_ROLES","APPLICATION_TYPE_LABELS","MainLayout","MetricCard","StatusDistributionChart","MonthlyApplicationsChart","AmountRangeChart","AdvisorPerformanceChart","getGeneralDashboardStats","getAdvisorDashboardStats","getCompanyDashboardStats","jsxDEV","_jsxDEV","Dashboard","_s","_stats$statusCounts","navigate","user","isLoading","setIsLoading","stats","setStats","error","setError","partialData","setPartialData","formatCurrency","value","numValue","parseFloat","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","isAdvisorStats","obj","conversionRate","fetchDashboardData","console","log","dashboardData","startTime","Date","now","role","SUPERADMIN","ADVISOR","entityId","advisorError","COMPANY_ADMIN","companyError","endTime","totalApplications","applicationsByStatus","status","count","avgAmount","minAmount","maxAmount","recentApplications","applicationsByMonth","month","toISOString","slice","totalApproved","totalRejected","totalPending","pendingApproval","totalClients","statusCounts","amountRanges","range","getApplicationTypeLabel","type","normalizedType","toLowerCase","key","Object","entries","includes","typeMappings","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","icon","color","approved","previousValue","previousMonthApproved","formatValue","isPercentage","Number","Array","isArray","data","map","item","String","height","advisorPerformance","maxBars","length","app","index","onClick","id","client_name","application_type","amount","created_at","toLocaleDateString","colSpan","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChartBarIcon, CurrencyDollarIcon, UserGroupIcon, ClipboardDocumentCheckIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { USER_ROLES } from '../utils/constants/roles';\nimport { APPLICATION_TYPE_LABELS } from '../utils/constants/applications';\n\n// Componentes de UI\nimport MainLayout from '../components/layout/MainLayout';\nimport MetricCard from '../components/ui/charts/MetricCard';\nimport StatusDistributionChart from '../components/ui/charts/StatusDistributionChart';\nimport MonthlyApplicationsChart from '../components/ui/charts/MonthlyApplicationsChart';\nimport AmountRangeChart from '../components/ui/charts/AmountRangeChart';\nimport AdvisorPerformanceChart from '../components/ui/charts/AdvisorPerformanceChart';\n\n// Servicios\nimport {\n  DashboardStats,\n  AdvisorStats,\n  CompanyStats,\n  getGeneralDashboardStats,\n  getAdvisorDashboardStats,\n  getCompanyDashboardStats,\n} from '../services/dashboardService';\n\n// Interfaces adicionales\ninterface AmountRange {\n  range: string;\n  count: number;\n}\n\ninterface AdvisorPerformance {\n  advisor_name: string;\n  total_applications: number;\n  approved_applications?: number;\n}\n\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\ninterface ExtendedStats {\n  applications?: { [key: string]: number };\n  statusCounts?: { [key: string]: number };\n  previousMonthApproved?: number;\n  amountRanges?: AmountRange[];\n  advisorPerformance?: AdvisorPerformance[];\n}\n\n// Tipo combinado para stats con todas las propiedades posibles\ntype DashboardStatsType = (DashboardStats | AdvisorStats | CompanyStats) & ExtendedStats;\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState<DashboardStatsType | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [partialData, setPartialData] = useState(false);\n\n  // Formatear moneda (pesos)\n  const formatCurrency = (value: number | string) => {\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n      minimumFractionDigits: 2, // Siempre mostrar 2 decimales\n      maximumFractionDigits: 2, // Siempre mostrar 2 decimales\n    }).format(numValue);\n  };\n\n  // Comprobar si el objeto es de tipo AdvisorStats\n  const isAdvisorStats = (obj: DashboardStatsType): obj is AdvisorStats & ExtendedStats => {\n    return 'conversionRate' in obj && typeof obj.conversionRate === 'number';\n  };\n\n  // Función para cargar los datos del dashboard según el rol del usuario\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        \n        console.log(\"Fetching dashboard data with user:\", user);\n        \n        if (!user) {\n          setError(\"No hay sesión de usuario\");\n          setIsLoading(false);\n          return;\n        }\n        \n        // Variable para almacenar los datos\n        let dashboardData = null;\n        const startTime = Date.now();\n        \n        // Obtener estadísticas dependiendo del rol\n        if (user.role === USER_ROLES.SUPERADMIN) {\n          // SUPERADMIN ve estadísticas generales\n          console.log(\"Fetching general dashboard stats\");\n          dashboardData = await getGeneralDashboardStats();\n        } else if (user.role === USER_ROLES.ADVISOR) {\n          // ADVISOR ve estadísticas filtradas para las empresas que tiene asignadas\n          if (!user.entityId) {\n            console.error(\"Asesor sin ID de entidad\");\n            setError(\"Error: Asesor sin identificador válido\");\n            setIsLoading(false);\n            return;\n          }\n          \n          console.log(\"Fetching advisor stats with ID:\", user.entityId);\n          try {\n            dashboardData = await getAdvisorDashboardStats(user.entityId);\n          } catch (advisorError) {\n            console.error(\"Error fetching advisor stats:\", advisorError);\n            setError(\"Error al cargar las estadísticas del asesor. Verifique la conexión al servidor MCP.\");\n            setPartialData(true);\n            // Continue with partial data\n          }\n        } else if (user.role === USER_ROLES.COMPANY_ADMIN) {\n          // COMPANY_ADMIN ve estadísticas de su empresa\n          if (!user.entityId) {\n            console.error(\"Admin de empresa sin ID de entidad\");\n            setError(\"Error: Administrador sin identificador válido\");\n            setIsLoading(false);\n            return;\n          }\n          \n          console.log(\"Fetching company stats with ID:\", user.entityId);\n          try {\n            dashboardData = await getCompanyDashboardStats(user.entityId);\n          } catch (companyError) {\n            console.error(\"Error fetching company stats:\", companyError);\n            setError(\"Error al cargar las estadísticas de la empresa. Verifique la conexión al servidor MCP.\");\n            setPartialData(true);\n            // Continue with partial data\n          }\n        } else {\n          setError(\"Rol de usuario no reconocido\");\n          setIsLoading(false);\n          return;\n        }\n        \n        const endTime = Date.now();\n        console.log(`Dashboard data fetched in ${endTime - startTime}ms:`, dashboardData);\n        \n        // If we still don't have data at this point, create a default empty dashboard\n        if (!dashboardData) {\n          console.log(\"Creating default empty dashboard data\");\n          dashboardData = {\n            totalApplications: 0,\n            applicationsByStatus: [\n              { status: 'pending', count: 0 },\n              { status: 'approved', count: 0 },\n              { status: 'rejected', count: 0 }\n            ],\n            avgAmount: 0,\n            minAmount: 0,\n            maxAmount: 0,\n            recentApplications: [],\n            applicationsByMonth: [\n              { month: new Date().toISOString().slice(0, 7), count: 0 }\n            ],\n            totalApproved: 0,\n            totalRejected: 0,\n            totalPending: 0,\n            pendingApproval: 0,\n            totalClients: 0,\n            statusCounts: {\n              'pending': 0,\n              'approved': 0,\n              'rejected': 0\n            },\n            amountRanges: [\n              { range: '0-5,000', count: 0 },\n              { range: '5,001-10,000', count: 0 },\n              { range: '10,001+', count: 0 }\n            ]\n          };\n          setPartialData(true);\n        }\n        \n        // Actualizar el estado con los datos obtenidos\n        setStats(dashboardData);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching dashboard data:\", error);\n        setError(\"Error al cargar los datos del dashboard. Verifique la conexión al servidor MCP.\");\n        setPartialData(true);\n        setIsLoading(false);\n        \n        // Set default empty stats to avoid UI errors\n        setStats({\n          totalApplications: 0,\n          applicationsByStatus: [\n            { status: 'error', count: 1 }\n          ],\n          avgAmount: 0,\n          minAmount: 0,\n          maxAmount: 0,\n          recentApplications: [],\n          applicationsByMonth: [\n            { month: new Date().toISOString().slice(0, 7), count: 0 }\n          ],\n          totalApproved: 0,\n          totalRejected: 0,\n          totalPending: 0,\n          pendingApproval: 0,\n          totalClients: 0\n        });\n      }\n    };\n    \n    fetchDashboardData();\n  }, [user]);\n\n  // Obtener la etiqueta legible para el tipo de aplicación\n  const getApplicationTypeLabel = (type: string | null | undefined): string => {\n    if (!type) return 'N/A';\n    \n    // Normalizar el tipo a minúsculas para comparación\n    const normalizedType = type.toLowerCase();\n    \n    // Verificar si es alguno de los tipos definidos en APPLICATION_TYPE_LABELS\n    for (const [key, value] of Object.entries(APPLICATION_TYPE_LABELS)) {\n      if (key.toLowerCase() === normalizedType || key.toLowerCase().includes(normalizedType) || normalizedType.includes(key.toLowerCase())) {\n        return value;\n      }\n    }\n    \n    // Mapeo directo para valores específicos\n    // Este mapeo garantiza que los valores exactos de la base de datos se traduzcan correctamente\n    const typeMappings: Record<string, string> = {\n      'selected_plans': 'Planes Seleccionados',\n      'product_simulations': 'Simulación de Producto',\n      'cash_requests': 'Solicitud de Efectivo',\n      'auto_loan': 'Crédito Automotriz',\n      'car_backed_loan': 'Crédito con Garantía Automotriz',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n    \n    // Buscar coincidencia exacta primero\n    if (typeMappings[normalizedType]) {\n      return typeMappings[normalizedType];\n    }\n    \n    // Buscar una coincidencia parcial\n    for (const [key, value] of Object.entries(typeMappings)) {\n      if (normalizedType.includes(key) || key.includes(normalizedType)) {\n        return value;\n      }\n    }\n    \n    // Si no hay coincidencia, retornar el valor original\n    return type;\n  };\n\n  // Si está cargando, mostrar indicador\n  if (isLoading) {\n    return (\n      <MainLayout>\n        <div className=\"flex justify-center items-center h-full p-8\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"loading loading-spinner loading-lg\"></span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si hay error, mostrar mensaje\n  if (error) {\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-error\">\n            <span>{error}</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si no hay datos, mostrar mensaje\n  if (!stats) {\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-info\">\n            <span>No hay datos disponibles para mostrar en el dashboard.</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"p-6 space-y-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">Dashboard</h1>\n\n        {partialData && (\n          <div className=\"alert alert-warning mb-4\">\n            <span>Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.</span>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert alert-error mb-4\">\n            <span>{error}</span>\n          </div>\n        )}\n\n        {/* Tarjetas de métricas principales */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <MetricCard\n            title=\"Total de Solicitudes\"\n            value={stats.totalApplications}\n            icon={<ChartBarIcon className=\"h-5 w-5\" />}\n            color=\"blue\"\n          />\n          <MetricCard\n            title=\"Solicitudes Aprobadas\"\n            value={stats.statusCounts?.approved || 0}\n            previousValue={stats.previousMonthApproved}\n            icon={<ClipboardDocumentCheckIcon className=\"h-5 w-5\" />}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Monto Promedio\"\n            value={stats.avgAmount}\n            formatValue={formatCurrency}\n            icon={<CurrencyDollarIcon className=\"h-5 w-5\" />}\n            color=\"indigo\"\n          />\n          {isAdvisorStats(stats) ? (\n            <MetricCard\n              title=\"Tasa de Conversión\"\n              value={stats.conversionRate}\n              isPercentage={true}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          ) : (\n            <MetricCard\n              title=\"Total de Clientes\"\n              value={'totalClients' in stats && stats.totalClients ? Number(stats.totalClients) : 'No clients'}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          )}\n        </div>\n\n        {/* Gráficos principales */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Solicitudes por Mes</h2>\n              {/* Validar que applicationsByMonth existe y es un array */}\n              {stats.applicationsByMonth && Array.isArray(stats.applicationsByMonth) && (\n                <MonthlyApplicationsChart\n                  data={stats.applicationsByMonth.map(item => ({\n                    month: String(item.month || ''),\n                    count: Number(item.count || 0)\n                  }))}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Estado</h2>\n              <StatusDistributionChart\n                data={stats.applicationsByStatus.map(item => ({\n                  status: String(item.status || ''),\n                  count: Number(item.count || 0)\n                }))}\n                height={300}\n                title=\"\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Gráficos secundarios */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Monto</h2>\n              {stats.amountRanges && (\n                <AmountRangeChart\n                  data={stats.amountRanges}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          {/* Rendimiento de asesores (solo para superadmin) */}\n          {user?.role === USER_ROLES.SUPERADMIN && (\n            <div className=\"card bg-base-100 shadow-md\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title text-lg font-semibold\">Rendimiento de Asesores</h2>\n                {stats.advisorPerformance && (\n                  <AdvisorPerformanceChart\n                    data={stats.advisorPerformance}\n                    height={300}\n                    title=\"\"\n                    maxBars={8}\n                  />\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Tabla de solicitudes recientes */}\n        <div className=\"card bg-base-100 shadow-md mt-6\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title text-lg font-semibold\">Solicitudes Recientes</h2>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"table table-zebra w-full\">\n                <thead>\n                  <tr>\n                    <th>Cliente</th>\n                    <th>Tipo</th>\n                    <th>Monto</th>\n                    <th>Estado</th>\n                    <th>Fecha</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {stats.recentApplications && stats.recentApplications.length > 0 ? (\n                    stats.recentApplications.map((app, index) => (\n                      <tr key={index} \n                          className=\"hover cursor-pointer\"\n                          onClick={() => navigate(`/applications/${app.id}`)}>\n                        <td>{String(app.client_name || 'N/A')}</td>\n                        <td>{getApplicationTypeLabel(app.application_type)}</td>\n                        <td>{formatCurrency(Number(app.amount || 0))}</td>\n                        <td>\n                          <span className={`badge badge-${String(app.status) === 'approved' ? 'success' : \n                                                           String(app.status) === 'rejected' ? 'error' : \n                                                           String(app.status) === 'pending' ? 'warning' : \n                                                           String(app.status) === 'in_review' ? 'info' : 'ghost'}`}>\n                            {String(app.status || 'N/A')}\n                          </span>\n                        </td>\n                        <td>{app.created_at ? new Date(String(app.created_at)).toLocaleDateString() : 'N/A'}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={5} className=\"text-center\">No hay solicitudes recientes</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}