{"ast":null,"code":"'use client';\n\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as treeView from '@zag-js/tree-view';\nimport { useId, useEffect } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nconst useTreeView = props => {\n  const {\n    collection,\n    ...treeViewProps\n  } = props;\n  const locale = useLocaleContext();\n  const environment = useEnvironmentContext();\n  const initialContext = {\n    id: useId(),\n    dir: locale.dir,\n    getRootNode: environment.getRootNode,\n    selectedValue: props.defaultSelectedValue,\n    expandedValue: props.defaultExpandedValue,\n    collection,\n    ...treeViewProps\n  };\n  const context = (() => {\n    const {\n      collection: _,\n      ...restProps\n    } = initialContext;\n    return {\n      ...restProps,\n      selectedValue: props.selectedValue,\n      expandedValue: props.expandedValue,\n      onFocusChange: useEvent(props.onFocusChange),\n      onExpandedChange: useEvent(props.onExpandedChange, {\n        sync: true\n      }),\n      onSelectionChange: useEvent(props.onSelectionChange, {\n        sync: true\n      })\n    };\n  })();\n  const [state, send, service] = useMachine(treeView.machine(initialContext), {\n    context\n  });\n  useEffect(() => {\n    service.setContext({\n      collection\n    });\n  }, [collection]);\n  return treeView.connect(state, send, normalizeProps);\n};\nexport { useTreeView };","map":{"version":3,"names":["useMachine","normalizeProps","treeView","useId","useEffect","useEnvironmentContext","useLocaleContext","useEvent","useTreeView","props","collection","treeViewProps","locale","environment","initialContext","id","dir","getRootNode","selectedValue","defaultSelectedValue","expandedValue","defaultExpandedValue","context","_","restProps","onFocusChange","onExpandedChange","sync","onSelectionChange","state","send","service","machine","setContext","connect"],"sources":["/Users/diegogg98/NEW CRM MAR18/node_modules/@ark-ui/react/dist/components/tree-view/use-tree-view.js"],"sourcesContent":["'use client';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as treeView from '@zag-js/tree-view';\nimport { useId, useEffect } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\n\nconst useTreeView = (props) => {\n  const { collection, ...treeViewProps } = props;\n  const locale = useLocaleContext();\n  const environment = useEnvironmentContext();\n  const initialContext = {\n    id: useId(),\n    dir: locale.dir,\n    getRootNode: environment.getRootNode,\n    selectedValue: props.defaultSelectedValue,\n    expandedValue: props.defaultExpandedValue,\n    collection,\n    ...treeViewProps\n  };\n  const context = (() => {\n    const { collection: _, ...restProps } = initialContext;\n    return {\n      ...restProps,\n      selectedValue: props.selectedValue,\n      expandedValue: props.expandedValue,\n      onFocusChange: useEvent(props.onFocusChange),\n      onExpandedChange: useEvent(props.onExpandedChange, { sync: true }),\n      onSelectionChange: useEvent(props.onSelectionChange, { sync: true })\n    };\n  })();\n  const [state, send, service] = useMachine(treeView.machine(initialContext), {\n    context\n  });\n  useEffect(() => {\n    service.setContext({ collection });\n  }, [collection]);\n  return treeView.connect(state, send, normalizeProps);\n};\n\nexport { useTreeView };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,OAAO,KAAKC,QAAQ,MAAM,mBAAmB;AAC7C,SAASC,KAAK,EAAEC,SAAS,QAAQ,OAAO;AACxC,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAM;IAAEC,UAAU;IAAE,GAAGC;EAAc,CAAC,GAAGF,KAAK;EAC9C,MAAMG,MAAM,GAAGN,gBAAgB,CAAC,CAAC;EACjC,MAAMO,WAAW,GAAGR,qBAAqB,CAAC,CAAC;EAC3C,MAAMS,cAAc,GAAG;IACrBC,EAAE,EAAEZ,KAAK,CAAC,CAAC;IACXa,GAAG,EAAEJ,MAAM,CAACI,GAAG;IACfC,WAAW,EAAEJ,WAAW,CAACI,WAAW;IACpCC,aAAa,EAAET,KAAK,CAACU,oBAAoB;IACzCC,aAAa,EAAEX,KAAK,CAACY,oBAAoB;IACzCX,UAAU;IACV,GAAGC;EACL,CAAC;EACD,MAAMW,OAAO,GAAG,CAAC,MAAM;IACrB,MAAM;MAAEZ,UAAU,EAAEa,CAAC;MAAE,GAAGC;IAAU,CAAC,GAAGV,cAAc;IACtD,OAAO;MACL,GAAGU,SAAS;MACZN,aAAa,EAAET,KAAK,CAACS,aAAa;MAClCE,aAAa,EAAEX,KAAK,CAACW,aAAa;MAClCK,aAAa,EAAElB,QAAQ,CAACE,KAAK,CAACgB,aAAa,CAAC;MAC5CC,gBAAgB,EAAEnB,QAAQ,CAACE,KAAK,CAACiB,gBAAgB,EAAE;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC;MAClEC,iBAAiB,EAAErB,QAAQ,CAACE,KAAK,CAACmB,iBAAiB,EAAE;QAAED,IAAI,EAAE;MAAK,CAAC;IACrE,CAAC;EACH,CAAC,EAAE,CAAC;EACJ,MAAM,CAACE,KAAK,EAAEC,IAAI,EAAEC,OAAO,CAAC,GAAG/B,UAAU,CAACE,QAAQ,CAAC8B,OAAO,CAAClB,cAAc,CAAC,EAAE;IAC1EQ;EACF,CAAC,CAAC;EACFlB,SAAS,CAAC,MAAM;IACd2B,OAAO,CAACE,UAAU,CAAC;MAAEvB;IAAW,CAAC,CAAC;EACpC,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAChB,OAAOR,QAAQ,CAACgC,OAAO,CAACL,KAAK,EAAEC,IAAI,EAAE7B,cAAc,CAAC;AACtD,CAAC;AAED,SAASO,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}