{"ast":null,"code":"'use client';\n\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as toggleGroup from '@zag-js/toggle-group';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nconst useToggleGroup = (props = {}) => {\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    value: props.defaultValue,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    value: props.value,\n    onValueChange: useEvent(props.onValueChange, {\n      sync: true\n    })\n  };\n  const [state, send] = useMachine(toggleGroup.machine(initialContext), {\n    context\n  });\n  return toggleGroup.connect(state, send, normalizeProps);\n};\nexport { useToggleGroup };","map":{"version":3,"names":["useMachine","normalizeProps","toggleGroup","useId","useEnvironmentContext","useLocaleContext","useEvent","useToggleGroup","props","getRootNode","dir","initialContext","id","value","defaultValue","context","onValueChange","sync","state","send","machine","connect"],"sources":["/Users/diegogg98/NEW CRM MAR18/node_modules/@ark-ui/react/dist/components/toggle-group/use-toggle-group.js"],"sourcesContent":["'use client';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as toggleGroup from '@zag-js/toggle-group';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\n\nconst useToggleGroup = (props = {}) => {\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    value: props.defaultValue,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    value: props.value,\n    onValueChange: useEvent(props.onValueChange, { sync: true })\n  };\n  const [state, send] = useMachine(toggleGroup.machine(initialContext), {\n    context\n  });\n  return toggleGroup.connect(state, send, normalizeProps);\n};\n\nexport { useToggleGroup };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,OAAO,KAAKC,WAAW,MAAM,sBAAsB;AACnD,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAG,CAAC,CAAC,KAAK;EACrC,MAAM;IAAEC;EAAY,CAAC,GAAGL,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEM;EAAI,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAClC,MAAMM,cAAc,GAAG;IACrBC,EAAE,EAAET,KAAK,CAAC,CAAC;IACXO,GAAG;IACHD,WAAW;IACXI,KAAK,EAAEL,KAAK,CAACM,YAAY;IACzB,GAAGN;EACL,CAAC;EACD,MAAMO,OAAO,GAAG;IACd,GAAGJ,cAAc;IACjBE,KAAK,EAAEL,KAAK,CAACK,KAAK;IAClBG,aAAa,EAAEV,QAAQ,CAACE,KAAK,CAACQ,aAAa,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC;EAC7D,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGnB,UAAU,CAACE,WAAW,CAACkB,OAAO,CAACT,cAAc,CAAC,EAAE;IACpEI;EACF,CAAC,CAAC;EACF,OAAOb,WAAW,CAACmB,OAAO,CAACH,KAAK,EAAEC,IAAI,EAAElB,cAAc,CAAC;AACzD,CAAC;AAED,SAASM,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}