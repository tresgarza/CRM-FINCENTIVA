{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, queryAll, getTabbables, dataAttr, getEventTarget, isFocusable, ariaAttr, getEventKey, addDomEvent, trackPointerMove, raf } from '@zag-js/dom-query';\nimport { createMachine, ref } from '@zag-js/core';\nimport { findSnapPoint, getScrollSnapPositions } from '@zag-js/scroll-snap';\nimport { createSplitProps, compact, isObject, add, remove, uniq, nextIndex, prevIndex, isEqual } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/carousel.anatomy.ts\nvar anatomy = createAnatomy(\"carousel\").parts(\"root\", \"itemGroup\", \"item\", \"control\", \"nextTrigger\", \"prevTrigger\", \"indicatorGroup\", \"indicator\", \"autoplayTrigger\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `carousel:${ctx.id}`,\n  getItemId: (ctx, index) => ctx.ids?.item?.(index) ?? `carousel:${ctx.id}:item:${index}`,\n  getItemGroupId: ctx => ctx.ids?.itemGroup ?? `carousel:${ctx.id}:item-group`,\n  getNextTriggerId: ctx => ctx.ids?.nextTrigger ?? `carousel:${ctx.id}:next-trigger`,\n  getPrevTriggerId: ctx => ctx.ids?.prevTrigger ?? `carousel:${ctx.id}:prev-trigger`,\n  getIndicatorGroupId: ctx => ctx.ids?.indicatorGroup ?? `carousel:${ctx.id}:indicator-group`,\n  getIndicatorId: (ctx, index) => ctx.ids?.indicator?.(index) ?? `carousel:${ctx.id}:indicator:${index}`,\n  getRootEl: ctx => dom.getById(ctx, dom.getRootId(ctx)),\n  getItemGroupEl: ctx => dom.getById(ctx, dom.getItemGroupId(ctx)),\n  getItemEl: (ctx, index) => dom.getById(ctx, dom.getItemId(ctx, index)),\n  getItemEls: ctx => queryAll(dom.getItemGroupEl(ctx), `[data-part=item]`),\n  getActiveIndicatorEl: ctx => dom.getById(ctx, dom.getIndicatorId(ctx, ctx.page)),\n  syncTabIndex(ctx) {\n    const el = dom.getItemGroupEl(ctx);\n    if (!el) return;\n    const tabbables = getTabbables(el);\n    if (tabbables.length > 0) {\n      el.removeAttribute(\"tabindex\");\n    } else {\n      el.setAttribute(\"tabindex\", \"0\");\n    }\n  }\n});\n\n// src/carousel.connect.ts\nfunction connect(state, send, normalize) {\n  const isPlaying = state.matches(\"autoplay\");\n  const isDragging = state.matches(\"dragging\");\n  const canScrollNext = state.context.canScrollNext;\n  const canScrollPrev = state.context.canScrollPrev;\n  const horizontal = state.context.isHorizontal;\n  const pageSnapPoints = Array.from(state.context.pageSnapPoints);\n  const page = state.context.page;\n  const slidesPerPage = state.context.slidesPerPage;\n  const padding = state.context.padding;\n  const translations = state.context.translations;\n  return {\n    isPlaying,\n    isDragging,\n    page,\n    pageSnapPoints,\n    canScrollNext,\n    canScrollPrev,\n    getProgress() {\n      return page / pageSnapPoints.length;\n    },\n    scrollToIndex(index, instant) {\n      send({\n        type: \"INDEX.SET\",\n        index,\n        instant\n      });\n    },\n    scrollTo(index, instant) {\n      send({\n        type: \"PAGE.SET\",\n        index,\n        instant\n      });\n    },\n    scrollNext(instant) {\n      send({\n        type: \"PAGE.NEXT\",\n        instant\n      });\n    },\n    scrollPrev(instant) {\n      send({\n        type: \"PAGE.PREV\",\n        instant\n      });\n    },\n    play() {\n      send(\"AUTOPLAY.START\");\n    },\n    pause() {\n      send(\"AUTOPLAY.PAUSE\");\n    },\n    isInView(index) {\n      return Array.from(state.context.slidesInView).includes(index);\n    },\n    refresh() {\n      send({\n        type: \"SNAP.REFRESH\"\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        role: \"region\",\n        \"aria-roledescription\": \"carousel\",\n        \"data-orientation\": state.context.orientation,\n        dir: state.context.dir,\n        style: {\n          \"--slides-per-page\": slidesPerPage,\n          \"--slide-spacing\": state.context.spacing,\n          \"--slide-item-size\": \"calc(100% / var(--slides-per-page) - var(--slide-spacing) * (var(--slides-per-page) - 1) / var(--slides-per-page))\"\n        }\n      });\n    },\n    getItemGroupProps() {\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        id: dom.getItemGroupId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-dragging\": dataAttr(isDragging),\n        dir: state.context.dir,\n        \"aria-live\": isPlaying ? \"off\" : \"polite\",\n        onMouseDown(event) {\n          if (!state.context.allowMouseDrag) return;\n          if (event.button !== 0) return;\n          if (event.defaultPrevented) return;\n          const target = getEventTarget(event);\n          if (isFocusable(target) && target !== event.currentTarget) return;\n          event.preventDefault();\n          send({\n            type: \"DRAGGING.START\"\n          });\n        },\n        style: {\n          display: \"grid\",\n          gap: \"var(--slide-spacing)\",\n          scrollSnapType: [horizontal ? \"x\" : \"y\", state.context.snapType].join(\" \"),\n          gridAutoFlow: horizontal ? \"column\" : \"row\",\n          scrollbarWidth: \"none\",\n          overscrollBehavior: \"contain\",\n          [horizontal ? \"gridAutoColumns\" : \"gridAutoRows\"]: \"var(--slide-item-size)\",\n          [horizontal ? \"scrollPaddingInline\" : \"scrollPaddingBlock\"]: padding,\n          [horizontal ? \"paddingInline\" : \"paddingBlock\"]: padding,\n          [horizontal ? \"overflowX\" : \"overflowY\"]: \"auto\"\n        }\n      });\n    },\n    getItemProps(props2) {\n      const isInView = state.context.slidesInView.includes(props2.index);\n      return normalize.element({\n        ...parts.item.attrs,\n        id: dom.getItemId(state.context, props2.index),\n        dir: state.context.dir,\n        role: \"group\",\n        \"data-index\": props2.index,\n        \"data-inview\": dataAttr(isInView),\n        \"aria-roledescription\": \"slide\",\n        \"data-orientation\": state.context.orientation,\n        \"aria-label\": state.context.slideCount ? translations.item(props2.index, state.context.slideCount) : void 0,\n        \"aria-hidden\": ariaAttr(!isInView),\n        style: {\n          scrollSnapAlign: getSnapAlign(state.context, props2)\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        \"data-orientation\": state.context.orientation\n      });\n    },\n    getPrevTriggerProps() {\n      return normalize.button({\n        ...parts.prevTrigger.attrs,\n        id: dom.getPrevTriggerId(state.context),\n        type: \"button\",\n        disabled: !canScrollPrev,\n        dir: state.context.dir,\n        \"aria-label\": translations.prevTrigger,\n        \"data-orientation\": state.context.orientation,\n        \"aria-controls\": dom.getItemGroupId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({\n            type: \"PAGE.PREV\",\n            src: \"trigger\"\n          });\n        }\n      });\n    },\n    getNextTriggerProps() {\n      return normalize.button({\n        ...parts.nextTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getNextTriggerId(state.context),\n        type: \"button\",\n        \"aria-label\": translations.nextTrigger,\n        \"data-orientation\": state.context.orientation,\n        \"aria-controls\": dom.getItemGroupId(state.context),\n        disabled: !canScrollNext,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({\n            type: \"PAGE.NEXT\",\n            src: \"trigger\"\n          });\n        }\n      });\n    },\n    getIndicatorGroupProps() {\n      return normalize.element({\n        ...parts.indicatorGroup.attrs,\n        dir: state.context.dir,\n        id: dom.getIndicatorGroupId(state.context),\n        \"data-orientation\": state.context.orientation,\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          const src = \"indicator\";\n          const keyMap = {\n            ArrowDown(event2) {\n              if (horizontal) return;\n              send({\n                type: \"PAGE.NEXT\",\n                src\n              });\n              event2.preventDefault();\n            },\n            ArrowUp(event2) {\n              if (horizontal) return;\n              send({\n                type: \"PAGE.PREV\",\n                src\n              });\n              event2.preventDefault();\n            },\n            ArrowRight(event2) {\n              if (!horizontal) return;\n              send({\n                type: \"PAGE.NEXT\",\n                src\n              });\n              event2.preventDefault();\n            },\n            ArrowLeft(event2) {\n              if (!horizontal) return;\n              send({\n                type: \"PAGE.PREV\",\n                src\n              });\n              event2.preventDefault();\n            },\n            Home(event2) {\n              send({\n                type: \"PAGE.SET\",\n                index: 0,\n                src\n              });\n              event2.preventDefault();\n            },\n            End(event2) {\n              send({\n                type: \"PAGE.SET\",\n                index: pageSnapPoints.length - 1,\n                src\n              });\n              event2.preventDefault();\n            }\n          };\n          const key = getEventKey(event, {\n            dir: state.context.dir,\n            orientation: state.context.orientation\n          });\n          const exec = keyMap[key];\n          exec?.(event);\n        }\n      });\n    },\n    getIndicatorProps(props2) {\n      return normalize.button({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        id: dom.getIndicatorId(state.context, props2.index),\n        type: \"button\",\n        \"data-orientation\": state.context.orientation,\n        \"data-index\": props2.index,\n        \"data-readonly\": dataAttr(props2.readOnly),\n        \"data-current\": dataAttr(props2.index === state.context.page),\n        \"aria-label\": translations.indicator(props2.index),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (props2.readOnly) return;\n          send({\n            type: \"PAGE.SET\",\n            index: props2.index,\n            src: \"indicator\"\n          });\n        }\n      });\n    },\n    getAutoplayTriggerProps() {\n      return normalize.button({\n        ...parts.autoplayTrigger.attrs,\n        type: \"button\",\n        \"data-orientation\": state.context.orientation,\n        \"data-pressed\": dataAttr(isPlaying),\n        \"aria-label\": isPlaying ? translations.autoplayStop : translations.autoplayStart,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({\n            type: isPlaying ? \"AUTOPLAY.PAUSE\" : \"AUTOPLAY.START\"\n          });\n        }\n      });\n    }\n  };\n}\nfunction getSnapAlign(ctx, props2) {\n  const {\n    snapAlign = \"start\",\n    index\n  } = props2;\n  const perMove = ctx.slidesPerMove === \"auto\" ? Math.floor(ctx.slidesPerPage) : ctx.slidesPerMove;\n  const shouldSnap = (index + perMove) % perMove === 0;\n  return shouldSnap ? snapAlign : void 0;\n}\nvar DEFAULT_SLIDES_PER_PAGE = 1;\nvar DEFAULT_SLIDES_PER_MOVE = \"auto\";\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"carousel\",\n    initial: ctx.autoplay ? \"autoplay\" : \"idle\",\n    context: {\n      dir: \"ltr\",\n      page: 0,\n      orientation: \"horizontal\",\n      snapType: \"mandatory\",\n      loop: false,\n      slidesPerPage: DEFAULT_SLIDES_PER_PAGE,\n      slidesPerMove: DEFAULT_SLIDES_PER_MOVE,\n      spacing: \"0px\",\n      autoplay: false,\n      allowMouseDrag: false,\n      inViewThreshold: 0.6,\n      ...ctx,\n      timeoutRef: ref({\n        current: void 0\n      }),\n      translations: {\n        nextTrigger: \"Next slide\",\n        prevTrigger: \"Previous slide\",\n        indicator: index => `Go to slide ${index + 1}`,\n        item: (index, count) => `${index + 1} of ${count}`,\n        autoplayStart: \"Start slide rotation\",\n        autoplayStop: \"Stop slide rotation\",\n        ...ctx.translations\n      },\n      pageSnapPoints: getPageSnapPoints(ctx.slideCount, ctx.slidesPerMove ?? DEFAULT_SLIDES_PER_MOVE, ctx.slidesPerPage ?? DEFAULT_SLIDES_PER_PAGE),\n      slidesInView: []\n    },\n    computed: {\n      isRtl: ctx2 => ctx2.dir === \"rtl\",\n      isHorizontal: ctx2 => ctx2.orientation === \"horizontal\",\n      canScrollNext: ctx2 => ctx2.loop || ctx2.page < ctx2.pageSnapPoints.length - 1,\n      canScrollPrev: ctx2 => ctx2.loop || ctx2.page > 0,\n      autoplayInterval: ctx2 => isObject(ctx2.autoplay) ? ctx2.autoplay.delay : 4e3\n    },\n    watch: {\n      slidesPerPage: [\"setSnapPoints\"],\n      slidesPerMove: [\"setSnapPoints\"],\n      page: [\"scrollToPage\", \"focusIndicatorEl\"],\n      orientation: [\"setSnapPoints\", \"scrollToPage\"]\n    },\n    on: {\n      \"PAGE.NEXT\": {\n        target: \"idle\",\n        actions: [\"clearScrollEndTimer\", \"setNextPage\"]\n      },\n      \"PAGE.PREV\": {\n        target: \"idle\",\n        actions: [\"clearScrollEndTimer\", \"setPrevPage\"]\n      },\n      \"PAGE.SET\": {\n        target: \"idle\",\n        actions: [\"clearScrollEndTimer\", \"setPage\"]\n      },\n      \"INDEX.SET\": {\n        target: \"idle\",\n        actions: [\"clearScrollEndTimer\", \"setMatchingPage\"]\n      },\n      \"SNAP.REFRESH\": {\n        actions: [\"setSnapPoints\", \"clampPage\"]\n      }\n    },\n    activities: [\"trackSlideMutation\", \"trackSlideIntersections\", \"trackSlideResize\"],\n    entry: [\"resetScrollPosition\", \"setSnapPoints\", \"setPage\"],\n    exit: [\"clearScrollEndTimer\"],\n    states: {\n      idle: {\n        activities: [\"trackScroll\"],\n        on: {\n          \"DRAGGING.START\": {\n            target: \"dragging\",\n            actions: [\"invokeDragStart\"]\n          },\n          \"AUTOPLAY.START\": {\n            target: \"autoplay\",\n            actions: [\"invokeAutoplayStart\"]\n          }\n        }\n      },\n      dragging: {\n        activities: [\"trackPointerMove\"],\n        entry: [\"disableScrollSnap\"],\n        on: {\n          DRAGGING: {\n            actions: [\"scrollSlides\", \"invokeDragging\"]\n          },\n          \"DRAGGING.END\": {\n            target: \"idle\",\n            actions: [\"endDragging\", \"invokeDraggingEnd\"]\n          }\n        }\n      },\n      autoplay: {\n        activities: [\"trackDocumentVisibility\", \"trackScroll\"],\n        exit: [\"invokeAutoplayEnd\"],\n        every: {\n          AUTOPLAY_INTERVAL: [\"setNextPage\", \"invokeAutoplay\"]\n        },\n        on: {\n          \"DRAGGING.START\": {\n            target: \"dragging\",\n            actions: [\"invokeDragStart\"]\n          },\n          \"AUTOPLAY.PAUSE\": \"idle\"\n        }\n      }\n    }\n  }, {\n    activities: {\n      trackSlideMutation(ctx2, _evt, {\n        send\n      }) {\n        const el = dom.getItemGroupEl(ctx2);\n        if (!el) return;\n        const win = dom.getWin(ctx2);\n        const observer = new win.MutationObserver(() => {\n          send({\n            type: \"SNAP.REFRESH\",\n            src: \"slide.mutation\"\n          });\n          dom.syncTabIndex(ctx2);\n        });\n        dom.syncTabIndex(ctx2);\n        observer.observe(el, {\n          childList: true,\n          subtree: true\n        });\n        return () => observer.disconnect();\n      },\n      trackSlideResize(ctx2, _evt, {\n        send\n      }) {\n        const el = dom.getItemGroupEl(ctx2);\n        if (!el) return;\n        const win = dom.getWin(ctx2);\n        const observer = new win.ResizeObserver(() => {\n          send({\n            type: \"SNAP.REFRESH\",\n            src: \"slide.resize\"\n          });\n        });\n        dom.getItemEls(ctx2).forEach(slide => observer.observe(slide));\n        return () => observer.disconnect();\n      },\n      trackSlideIntersections(ctx2) {\n        const el = dom.getItemGroupEl(ctx2);\n        const win = dom.getWin(ctx2);\n        const observer = new win.IntersectionObserver(entries => {\n          const slidesInView = entries.reduce((acc, entry) => {\n            const target = entry.target;\n            const index = Number(target.dataset.index ?? \"-1\");\n            if (index == null || Number.isNaN(index) || index === -1) return acc;\n            return entry.isIntersecting ? add(acc, index) : remove(acc, index);\n          }, ctx2.slidesInView);\n          ctx2.slidesInView = uniq(slidesInView);\n        }, {\n          root: el,\n          threshold: ctx2.inViewThreshold\n        });\n        dom.getItemEls(ctx2).forEach(slide => observer.observe(slide));\n        return () => observer.disconnect();\n      },\n      trackScroll(ctx2) {\n        const el = dom.getItemGroupEl(ctx2);\n        if (!el) return;\n        const onScrollEnd = () => {\n          if (ctx2.slidesInView.length === 0) return;\n          const scrollPosition = ctx2.isHorizontal ? el.scrollLeft : el.scrollTop;\n          const page = ctx2.pageSnapPoints.findIndex(point => Math.abs(point - scrollPosition) < 1);\n          if (page === -1) return;\n          set.page(ctx2, page);\n        };\n        const onScroll = () => {\n          clearTimeout(ctx2.timeoutRef.current);\n          ctx2.timeoutRef.current = setTimeout(() => {\n            onScrollEnd?.();\n          }, 150);\n        };\n        return addDomEvent(el, \"scroll\", onScroll, {\n          passive: true\n        });\n      },\n      trackDocumentVisibility(ctx2, _evt, {\n        send\n      }) {\n        const doc = dom.getDoc(ctx2);\n        const onVisibilityChange = () => {\n          if (doc.visibilityState === \"visible\") return;\n          send({\n            type: \"AUTOPLAY.PAUSE\",\n            src: \"doc.hidden\"\n          });\n        };\n        return addDomEvent(doc, \"visibilitychange\", onVisibilityChange);\n      },\n      trackPointerMove(ctx2, _evt, {\n        send\n      }) {\n        const doc = dom.getDoc(ctx2);\n        return trackPointerMove(doc, {\n          onPointerMove({\n            event\n          }) {\n            send({\n              type: \"DRAGGING\",\n              left: -event.movementX,\n              top: -event.movementY\n            });\n          },\n          onPointerUp() {\n            send({\n              type: \"DRAGGING.END\"\n            });\n          }\n        });\n      }\n    },\n    actions: {\n      resetScrollPosition(ctx2) {\n        const el = dom.getItemGroupEl(ctx2);\n        el.scrollTo(0, 0);\n      },\n      clearScrollEndTimer(ctx2) {\n        if (ctx2.timeoutRef.current == null) return;\n        clearTimeout(ctx2.timeoutRef.current);\n        ctx2.timeoutRef.current = void 0;\n      },\n      scrollToPage(ctx2, evt) {\n        const behavior = evt.instant ? \"instant\" : \"smooth\";\n        const index = clamp(evt.index ?? ctx2.page, 0, ctx2.pageSnapPoints.length - 1);\n        const el = dom.getItemGroupEl(ctx2);\n        const axis = ctx2.isHorizontal ? \"left\" : \"top\";\n        el.scrollTo({\n          [axis]: ctx2.pageSnapPoints[index],\n          behavior\n        });\n      },\n      setNextPage(ctx2) {\n        const page = nextIndex(ctx2.pageSnapPoints, ctx2.page, {\n          loop: ctx2.loop\n        });\n        set.page(ctx2, page);\n      },\n      setPrevPage(ctx2) {\n        const page = prevIndex(ctx2.pageSnapPoints, ctx2.page, {\n          loop: ctx2.loop\n        });\n        set.page(ctx2, page);\n      },\n      setMatchingPage(ctx2, evt) {\n        const snapPoint = findSnapPoint(dom.getItemGroupEl(ctx2), ctx2.isHorizontal ? \"x\" : \"y\", node => node.dataset.index === evt.index.toString());\n        if (snapPoint == null) return;\n        const page = ctx2.pageSnapPoints.indexOf(snapPoint);\n        set.page(ctx2, page);\n      },\n      setPage(ctx2, evt) {\n        set.page(ctx2, evt.index ?? ctx2.page);\n      },\n      clampPage(ctx2) {\n        const index = clamp(ctx2.page, 0, ctx2.pageSnapPoints.length - 1);\n        set.page(ctx2, index);\n      },\n      setSnapPoints(ctx2) {\n        queueMicrotask(() => {\n          const el = dom.getItemGroupEl(ctx2);\n          const scrollSnapPoints = getScrollSnapPositions(el);\n          ctx2.pageSnapPoints = ctx2.isHorizontal ? scrollSnapPoints.x : scrollSnapPoints.y;\n        });\n      },\n      disableScrollSnap(ctx2) {\n        const el = dom.getItemGroupEl(ctx2);\n        const styles = getComputedStyle(el);\n        el.dataset.scrollSnapType = styles.getPropertyValue(\"scroll-snap-type\");\n        el.style.setProperty(\"scroll-snap-type\", \"none\");\n      },\n      scrollSlides(ctx2, evt) {\n        const el = dom.getItemGroupEl(ctx2);\n        el.scrollBy({\n          left: evt.left,\n          top: evt.top,\n          behavior: \"instant\"\n        });\n      },\n      endDragging(ctx2) {\n        const el = dom.getItemGroupEl(ctx2);\n        const startX = el.scrollLeft;\n        const startY = el.scrollTop;\n        const snapPositions = getScrollSnapPositions(el);\n        const closestX = snapPositions.x.reduce((closest, curr) => {\n          return Math.abs(curr - startX) < Math.abs(closest - startX) ? curr : closest;\n        }, snapPositions.x[0]);\n        const closestY = snapPositions.y.reduce((closest, curr) => {\n          return Math.abs(curr - startY) < Math.abs(closest - startY) ? curr : closest;\n        }, snapPositions.y[0]);\n        raf(() => {\n          el.scrollTo({\n            left: closestX,\n            top: closestY,\n            behavior: \"smooth\"\n          });\n          const scrollSnapType = el.dataset.scrollSnapType;\n          if (scrollSnapType) {\n            el.style.removeProperty(\"scroll-snap-type\");\n            delete el.dataset.scrollSnapType;\n          }\n        });\n      },\n      focusIndicatorEl(ctx2, evt) {\n        if (evt.src !== \"indicator\") return;\n        const el = dom.getActiveIndicatorEl(ctx2);\n        raf(() => el.focus({\n          preventScroll: true\n        }));\n      },\n      invokeDragStart(ctx2) {\n        ctx2.onDragStatusChange?.({\n          type: \"dragging.start\",\n          isDragging: true,\n          page: ctx2.page\n        });\n      },\n      invokeDragging(ctx2) {\n        ctx2.onDragStatusChange?.({\n          type: \"dragging\",\n          isDragging: true,\n          page: ctx2.page\n        });\n      },\n      invokeDraggingEnd(ctx2) {\n        ctx2.onDragStatusChange?.({\n          type: \"dragging.end\",\n          isDragging: false,\n          page: ctx2.page\n        });\n      },\n      invokeAutoplay(ctx2) {\n        ctx2.onAutoplayStatusChange?.({\n          type: \"autoplay\",\n          isPlaying: true,\n          page: ctx2.page\n        });\n      },\n      invokeAutoplayStart(ctx2) {\n        ctx2.onAutoplayStatusChange?.({\n          type: \"autoplay.start\",\n          isPlaying: true,\n          page: ctx2.page\n        });\n      },\n      invokeAutoplayEnd(ctx2) {\n        ctx2.onAutoplayStatusChange?.({\n          type: \"autoplay.stop\",\n          isPlaying: false,\n          page: ctx2.page\n        });\n      }\n    },\n    delays: {\n      AUTOPLAY_INTERVAL: ctx2 => ctx2.autoplayInterval\n    }\n  });\n}\nvar invoke = {\n  pageChange: ctx => {\n    ctx.onPageChange?.({\n      page: ctx.page,\n      pageSnapPoint: ctx.pageSnapPoints[ctx.page]\n    });\n  }\n};\nvar set = {\n  page: (ctx, value) => {\n    const page = clamp(value, 0, ctx.pageSnapPoints.length - 1);\n    if (isEqual(ctx.page, page)) return;\n    ctx.page = page;\n    invoke.pageChange(ctx);\n  }\n};\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\nfunction getPageSnapPoints(totalSlides, slidesPerMove, slidesPerPage) {\n  if (totalSlides == null) return [];\n  const snapPoints = [];\n  const perMove = slidesPerMove === \"auto\" ? Math.floor(slidesPerPage) : slidesPerMove;\n  for (let i = 0; i < totalSlides - 1; i += perMove) snapPoints.push(i);\n  return snapPoints;\n}\nvar props = createProps()([\"dir\", \"getRootNode\", \"id\", \"ids\", \"loop\", \"page\", \"onPageChange\", \"orientation\", \"slideCount\", \"slidesPerPage\", \"slidesPerMove\", \"spacing\", \"padding\", \"autoplay\", \"allowMouseDrag\", \"inViewThreshold\", \"translations\", \"snapType\", \"onDragStatusChange\", \"onAutoplayStatusChange\"]);\nvar splitProps = createSplitProps(props);\nvar indicatorProps = createProps()([\"index\", \"readOnly\"]);\nvar splitIndicatorProps = createSplitProps(indicatorProps);\nvar itemProps = createProps()([\"index\", \"snapAlign\"]);\nvar splitItemProps = createSplitProps(itemProps);\nexport { anatomy, connect, indicatorProps, itemProps, machine, props, splitIndicatorProps, splitItemProps, splitProps };","map":{"version":3,"names":["createAnatomy","createScope","queryAll","getTabbables","dataAttr","getEventTarget","isFocusable","ariaAttr","getEventKey","addDomEvent","trackPointerMove","raf","createMachine","ref","findSnapPoint","getScrollSnapPositions","createSplitProps","compact","isObject","add","remove","uniq","nextIndex","prevIndex","isEqual","createProps","anatomy","parts","build","dom","getRootId","ctx","ids","root","id","getItemId","index","item","getItemGroupId","itemGroup","getNextTriggerId","nextTrigger","getPrevTriggerId","prevTrigger","getIndicatorGroupId","indicatorGroup","getIndicatorId","indicator","getRootEl","getById","getItemGroupEl","getItemEl","getItemEls","getActiveIndicatorEl","page","syncTabIndex","el","tabbables","length","removeAttribute","setAttribute","connect","state","send","normalize","isPlaying","matches","isDragging","canScrollNext","context","canScrollPrev","horizontal","isHorizontal","pageSnapPoints","Array","from","slidesPerPage","padding","translations","getProgress","scrollToIndex","instant","type","scrollTo","scrollNext","scrollPrev","play","pause","isInView","slidesInView","includes","refresh","getRootProps","element","attrs","role","orientation","dir","style","spacing","getItemGroupProps","onMouseDown","event","allowMouseDrag","button","defaultPrevented","target","currentTarget","preventDefault","display","gap","scrollSnapType","snapType","join","gridAutoFlow","scrollbarWidth","overscrollBehavior","getItemProps","props2","slideCount","scrollSnapAlign","getSnapAlign","getControlProps","control","getPrevTriggerProps","disabled","onClick","src","getNextTriggerProps","getIndicatorGroupProps","onKeyDown","keyMap","ArrowDown","event2","ArrowUp","ArrowRight","ArrowLeft","Home","End","key","exec","getIndicatorProps","readOnly","getAutoplayTriggerProps","autoplayTrigger","autoplayStop","autoplayStart","snapAlign","perMove","slidesPerMove","Math","floor","shouldSnap","DEFAULT_SLIDES_PER_PAGE","DEFAULT_SLIDES_PER_MOVE","machine","userContext","initial","autoplay","loop","inViewThreshold","timeoutRef","current","count","getPageSnapPoints","computed","isRtl","ctx2","autoplayInterval","delay","watch","on","actions","activities","entry","exit","states","idle","dragging","DRAGGING","every","AUTOPLAY_INTERVAL","trackSlideMutation","_evt","win","getWin","observer","MutationObserver","observe","childList","subtree","disconnect","trackSlideResize","ResizeObserver","forEach","slide","trackSlideIntersections","IntersectionObserver","entries","reduce","acc","Number","dataset","isNaN","isIntersecting","threshold","trackScroll","onScrollEnd","scrollPosition","scrollLeft","scrollTop","findIndex","point","abs","set","onScroll","clearTimeout","setTimeout","passive","trackDocumentVisibility","doc","getDoc","onVisibilityChange","visibilityState","onPointerMove","left","movementX","top","movementY","onPointerUp","resetScrollPosition","clearScrollEndTimer","scrollToPage","evt","behavior","clamp","axis","setNextPage","setPrevPage","setMatchingPage","snapPoint","node","toString","indexOf","setPage","clampPage","setSnapPoints","queueMicrotask","scrollSnapPoints","x","y","disableScrollSnap","styles","getComputedStyle","getPropertyValue","setProperty","scrollSlides","scrollBy","endDragging","startX","startY","snapPositions","closestX","closest","curr","closestY","removeProperty","focusIndicatorEl","focus","preventScroll","invokeDragStart","onDragStatusChange","invokeDragging","invokeDraggingEnd","invokeAutoplay","onAutoplayStatusChange","invokeAutoplayStart","invokeAutoplayEnd","delays","invoke","pageChange","onPageChange","pageSnapPoint","value","min","max","totalSlides","snapPoints","i","push","props","splitProps","indicatorProps","splitIndicatorProps","itemProps","splitItemProps"],"sources":["/Users/diegogg98/NEW CRM MAR18/node_modules/@zag-js/carousel/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, queryAll, getTabbables, dataAttr, getEventTarget, isFocusable, ariaAttr, getEventKey, addDomEvent, trackPointerMove, raf } from '@zag-js/dom-query';\nimport { createMachine, ref } from '@zag-js/core';\nimport { findSnapPoint, getScrollSnapPositions } from '@zag-js/scroll-snap';\nimport { createSplitProps, compact, isObject, add, remove, uniq, nextIndex, prevIndex, isEqual } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/carousel.anatomy.ts\nvar anatomy = createAnatomy(\"carousel\").parts(\n  \"root\",\n  \"itemGroup\",\n  \"item\",\n  \"control\",\n  \"nextTrigger\",\n  \"prevTrigger\",\n  \"indicatorGroup\",\n  \"indicator\",\n  \"autoplayTrigger\"\n);\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `carousel:${ctx.id}`,\n  getItemId: (ctx, index) => ctx.ids?.item?.(index) ?? `carousel:${ctx.id}:item:${index}`,\n  getItemGroupId: (ctx) => ctx.ids?.itemGroup ?? `carousel:${ctx.id}:item-group`,\n  getNextTriggerId: (ctx) => ctx.ids?.nextTrigger ?? `carousel:${ctx.id}:next-trigger`,\n  getPrevTriggerId: (ctx) => ctx.ids?.prevTrigger ?? `carousel:${ctx.id}:prev-trigger`,\n  getIndicatorGroupId: (ctx) => ctx.ids?.indicatorGroup ?? `carousel:${ctx.id}:indicator-group`,\n  getIndicatorId: (ctx, index) => ctx.ids?.indicator?.(index) ?? `carousel:${ctx.id}:indicator:${index}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getItemGroupEl: (ctx) => dom.getById(ctx, dom.getItemGroupId(ctx)),\n  getItemEl: (ctx, index) => dom.getById(ctx, dom.getItemId(ctx, index)),\n  getItemEls: (ctx) => queryAll(dom.getItemGroupEl(ctx), `[data-part=item]`),\n  getActiveIndicatorEl: (ctx) => dom.getById(ctx, dom.getIndicatorId(ctx, ctx.page)),\n  syncTabIndex(ctx) {\n    const el = dom.getItemGroupEl(ctx);\n    if (!el) return;\n    const tabbables = getTabbables(el);\n    if (tabbables.length > 0) {\n      el.removeAttribute(\"tabindex\");\n    } else {\n      el.setAttribute(\"tabindex\", \"0\");\n    }\n  }\n});\n\n// src/carousel.connect.ts\nfunction connect(state, send, normalize) {\n  const isPlaying = state.matches(\"autoplay\");\n  const isDragging = state.matches(\"dragging\");\n  const canScrollNext = state.context.canScrollNext;\n  const canScrollPrev = state.context.canScrollPrev;\n  const horizontal = state.context.isHorizontal;\n  const pageSnapPoints = Array.from(state.context.pageSnapPoints);\n  const page = state.context.page;\n  const slidesPerPage = state.context.slidesPerPage;\n  const padding = state.context.padding;\n  const translations = state.context.translations;\n  return {\n    isPlaying,\n    isDragging,\n    page,\n    pageSnapPoints,\n    canScrollNext,\n    canScrollPrev,\n    getProgress() {\n      return page / pageSnapPoints.length;\n    },\n    scrollToIndex(index, instant) {\n      send({ type: \"INDEX.SET\", index, instant });\n    },\n    scrollTo(index, instant) {\n      send({ type: \"PAGE.SET\", index, instant });\n    },\n    scrollNext(instant) {\n      send({ type: \"PAGE.NEXT\", instant });\n    },\n    scrollPrev(instant) {\n      send({ type: \"PAGE.PREV\", instant });\n    },\n    play() {\n      send(\"AUTOPLAY.START\");\n    },\n    pause() {\n      send(\"AUTOPLAY.PAUSE\");\n    },\n    isInView(index) {\n      return Array.from(state.context.slidesInView).includes(index);\n    },\n    refresh() {\n      send({ type: \"SNAP.REFRESH\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        role: \"region\",\n        \"aria-roledescription\": \"carousel\",\n        \"data-orientation\": state.context.orientation,\n        dir: state.context.dir,\n        style: {\n          \"--slides-per-page\": slidesPerPage,\n          \"--slide-spacing\": state.context.spacing,\n          \"--slide-item-size\": \"calc(100% / var(--slides-per-page) - var(--slide-spacing) * (var(--slides-per-page) - 1) / var(--slides-per-page))\"\n        }\n      });\n    },\n    getItemGroupProps() {\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        id: dom.getItemGroupId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-dragging\": dataAttr(isDragging),\n        dir: state.context.dir,\n        \"aria-live\": isPlaying ? \"off\" : \"polite\",\n        onMouseDown(event) {\n          if (!state.context.allowMouseDrag) return;\n          if (event.button !== 0) return;\n          if (event.defaultPrevented) return;\n          const target = getEventTarget(event);\n          if (isFocusable(target) && target !== event.currentTarget) return;\n          event.preventDefault();\n          send({ type: \"DRAGGING.START\" });\n        },\n        style: {\n          display: \"grid\",\n          gap: \"var(--slide-spacing)\",\n          scrollSnapType: [horizontal ? \"x\" : \"y\", state.context.snapType].join(\" \"),\n          gridAutoFlow: horizontal ? \"column\" : \"row\",\n          scrollbarWidth: \"none\",\n          overscrollBehavior: \"contain\",\n          [horizontal ? \"gridAutoColumns\" : \"gridAutoRows\"]: \"var(--slide-item-size)\",\n          [horizontal ? \"scrollPaddingInline\" : \"scrollPaddingBlock\"]: padding,\n          [horizontal ? \"paddingInline\" : \"paddingBlock\"]: padding,\n          [horizontal ? \"overflowX\" : \"overflowY\"]: \"auto\"\n        }\n      });\n    },\n    getItemProps(props2) {\n      const isInView = state.context.slidesInView.includes(props2.index);\n      return normalize.element({\n        ...parts.item.attrs,\n        id: dom.getItemId(state.context, props2.index),\n        dir: state.context.dir,\n        role: \"group\",\n        \"data-index\": props2.index,\n        \"data-inview\": dataAttr(isInView),\n        \"aria-roledescription\": \"slide\",\n        \"data-orientation\": state.context.orientation,\n        \"aria-label\": state.context.slideCount ? translations.item(props2.index, state.context.slideCount) : void 0,\n        \"aria-hidden\": ariaAttr(!isInView),\n        style: {\n          scrollSnapAlign: getSnapAlign(state.context, props2)\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        \"data-orientation\": state.context.orientation\n      });\n    },\n    getPrevTriggerProps() {\n      return normalize.button({\n        ...parts.prevTrigger.attrs,\n        id: dom.getPrevTriggerId(state.context),\n        type: \"button\",\n        disabled: !canScrollPrev,\n        dir: state.context.dir,\n        \"aria-label\": translations.prevTrigger,\n        \"data-orientation\": state.context.orientation,\n        \"aria-controls\": dom.getItemGroupId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"PAGE.PREV\", src: \"trigger\" });\n        }\n      });\n    },\n    getNextTriggerProps() {\n      return normalize.button({\n        ...parts.nextTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getNextTriggerId(state.context),\n        type: \"button\",\n        \"aria-label\": translations.nextTrigger,\n        \"data-orientation\": state.context.orientation,\n        \"aria-controls\": dom.getItemGroupId(state.context),\n        disabled: !canScrollNext,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"PAGE.NEXT\", src: \"trigger\" });\n        }\n      });\n    },\n    getIndicatorGroupProps() {\n      return normalize.element({\n        ...parts.indicatorGroup.attrs,\n        dir: state.context.dir,\n        id: dom.getIndicatorGroupId(state.context),\n        \"data-orientation\": state.context.orientation,\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          const src = \"indicator\";\n          const keyMap = {\n            ArrowDown(event2) {\n              if (horizontal) return;\n              send({ type: \"PAGE.NEXT\", src });\n              event2.preventDefault();\n            },\n            ArrowUp(event2) {\n              if (horizontal) return;\n              send({ type: \"PAGE.PREV\", src });\n              event2.preventDefault();\n            },\n            ArrowRight(event2) {\n              if (!horizontal) return;\n              send({ type: \"PAGE.NEXT\", src });\n              event2.preventDefault();\n            },\n            ArrowLeft(event2) {\n              if (!horizontal) return;\n              send({ type: \"PAGE.PREV\", src });\n              event2.preventDefault();\n            },\n            Home(event2) {\n              send({ type: \"PAGE.SET\", index: 0, src });\n              event2.preventDefault();\n            },\n            End(event2) {\n              send({ type: \"PAGE.SET\", index: pageSnapPoints.length - 1, src });\n              event2.preventDefault();\n            }\n          };\n          const key = getEventKey(event, {\n            dir: state.context.dir,\n            orientation: state.context.orientation\n          });\n          const exec = keyMap[key];\n          exec?.(event);\n        }\n      });\n    },\n    getIndicatorProps(props2) {\n      return normalize.button({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        id: dom.getIndicatorId(state.context, props2.index),\n        type: \"button\",\n        \"data-orientation\": state.context.orientation,\n        \"data-index\": props2.index,\n        \"data-readonly\": dataAttr(props2.readOnly),\n        \"data-current\": dataAttr(props2.index === state.context.page),\n        \"aria-label\": translations.indicator(props2.index),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (props2.readOnly) return;\n          send({ type: \"PAGE.SET\", index: props2.index, src: \"indicator\" });\n        }\n      });\n    },\n    getAutoplayTriggerProps() {\n      return normalize.button({\n        ...parts.autoplayTrigger.attrs,\n        type: \"button\",\n        \"data-orientation\": state.context.orientation,\n        \"data-pressed\": dataAttr(isPlaying),\n        \"aria-label\": isPlaying ? translations.autoplayStop : translations.autoplayStart,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: isPlaying ? \"AUTOPLAY.PAUSE\" : \"AUTOPLAY.START\" });\n        }\n      });\n    }\n  };\n}\nfunction getSnapAlign(ctx, props2) {\n  const { snapAlign = \"start\", index } = props2;\n  const perMove = ctx.slidesPerMove === \"auto\" ? Math.floor(ctx.slidesPerPage) : ctx.slidesPerMove;\n  const shouldSnap = (index + perMove) % perMove === 0;\n  return shouldSnap ? snapAlign : void 0;\n}\nvar DEFAULT_SLIDES_PER_PAGE = 1;\nvar DEFAULT_SLIDES_PER_MOVE = \"auto\";\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"carousel\",\n      initial: ctx.autoplay ? \"autoplay\" : \"idle\",\n      context: {\n        dir: \"ltr\",\n        page: 0,\n        orientation: \"horizontal\",\n        snapType: \"mandatory\",\n        loop: false,\n        slidesPerPage: DEFAULT_SLIDES_PER_PAGE,\n        slidesPerMove: DEFAULT_SLIDES_PER_MOVE,\n        spacing: \"0px\",\n        autoplay: false,\n        allowMouseDrag: false,\n        inViewThreshold: 0.6,\n        ...ctx,\n        timeoutRef: ref({ current: void 0 }),\n        translations: {\n          nextTrigger: \"Next slide\",\n          prevTrigger: \"Previous slide\",\n          indicator: (index) => `Go to slide ${index + 1}`,\n          item: (index, count) => `${index + 1} of ${count}`,\n          autoplayStart: \"Start slide rotation\",\n          autoplayStop: \"Stop slide rotation\",\n          ...ctx.translations\n        },\n        pageSnapPoints: getPageSnapPoints(\n          ctx.slideCount,\n          ctx.slidesPerMove ?? DEFAULT_SLIDES_PER_MOVE,\n          ctx.slidesPerPage ?? DEFAULT_SLIDES_PER_PAGE\n        ),\n        slidesInView: []\n      },\n      computed: {\n        isRtl: (ctx2) => ctx2.dir === \"rtl\",\n        isHorizontal: (ctx2) => ctx2.orientation === \"horizontal\",\n        canScrollNext: (ctx2) => ctx2.loop || ctx2.page < ctx2.pageSnapPoints.length - 1,\n        canScrollPrev: (ctx2) => ctx2.loop || ctx2.page > 0,\n        autoplayInterval: (ctx2) => isObject(ctx2.autoplay) ? ctx2.autoplay.delay : 4e3\n      },\n      watch: {\n        slidesPerPage: [\"setSnapPoints\"],\n        slidesPerMove: [\"setSnapPoints\"],\n        page: [\"scrollToPage\", \"focusIndicatorEl\"],\n        orientation: [\"setSnapPoints\", \"scrollToPage\"]\n      },\n      on: {\n        \"PAGE.NEXT\": {\n          target: \"idle\",\n          actions: [\"clearScrollEndTimer\", \"setNextPage\"]\n        },\n        \"PAGE.PREV\": {\n          target: \"idle\",\n          actions: [\"clearScrollEndTimer\", \"setPrevPage\"]\n        },\n        \"PAGE.SET\": {\n          target: \"idle\",\n          actions: [\"clearScrollEndTimer\", \"setPage\"]\n        },\n        \"INDEX.SET\": {\n          target: \"idle\",\n          actions: [\"clearScrollEndTimer\", \"setMatchingPage\"]\n        },\n        \"SNAP.REFRESH\": {\n          actions: [\"setSnapPoints\", \"clampPage\"]\n        }\n      },\n      activities: [\"trackSlideMutation\", \"trackSlideIntersections\", \"trackSlideResize\"],\n      entry: [\"resetScrollPosition\", \"setSnapPoints\", \"setPage\"],\n      exit: [\"clearScrollEndTimer\"],\n      states: {\n        idle: {\n          activities: [\"trackScroll\"],\n          on: {\n            \"DRAGGING.START\": {\n              target: \"dragging\",\n              actions: [\"invokeDragStart\"]\n            },\n            \"AUTOPLAY.START\": {\n              target: \"autoplay\",\n              actions: [\"invokeAutoplayStart\"]\n            }\n          }\n        },\n        dragging: {\n          activities: [\"trackPointerMove\"],\n          entry: [\"disableScrollSnap\"],\n          on: {\n            DRAGGING: {\n              actions: [\"scrollSlides\", \"invokeDragging\"]\n            },\n            \"DRAGGING.END\": {\n              target: \"idle\",\n              actions: [\"endDragging\", \"invokeDraggingEnd\"]\n            }\n          }\n        },\n        autoplay: {\n          activities: [\"trackDocumentVisibility\", \"trackScroll\"],\n          exit: [\"invokeAutoplayEnd\"],\n          every: {\n            AUTOPLAY_INTERVAL: [\"setNextPage\", \"invokeAutoplay\"]\n          },\n          on: {\n            \"DRAGGING.START\": {\n              target: \"dragging\",\n              actions: [\"invokeDragStart\"]\n            },\n            \"AUTOPLAY.PAUSE\": \"idle\"\n          }\n        }\n      }\n    },\n    {\n      activities: {\n        trackSlideMutation(ctx2, _evt, { send }) {\n          const el = dom.getItemGroupEl(ctx2);\n          if (!el) return;\n          const win = dom.getWin(ctx2);\n          const observer = new win.MutationObserver(() => {\n            send({ type: \"SNAP.REFRESH\", src: \"slide.mutation\" });\n            dom.syncTabIndex(ctx2);\n          });\n          dom.syncTabIndex(ctx2);\n          observer.observe(el, { childList: true, subtree: true });\n          return () => observer.disconnect();\n        },\n        trackSlideResize(ctx2, _evt, { send }) {\n          const el = dom.getItemGroupEl(ctx2);\n          if (!el) return;\n          const win = dom.getWin(ctx2);\n          const observer = new win.ResizeObserver(() => {\n            send({ type: \"SNAP.REFRESH\", src: \"slide.resize\" });\n          });\n          dom.getItemEls(ctx2).forEach((slide) => observer.observe(slide));\n          return () => observer.disconnect();\n        },\n        trackSlideIntersections(ctx2) {\n          const el = dom.getItemGroupEl(ctx2);\n          const win = dom.getWin(ctx2);\n          const observer = new win.IntersectionObserver(\n            (entries) => {\n              const slidesInView = entries.reduce((acc, entry) => {\n                const target = entry.target;\n                const index = Number(target.dataset.index ?? \"-1\");\n                if (index == null || Number.isNaN(index) || index === -1) return acc;\n                return entry.isIntersecting ? add(acc, index) : remove(acc, index);\n              }, ctx2.slidesInView);\n              ctx2.slidesInView = uniq(slidesInView);\n            },\n            {\n              root: el,\n              threshold: ctx2.inViewThreshold\n            }\n          );\n          dom.getItemEls(ctx2).forEach((slide) => observer.observe(slide));\n          return () => observer.disconnect();\n        },\n        trackScroll(ctx2) {\n          const el = dom.getItemGroupEl(ctx2);\n          if (!el) return;\n          const onScrollEnd = () => {\n            if (ctx2.slidesInView.length === 0) return;\n            const scrollPosition = ctx2.isHorizontal ? el.scrollLeft : el.scrollTop;\n            const page = ctx2.pageSnapPoints.findIndex((point) => Math.abs(point - scrollPosition) < 1);\n            if (page === -1) return;\n            set.page(ctx2, page);\n          };\n          const onScroll = () => {\n            clearTimeout(ctx2.timeoutRef.current);\n            ctx2.timeoutRef.current = setTimeout(() => {\n              onScrollEnd?.();\n            }, 150);\n          };\n          return addDomEvent(el, \"scroll\", onScroll, { passive: true });\n        },\n        trackDocumentVisibility(ctx2, _evt, { send }) {\n          const doc = dom.getDoc(ctx2);\n          const onVisibilityChange = () => {\n            if (doc.visibilityState === \"visible\") return;\n            send({ type: \"AUTOPLAY.PAUSE\", src: \"doc.hidden\" });\n          };\n          return addDomEvent(doc, \"visibilitychange\", onVisibilityChange);\n        },\n        trackPointerMove(ctx2, _evt, { send }) {\n          const doc = dom.getDoc(ctx2);\n          return trackPointerMove(doc, {\n            onPointerMove({ event }) {\n              send({ type: \"DRAGGING\", left: -event.movementX, top: -event.movementY });\n            },\n            onPointerUp() {\n              send({ type: \"DRAGGING.END\" });\n            }\n          });\n        }\n      },\n      actions: {\n        resetScrollPosition(ctx2) {\n          const el = dom.getItemGroupEl(ctx2);\n          el.scrollTo(0, 0);\n        },\n        clearScrollEndTimer(ctx2) {\n          if (ctx2.timeoutRef.current == null) return;\n          clearTimeout(ctx2.timeoutRef.current);\n          ctx2.timeoutRef.current = void 0;\n        },\n        scrollToPage(ctx2, evt) {\n          const behavior = evt.instant ? \"instant\" : \"smooth\";\n          const index = clamp(evt.index ?? ctx2.page, 0, ctx2.pageSnapPoints.length - 1);\n          const el = dom.getItemGroupEl(ctx2);\n          const axis = ctx2.isHorizontal ? \"left\" : \"top\";\n          el.scrollTo({ [axis]: ctx2.pageSnapPoints[index], behavior });\n        },\n        setNextPage(ctx2) {\n          const page = nextIndex(ctx2.pageSnapPoints, ctx2.page, { loop: ctx2.loop });\n          set.page(ctx2, page);\n        },\n        setPrevPage(ctx2) {\n          const page = prevIndex(ctx2.pageSnapPoints, ctx2.page, { loop: ctx2.loop });\n          set.page(ctx2, page);\n        },\n        setMatchingPage(ctx2, evt) {\n          const snapPoint = findSnapPoint(\n            dom.getItemGroupEl(ctx2),\n            ctx2.isHorizontal ? \"x\" : \"y\",\n            (node) => node.dataset.index === evt.index.toString()\n          );\n          if (snapPoint == null) return;\n          const page = ctx2.pageSnapPoints.indexOf(snapPoint);\n          set.page(ctx2, page);\n        },\n        setPage(ctx2, evt) {\n          set.page(ctx2, evt.index ?? ctx2.page);\n        },\n        clampPage(ctx2) {\n          const index = clamp(ctx2.page, 0, ctx2.pageSnapPoints.length - 1);\n          set.page(ctx2, index);\n        },\n        setSnapPoints(ctx2) {\n          queueMicrotask(() => {\n            const el = dom.getItemGroupEl(ctx2);\n            const scrollSnapPoints = getScrollSnapPositions(el);\n            ctx2.pageSnapPoints = ctx2.isHorizontal ? scrollSnapPoints.x : scrollSnapPoints.y;\n          });\n        },\n        disableScrollSnap(ctx2) {\n          const el = dom.getItemGroupEl(ctx2);\n          const styles = getComputedStyle(el);\n          el.dataset.scrollSnapType = styles.getPropertyValue(\"scroll-snap-type\");\n          el.style.setProperty(\"scroll-snap-type\", \"none\");\n        },\n        scrollSlides(ctx2, evt) {\n          const el = dom.getItemGroupEl(ctx2);\n          el.scrollBy({ left: evt.left, top: evt.top, behavior: \"instant\" });\n        },\n        endDragging(ctx2) {\n          const el = dom.getItemGroupEl(ctx2);\n          const startX = el.scrollLeft;\n          const startY = el.scrollTop;\n          const snapPositions = getScrollSnapPositions(el);\n          const closestX = snapPositions.x.reduce((closest, curr) => {\n            return Math.abs(curr - startX) < Math.abs(closest - startX) ? curr : closest;\n          }, snapPositions.x[0]);\n          const closestY = snapPositions.y.reduce((closest, curr) => {\n            return Math.abs(curr - startY) < Math.abs(closest - startY) ? curr : closest;\n          }, snapPositions.y[0]);\n          raf(() => {\n            el.scrollTo({ left: closestX, top: closestY, behavior: \"smooth\" });\n            const scrollSnapType = el.dataset.scrollSnapType;\n            if (scrollSnapType) {\n              el.style.removeProperty(\"scroll-snap-type\");\n              delete el.dataset.scrollSnapType;\n            }\n          });\n        },\n        focusIndicatorEl(ctx2, evt) {\n          if (evt.src !== \"indicator\") return;\n          const el = dom.getActiveIndicatorEl(ctx2);\n          raf(() => el.focus({ preventScroll: true }));\n        },\n        invokeDragStart(ctx2) {\n          ctx2.onDragStatusChange?.({ type: \"dragging.start\", isDragging: true, page: ctx2.page });\n        },\n        invokeDragging(ctx2) {\n          ctx2.onDragStatusChange?.({ type: \"dragging\", isDragging: true, page: ctx2.page });\n        },\n        invokeDraggingEnd(ctx2) {\n          ctx2.onDragStatusChange?.({ type: \"dragging.end\", isDragging: false, page: ctx2.page });\n        },\n        invokeAutoplay(ctx2) {\n          ctx2.onAutoplayStatusChange?.({ type: \"autoplay\", isPlaying: true, page: ctx2.page });\n        },\n        invokeAutoplayStart(ctx2) {\n          ctx2.onAutoplayStatusChange?.({ type: \"autoplay.start\", isPlaying: true, page: ctx2.page });\n        },\n        invokeAutoplayEnd(ctx2) {\n          ctx2.onAutoplayStatusChange?.({ type: \"autoplay.stop\", isPlaying: false, page: ctx2.page });\n        }\n      },\n      delays: {\n        AUTOPLAY_INTERVAL: (ctx2) => ctx2.autoplayInterval\n      }\n    }\n  );\n}\nvar invoke = {\n  pageChange: (ctx) => {\n    ctx.onPageChange?.({\n      page: ctx.page,\n      pageSnapPoint: ctx.pageSnapPoints[ctx.page]\n    });\n  }\n};\nvar set = {\n  page: (ctx, value) => {\n    const page = clamp(value, 0, ctx.pageSnapPoints.length - 1);\n    if (isEqual(ctx.page, page)) return;\n    ctx.page = page;\n    invoke.pageChange(ctx);\n  }\n};\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\nfunction getPageSnapPoints(totalSlides, slidesPerMove, slidesPerPage) {\n  if (totalSlides == null) return [];\n  const snapPoints = [];\n  const perMove = slidesPerMove === \"auto\" ? Math.floor(slidesPerPage) : slidesPerMove;\n  for (let i = 0; i < totalSlides - 1; i += perMove) snapPoints.push(i);\n  return snapPoints;\n}\nvar props = createProps()([\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"loop\",\n  \"page\",\n  \"onPageChange\",\n  \"orientation\",\n  \"slideCount\",\n  \"slidesPerPage\",\n  \"slidesPerMove\",\n  \"spacing\",\n  \"padding\",\n  \"autoplay\",\n  \"allowMouseDrag\",\n  \"inViewThreshold\",\n  \"translations\",\n  \"snapType\",\n  \"onDragStatusChange\",\n  \"onAutoplayStatusChange\"\n]);\nvar splitProps = createSplitProps(props);\nvar indicatorProps = createProps()([\"index\", \"readOnly\"]);\nvar splitIndicatorProps = createSplitProps(indicatorProps);\nvar itemProps = createProps()([\"index\", \"snapAlign\"]);\nvar splitItemProps = createSplitProps(itemProps);\n\nexport { anatomy, connect, indicatorProps, itemProps, machine, props, splitIndicatorProps, splitItemProps, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}