{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/KanbanBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getApprovalStatus, approveByAdvisor, approveByCompany } from '../../services/applicationService';\nimport { STATUS_COLORS, APPLICATION_STATUS, STATUS_LABELS } from '../../utils/constants/statuses';\nimport { usePermissions } from '../../contexts/PermissionsContext';\nimport { useAuth } from '../../contexts/AuthContext';\n\n// Función para escapar cadenas de texto para SQL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction escapeSQLString(str) {\n  if (!str) return '';\n  return str.replace(/'/g, \"''\");\n}\n\n// Interfaz para el estado de aprobación\n\n// Crear un tipo para aplicaciones con su estado de aprobación\n\nconst KanbanBoard = ({\n  applications,\n  onStatusChange\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [appsWithApproval, setAppsWithApproval] = useState([]);\n  const [processingAppId, setProcessingAppId] = useState(null);\n  const {\n    shouldFilterByEntity,\n    getEntityFilter,\n    isAdvisor,\n    isCompanyAdmin\n  } = usePermissions();\n  const {\n    user\n  } = useAuth();\n  const dragItemRef = useRef(null);\n  const dragImageRef = useRef(null);\n  const draggedItemIndexRef = useRef(-1);\n  const draggedItemNewStatusRef = useRef('');\n  const [autoTransitionMessage, setAutoTransitionMessage] = useState(null);\n\n  // Reemplazar los useEffects problemáticos con una única función más clara\n  useEffect(() => {\n    // Si no hay aplicaciones, no hacer nada\n    if (!applications || applications.length === 0) {\n      setAppsWithApproval([]);\n      return;\n    }\n    console.log('Procesando aplicaciones recibidas:', applications.map(app => ({\n      id: app.id,\n      status: app.status,\n      client: app.client_name,\n      amount: app.requested_amount\n    })));\n\n    // Procesar todas las aplicaciones para normalizar su estado\n    const processedApps = applications.map(app => {\n      // Normalizar estados - cualquier aplicación en estado pending o solicitud debe ir a new\n      let normalizedStatus = app.status;\n      if (!normalizedStatus || normalizedStatus === 'pending' || normalizedStatus === 'solicitud') {\n        normalizedStatus = APPLICATION_STATUS.NEW;\n        console.log(`Normalizando aplicación ${app.id} (${app.client_name}) de estado \"${app.status}\" a \"new\"`);\n      }\n      return {\n        ...app,\n        status: normalizedStatus\n      };\n    });\n\n    // Cargar los estados de aprobación para cada aplicación\n    const loadApprovalStatuses = async () => {\n      const entityFilter = shouldFilterByEntity() ? getEntityFilter() : null;\n      try {\n        const updatedApps = await Promise.all(processedApps.map(async app => {\n          try {\n            const approvalStatus = await getApprovalStatus(app.id, entityFilter);\n            return {\n              ...app,\n              approvalStatus\n            };\n          } catch (error) {\n            console.error(`Error loading approval status for app ${app.id}:`, error);\n            return app;\n          }\n        }));\n        console.log(`Aplicaciones procesadas: ${updatedApps.length}`);\n        setAppsWithApproval(updatedApps);\n      } catch (error) {\n        console.error(\"Error cargando estados de aprobación:\", error);\n        // En caso de error, al menos utilizar las aplicaciones con estados normalizados\n        setAppsWithApproval(processedApps.map(app => ({\n          ...app\n        })));\n      }\n    };\n    loadApprovalStatuses();\n  }, [applications, shouldFilterByEntity, getEntityFilter]);\n\n  // Simplificar la lógica de agrupación para evitar pérdida de datos\n  const groupedApplications = React.useMemo(() => {\n    console.log('Agrupando aplicaciones:', appsWithApproval.map(app => ({\n      id: app.id,\n      status: app.status,\n      client: app.client_name\n    })));\n\n    // Crear un objeto con todos los estados posibles como claves y arrays vacíos como valores\n    const initialGroups = Object.values(APPLICATION_STATUS).reduce((acc, status) => {\n      acc[status] = [];\n      return acc;\n    }, {});\n\n    // Luego añadir las aplicaciones a sus grupos correspondientes\n    return appsWithApproval.reduce((acc, app) => {\n      if (app.isMoving && app.targetStatus) {\n        // Si está en movimiento, colocarla en la columna de destino\n        acc[app.targetStatus].push(app);\n      } else {\n        // Si no, usar el estado normal, normalizando \"pending\" y \"solicitud\" a \"new\"\n        let status = app.status || APPLICATION_STATUS.NEW;\n\n        // Normalizar estados \"pending\" y \"solicitud\" a \"new\"\n        if (status === 'pending' || status === 'solicitud') {\n          status = APPLICATION_STATUS.NEW;\n        }\n        acc[status].push(app);\n      }\n      return acc;\n    }, initialGroups);\n  }, [appsWithApproval]);\n\n  // Optimizar la creación de columnas para incluir correctamente todas las aplicaciones\n  const columns = React.useMemo(() => {\n    // Registrar la cantidad de aplicaciones en cada grupo para depuración\n    console.log('Conteo de aplicaciones por estado:');\n    Object.entries(groupedApplications).forEach(([status, apps]) => {\n      console.log(`${status}: ${apps.length}`);\n    });\n\n    // Diferentes configuraciones de columnas según el rol\n    if (isCompanyAdmin()) {\n      var _groupedApplications$;\n      // Configuración para administradores de empresa\n      const companyAdminColumns = [{\n        id: APPLICATION_STATUS.NEW,\n        title: STATUS_LABELS[APPLICATION_STATUS.NEW],\n        color: STATUS_COLORS[APPLICATION_STATUS.NEW] || 'neutral',\n        applications: [...(groupedApplications[APPLICATION_STATUS.NEW] || []), ...(groupedApplications[APPLICATION_STATUS.PENDING] || []), ...(groupedApplications[APPLICATION_STATUS.SOLICITUD] || [])]\n      }, {\n        id: APPLICATION_STATUS.IN_REVIEW,\n        title: STATUS_LABELS[APPLICATION_STATUS.IN_REVIEW],\n        color: STATUS_COLORS[APPLICATION_STATUS.IN_REVIEW] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.IN_REVIEW] || []\n      }, {\n        id: APPLICATION_STATUS.APPROVED,\n        title: 'Aprobado por mi',\n        color: STATUS_COLORS[APPLICATION_STATUS.APPROVED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.APPROVED] || []\n      }, {\n        id: APPLICATION_STATUS.POR_DISPERSAR,\n        title: STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR],\n        color: STATUS_COLORS[APPLICATION_STATUS.POR_DISPERSAR] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.POR_DISPERSAR] || []\n      }, {\n        id: APPLICATION_STATUS.COMPLETED,\n        title: STATUS_LABELS[APPLICATION_STATUS.COMPLETED],\n        color: STATUS_COLORS[APPLICATION_STATUS.COMPLETED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.COMPLETED] || []\n      }, {\n        id: APPLICATION_STATUS.EXPIRED,\n        title: STATUS_LABELS[APPLICATION_STATUS.EXPIRED],\n        color: STATUS_COLORS[APPLICATION_STATUS.EXPIRED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.EXPIRED] || []\n      }];\n\n      // Agregar columna \"Rechazado\" si hay aplicaciones rechazadas\n      if (((_groupedApplications$ = groupedApplications[APPLICATION_STATUS.REJECTED]) === null || _groupedApplications$ === void 0 ? void 0 : _groupedApplications$.length) > 0) {\n        companyAdminColumns.splice(3, 0, {\n          id: APPLICATION_STATUS.REJECTED,\n          title: STATUS_LABELS[APPLICATION_STATUS.REJECTED],\n          color: STATUS_COLORS[APPLICATION_STATUS.REJECTED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.REJECTED] || []\n        });\n      }\n      console.log('Columnas para admin de empresa:', companyAdminColumns.map(col => ({\n        id: col.id,\n        count: col.applications.length\n      })));\n      return companyAdminColumns;\n    }\n\n    // Para asesores, mostrar todas las columnas estándar\n    const advisorColumns = [{\n      id: APPLICATION_STATUS.NEW,\n      title: STATUS_LABELS[APPLICATION_STATUS.NEW],\n      color: STATUS_COLORS[APPLICATION_STATUS.NEW] || 'neutral',\n      applications: [...(groupedApplications[APPLICATION_STATUS.NEW] || []), ...(groupedApplications[APPLICATION_STATUS.PENDING] || []), ...(groupedApplications[APPLICATION_STATUS.SOLICITUD] || [])]\n    }, {\n      id: APPLICATION_STATUS.IN_REVIEW,\n      title: STATUS_LABELS[APPLICATION_STATUS.IN_REVIEW],\n      color: STATUS_COLORS[APPLICATION_STATUS.IN_REVIEW] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.IN_REVIEW] || []\n    }, {\n      id: APPLICATION_STATUS.APPROVED,\n      title: STATUS_LABELS[APPLICATION_STATUS.APPROVED],\n      color: STATUS_COLORS[APPLICATION_STATUS.APPROVED] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.APPROVED] || []\n    }, {\n      id: APPLICATION_STATUS.REJECTED,\n      title: STATUS_LABELS[APPLICATION_STATUS.REJECTED],\n      color: STATUS_COLORS[APPLICATION_STATUS.REJECTED] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.REJECTED] || []\n    }, {\n      id: APPLICATION_STATUS.POR_DISPERSAR,\n      title: STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR],\n      color: STATUS_COLORS[APPLICATION_STATUS.POR_DISPERSAR] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.POR_DISPERSAR] || []\n    }, {\n      id: APPLICATION_STATUS.COMPLETED,\n      title: STATUS_LABELS[APPLICATION_STATUS.COMPLETED],\n      color: STATUS_COLORS[APPLICATION_STATUS.COMPLETED] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.COMPLETED] || []\n    }, {\n      id: APPLICATION_STATUS.EXPIRED,\n      title: STATUS_LABELS[APPLICATION_STATUS.EXPIRED],\n      color: STATUS_COLORS[APPLICATION_STATUS.EXPIRED] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.EXPIRED] || []\n    }, {\n      id: APPLICATION_STATUS.CANCELLED,\n      title: STATUS_LABELS[APPLICATION_STATUS.CANCELLED],\n      color: STATUS_COLORS[APPLICATION_STATUS.CANCELLED] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.CANCELLED] || []\n    }];\n    console.log('Columnas para asesor:', advisorColumns.map(col => ({\n      id: col.id,\n      count: col.applications.length\n    })));\n    return advisorColumns;\n  }, [groupedApplications, isCompanyAdmin]);\n\n  // Función para actualizar localmente el estado de aprobación de una aplicación\n  const updateLocalApprovalStatus = (applicationId, updates) => {\n    setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n      ...app,\n      approvalStatus: {\n        ...(app.approvalStatus || {\n          approvedByAdvisor: false,\n          approvedByCompany: false\n        }),\n        ...updates\n      }\n    } : app));\n  };\n  const handleDragStart = (e, application, idx) => {\n    // Guardar la aplicación que estamos arrastrando\n    draggedItemIndexRef.current = idx;\n\n    // Almacenar el elemento que estamos arrastrando para gestionar mejor el evento\n    dragItemRef.current = e.currentTarget;\n\n    // Establecer los datos que queremos transferir\n    e.dataTransfer.setData('text/plain', application.id);\n    e.dataTransfer.effectAllowed = 'move';\n\n    // Crear una copia visual para el arrastre\n    if (!dragImageRef.current) {\n      dragImageRef.current = e.currentTarget.cloneNode(true);\n      dragImageRef.current.style.position = 'absolute';\n      dragImageRef.current.style.top = '-1000px';\n      dragImageRef.current.style.opacity = '0.8';\n      dragImageRef.current.style.transform = 'scale(0.9)';\n      dragImageRef.current.style.width = `${e.currentTarget.offsetWidth}px`;\n      document.body.appendChild(dragImageRef.current);\n    }\n\n    // Establecer la imagen de arrastre\n    if (dragImageRef.current) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      e.dataTransfer.setDragImage(dragImageRef.current, rect.width / 2, 20);\n    }\n\n    // Añadir clase CSS para mostrar visualmente que el elemento está siendo arrastrado\n    if (e.currentTarget) {\n      e.currentTarget.classList.add('dragging');\n    }\n  };\n  const handleDragEnd = e => {\n    // Eliminar clase CSS de arrastre\n    if (dragItemRef.current) {\n      dragItemRef.current.classList.remove('dragging');\n      dragItemRef.current = null;\n    }\n    if (e.currentTarget) {\n      e.currentTarget.classList.remove('dragging');\n    }\n\n    // Eliminar el elemento clonado para el arrastre\n    if (dragImageRef.current) {\n      document.body.removeChild(dragImageRef.current);\n      dragImageRef.current = null;\n    }\n    draggedItemIndexRef.current = -1;\n    draggedItemNewStatusRef.current = '';\n  };\n  const handleDragOver = (e, columnStatus) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n\n    // Guardar el nuevo estado para la actualización optimista\n    if (draggedItemNewStatusRef.current !== columnStatus) {\n      draggedItemNewStatusRef.current = columnStatus;\n    }\n\n    // Añadir clase visual para indicar la columna destino\n    if (e.currentTarget.classList.contains('kanban-column')) {\n      document.querySelectorAll('.kanban-column').forEach(col => {\n        col.classList.remove('drag-over');\n      });\n      e.currentTarget.classList.add('drag-over');\n    }\n  };\n\n  // Actualizar la función canDragCard para permitir mover tarjetas de status \"nuevo\" para admin de empresa\n  const canDragCard = app => {\n    // Los asesores pueden mover todas las tarjetas excepto las que están en movimiento\n    if (isAdvisor()) {\n      return !app.isMoving;\n    }\n\n    // Para administradores de empresa:\n    if (isCompanyAdmin()) {\n      // No puede mover tarjetas que ya están en movimiento\n      if (app.isMoving) return false;\n\n      // Puede mover tarjetas en estado \"nuevo\" (new), null, pending o solicitud\n      if (!app.status || app.status === APPLICATION_STATUS.NEW || app.status === 'pending' || app.status === 'solicitud') return true;\n\n      // Puede mover tarjetas en revisión (in_review)\n      if (app.status === APPLICATION_STATUS.IN_REVIEW) return true;\n\n      // Puede mover tarjetas a estado aprobado por empresa\n      if (app.status === APPLICATION_STATUS.APPROVED) return true;\n\n      // No puede mover tarjetas en estos estados\n      if (app.status === APPLICATION_STATUS.REJECTED || app.status === APPLICATION_STATUS.POR_DISPERSAR || app.status === APPLICATION_STATUS.COMPLETED || app.status === APPLICATION_STATUS.EXPIRED || app.status === APPLICATION_STATUS.CANCELLED) {\n        return false;\n      }\n\n      // Por defecto, permitir movimiento para cualquier otro estado\n      return true;\n    }\n\n    // Para otros roles, no permitir mover tarjetas\n    return false;\n  };\n\n  // Restaurar la función handleDrop correctamente arreglada para que funcione con el formato actual de datos\n  const handleDrop = async (e, newStatus) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // Eliminar todas las clases de arrastre\n    document.querySelectorAll('.kanban-column').forEach(col => {\n      col.classList.remove('drag-over');\n    });\n\n    // Recuperar el ID de la aplicación y validaciones básicas\n    const applicationId = e.dataTransfer.getData('text/plain');\n    if (!applicationId || !onStatusChange || !(user !== null && user !== void 0 && user.id)) return;\n    const application = appsWithApproval.find(app => app.id === applicationId);\n    if (!application) return;\n    const oldStatus = application.status;\n\n    // No hacer nada si el estatus es el mismo\n    if (oldStatus === newStatus) return;\n\n    // Restricciones específicas por rol\n    if (isCompanyAdmin()) {\n      // El admin de empresa solo puede mover tarjetas entre NEW, IN_REVIEW y APPROVED\n      const allowedTargetStatuses = [APPLICATION_STATUS.NEW, APPLICATION_STATUS.IN_REVIEW, APPLICATION_STATUS.APPROVED];\n\n      // Si la aplicación está rechazada, solo el asesor puede moverla\n      if (oldStatus === APPLICATION_STATUS.REJECTED) {\n        setErrorMessage(\"Esta solicitud fue rechazada y solo el asesor puede moverla.\");\n        return;\n      }\n\n      // Verificar si el estado al que quiere mover está permitido\n      if (!allowedTargetStatuses.includes(newStatus)) {\n        setErrorMessage(`No puedes mover tarjetas al estado \"${STATUS_LABELS[newStatus]}\". Solo puedes mover entre Nuevo, En Revisión y Aprobado.`);\n        return;\n      }\n\n      // Verificar si el estado desde el cual quiere mover está permitido\n      // Si el estado es NEW o es uno de los estados permitidos para mover, permitir el movimiento\n      const allowedSourceStatuses = [APPLICATION_STATUS.NEW, APPLICATION_STATUS.IN_REVIEW, APPLICATION_STATUS.APPROVED];\n      if (!allowedSourceStatuses.includes(oldStatus)) {\n        setErrorMessage(`No puedes mover tarjetas que están en estado \"${STATUS_LABELS[oldStatus]}\".`);\n        return;\n      }\n    }\n\n    // Restricción específica para asesores: solo ellos pueden mover de Por Dispersar a Completado\n    if (newStatus === APPLICATION_STATUS.COMPLETED && oldStatus === APPLICATION_STATUS.POR_DISPERSAR && !isAdvisor()) {\n      setErrorMessage(\"Solo los asesores pueden marcar solicitudes como completadas después de la dispersión.\");\n      return;\n    }\n    try {\n      // Establecer el ID de la aplicación que se está procesando\n      setProcessingAppId(applicationId);\n\n      // Actualización optimista en UI para mejor fluidez - moviendo visualmente la tarjeta\n      const updatedApps = [...appsWithApproval];\n      const appIndex = updatedApps.findIndex(app => app.id === applicationId);\n      if (appIndex !== -1) {\n        // Crear copia profunda de la aplicación para evitar referencias\n        const updatedApp = {\n          ...updatedApps[appIndex],\n          isMoving: true,\n          targetStatus: newStatus\n        };\n\n        // Lógica para manejar aprobaciones de manera optimista\n        const isMovingToApproved = newStatus === APPLICATION_STATUS.APPROVED;\n        const isMovingFromApproved = oldStatus === APPLICATION_STATUS.APPROVED && newStatus !== APPLICATION_STATUS.APPROVED;\n\n        // Si se mueve a aprobado y el usuario es asesor, marcar como aprobado por asesor\n        if (isMovingToApproved && isAdvisor() && user !== null && user !== void 0 && user.entityId) {\n          updatedApp.approvalStatus = {\n            ...(updatedApp.approvalStatus || {\n              approvedByAdvisor: false,\n              approvedByCompany: false\n            }),\n            approvedByAdvisor: true\n          };\n        }\n\n        // Si se mueve a aprobado y el usuario es admin de empresa, marcar como aprobado por empresa\n        if (isMovingToApproved && isCompanyAdmin() && user !== null && user !== void 0 && user.entityId && application.company_id) {\n          updatedApp.approvalStatus = {\n            ...(updatedApp.approvalStatus || {\n              approvedByAdvisor: false,\n              approvedByCompany: false\n            }),\n            approvedByCompany: true\n          };\n        }\n\n        // Si se mueve desde aprobado, resetear los estados de aprobación según el rol\n        if (isMovingFromApproved) {\n          if (isAdvisor()) {\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || {\n                approvedByAdvisor: false,\n                approvedByCompany: false\n              }),\n              approvedByAdvisor: false\n            };\n          } else if (isCompanyAdmin()) {\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || {\n                approvedByAdvisor: false,\n                approvedByCompany: false\n              }),\n              approvedByCompany: false\n            };\n          }\n        }\n        updatedApps[appIndex] = updatedApp;\n        setAppsWithApproval(updatedApps);\n      }\n\n      // Procesar en el servidor en paralelo\n      const entityFilter = shouldFilterByEntity() ? getEntityFilter() : null;\n      const isMovingToApproved = newStatus === APPLICATION_STATUS.APPROVED;\n\n      // Crear un array de promesas para manejar todas las operaciones del servidor\n      const serverOperations = [];\n\n      // Si se mueve a aprobado y el usuario es asesor, marcar como aprobado por asesor\n      if (isMovingToApproved && isAdvisor() && user !== null && user !== void 0 && user.entityId) {\n        serverOperations.push(approveByAdvisor(applicationId, \"Aprobado vía Kanban\", user.entityId, entityFilter).then(async result => {\n          // Verificar si la aplicación ya está aprobada por la empresa\n          const approvalStatus = await getApprovalStatus(applicationId);\n\n          // Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\n          if (approvalStatus !== null && approvalStatus !== void 0 && approvalStatus.approvedByAdvisor && approvalStatus !== null && approvalStatus !== void 0 && approvalStatus.approvedByCompany) {\n            // Mostrar notificación de transición automática\n            setAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n\n            // Actualizar el estado objetivo para la animación\n            setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n              ...app,\n              targetStatus: APPLICATION_STATUS.POR_DISPERSAR,\n              isMoving: true\n            } : app));\n\n            // Cambiar el estado a \"por_dispersar\"\n            setTimeout(() => {\n              onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n              // Limpiar el mensaje después de mostrar\n              setTimeout(() => setAutoTransitionMessage(null), 3000);\n            }, 500);\n          }\n          return result;\n        }).catch(error => {\n          console.error(\"Error al aprobar por asesor:\", error);\n        }));\n      }\n\n      // Si se mueve a aprobado y el usuario es admin de empresa, marcar como aprobado por empresa\n      if (isMovingToApproved && isCompanyAdmin() && user !== null && user !== void 0 && user.entityId && application.company_id) {\n        serverOperations.push(approveByCompany(applicationId, \"Aprobado vía Kanban\", user.entityId, application.company_id, entityFilter).then(async result => {\n          // Verificar si la aplicación ya está aprobada por el asesor\n          const approvalStatus = await getApprovalStatus(applicationId);\n\n          // Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\n          if (approvalStatus !== null && approvalStatus !== void 0 && approvalStatus.approvedByAdvisor && approvalStatus !== null && approvalStatus !== void 0 && approvalStatus.approvedByCompany) {\n            // Mostrar notificación de transición automática\n            setAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n\n            // Actualizar el estado objetivo para la animación\n            setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n              ...app,\n              targetStatus: APPLICATION_STATUS.POR_DISPERSAR,\n              isMoving: true\n            } : app));\n\n            // Cambiar el estado a \"por_dispersar\"\n            setTimeout(() => {\n              onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n              // Limpiar el mensaje después de mostrar\n              setTimeout(() => setAutoTransitionMessage(null), 3000);\n            }, 500);\n          }\n          return result;\n        }).catch(error => {\n          console.error(\"Error al aprobar por empresa:\", error);\n        }));\n      }\n\n      // Añadir la operación de cambio de estado\n      serverOperations.push(onStatusChange(application, newStatus));\n\n      // Ejecutar todas las operaciones en paralelo después de un pequeño retraso para permitir la animación\n      setTimeout(async () => {\n        try {\n          await Promise.all(serverOperations);\n\n          // Actualizar el estado final en la UI\n          setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n            ...app,\n            status: newStatus,\n            isMoving: false,\n            targetStatus: undefined\n          } : app));\n        } catch (error) {\n          setErrorMessage(`Error al actualizar el estatus: ${error.message}`);\n          console.error(\"Error updating status:\", error);\n\n          // Revertir el cambio optimista si falla\n          setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n            ...app,\n            status: oldStatus,\n            isMoving: false,\n            targetStatus: undefined\n          } : app));\n        } finally {\n          setProcessingAppId(null);\n        }\n      }, 300); // Retraso para permitir que la animación se muestre\n    } catch (error) {\n      setErrorMessage(`Error al actualizar el estatus: ${error.message}`);\n      console.error(\"Error updating status:\", error);\n\n      // Revertir el cambio optimista si falla\n      setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n        ...app,\n        status: oldStatus,\n        isMoving: false,\n        targetStatus: undefined\n      } : app));\n      setProcessingAppId(null);\n    }\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN'\n    }).format(amount);\n  };\n\n  // Renderizar los indicadores de aprobación\n  const renderApprovalIndicators = app => {\n    if (!app.approvalStatus) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mt-1 space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip tooltip-top flex items-center\",\n        \"data-tip\": app.approvalStatus.approvedByAdvisor ? \"Aprobado por asesor\" : \"Pendiente de aprobación por asesor\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs mr-1\",\n          children: \"Asesor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${app.approvalStatus.approvedByAdvisor ? 'bg-success animate-pulse' : 'bg-warning'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip tooltip-top flex items-center\",\n        \"data-tip\": app.approvalStatus.approvedByCompany ? \"Aprobado por empresa\" : \"Pendiente de aprobación por empresa\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs mr-1\",\n          children: \"Empresa:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${app.approvalStatus.approvedByCompany ? 'bg-success animate-pulse' : 'bg-warning'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this), app.approvalStatus.approvedByAdvisor && app.approvalStatus.approvedByCompany && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip tooltip-top ml-2\",\n        \"data-tip\": \"Aprobada por ambos\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge badge-success badge-sm\",\n          children: \"Aprobado Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this);\n  };\n  const getProductLabel = type => {\n    const labels = {\n      'selected_plans': 'Crédito a Plazos',\n      'product_simulations': 'Simulación',\n      'auto_loan': 'Crédito Auto',\n      'car_backed_loan': 'Crédito con Garantía',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n    return labels[type] || type;\n  };\n\n  // Función para obtener el color apropiado para la tarjeta según estado y aprobaciones\n  const getCardColor = app => {\n    const status = app.status || '';\n\n    // Colores específicos según el estado\n    switch (status.toLowerCase()) {\n      case APPLICATION_STATUS.REJECTED:\n        return 'border-error bg-red-50';\n      case APPLICATION_STATUS.APPROVED:\n        // Si está aprobado, verificar el estado de las aprobaciones\n        if (app.approvalStatus) {\n          const {\n            approvedByAdvisor,\n            approvedByCompany\n          } = app.approvalStatus;\n          if (approvedByAdvisor && approvedByCompany) {\n            return 'border-success bg-green-100'; // Aprobado por ambos\n          } else if (approvedByAdvisor) {\n            return 'border-success bg-green-50'; // Aprobado solo por asesor\n          } else if (approvedByCompany) {\n            return 'border-info bg-blue-50'; // Aprobado solo por empresa\n          }\n        }\n        return 'border-success bg-green-50';\n      case APPLICATION_STATUS.IN_REVIEW:\n        return 'border-info bg-blue-50';\n      case APPLICATION_STATUS.NEW:\n        return 'border-warning bg-yellow-50';\n      case APPLICATION_STATUS.PENDING:\n        return 'border-warning bg-amber-50';\n      case APPLICATION_STATUS.POR_DISPERSAR:\n        return 'border-accent bg-purple-50';\n      case APPLICATION_STATUS.COMPLETED:\n        return 'border-primary bg-indigo-50';\n      case APPLICATION_STATUS.EXPIRED:\n        return 'border-error bg-red-100';\n      case APPLICATION_STATUS.CANCELLED:\n        return 'border-neutral bg-gray-100';\n      default:\n        // Si el estado no coincide con ninguno de los anteriores, usar el color de la columna\n        return `border-${app.status || 'neutral'}`;\n    }\n  };\n\n  // Función para determinar si una tarjeta está habilitada para ser movida\n  const getDraggableClasses = app => {\n    const canDrag = canDragCard(app) && !!onStatusChange && app.id !== processingAppId;\n    if (canDrag) {\n      return 'cursor-grab hover:shadow-lg kanban-card-draggable';\n    } else {\n      return 'cursor-not-allowed opacity-80 kanban-card-locked';\n    }\n  };\n\n  // Función para obtener el texto del tooltip según el estado de la tarjeta\n  const getDragTooltip = app => {\n    if (app.id === processingAppId) {\n      return \"Esta tarjeta está siendo procesada\";\n    }\n    if (!onStatusChange) {\n      return \"No tienes permisos para mover tarjetas\";\n    }\n    if (isCompanyAdmin()) {\n      if (app.status === APPLICATION_STATUS.REJECTED) {\n        return \"Las tarjetas rechazadas solo pueden ser movidas por asesores\";\n      }\n      if ([APPLICATION_STATUS.POR_DISPERSAR, APPLICATION_STATUS.COMPLETED, APPLICATION_STATUS.EXPIRED, APPLICATION_STATUS.CANCELLED].includes(app.status)) {\n        return `No puedes mover tarjetas que están en estado \"${STATUS_LABELS[app.status]}\"`;\n      }\n    }\n    return \"Arrastra para cambiar el estado\";\n  };\n  if (applications.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-base-200 p-6 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-medium text-center\",\n        children: \"No hay solicitudes para mostrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500 mt-2\",\n        children: \"No se encontraron solicitudes en el sistema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Añadir estilos CSS para el scrollbar personalizado y mejoras visuales\n  const customStyles = `\n    .custom-scrollbar::-webkit-scrollbar {\n      width: 8px;\n      height: 8px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-track {\n      background: #f1f1f1;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb {\n      background: #888;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n    \n    .kanban-card {\n      transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out, box-shadow 0.3s ease-in-out, border-color 0.3s ease;\n      touch-action: none;\n      user-select: none;\n      will-change: transform, opacity; /* Optimización para hardware rendering */\n    }\n    \n    .kanban-card-draggable:active {\n      cursor: grabbing;\n    }\n    \n    .kanban-card-locked {\n      position: relative;\n    }\n    \n    .kanban-card-locked::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 12px;\n      height: 12px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23999'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n    }\n    \n    .kanban-card.dragging {\n      opacity: 0.8;\n      transform: scale(1.03);\n      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      z-index: 50;\n    }\n    \n    .kanban-column {\n      transition: all 0.2s ease;\n      border-radius: 0.75rem;\n      will-change: transform, background-color; /* Optimización para hardware rendering */\n    }\n    \n    .kanban-column.drag-over {\n      background-color: rgba(var(--b2, 217 217 217) / 0.5);\n      transform: scale(1.01);\n      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n    }\n\n    .kanban-container {\n      scroll-behavior: smooth;\n    }\n\n    @media (min-width: 768px) {\n      .kanban-card:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n      }\n    }\n    \n    /* Animaciones para cambios de estado */\n    @keyframes fadeIn {\n      0% { opacity: 0; }\n      100% { opacity: 1; }\n    }\n    \n    @keyframes slideIn {\n      0% { transform: translateY(10px); opacity: 0; }\n      100% { transform: translateY(0); opacity: 1; }\n    }\n    \n    @keyframes processingPulse {\n      0% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0.4); }\n      70% { box-shadow: 0 0 0 6px rgba(124, 58, 237, 0); }\n      100% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0); }\n    }\n    \n    .kanban-card {\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    .processing-toast {\n      position: fixed;\n      bottom: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    .auto-transition-toast {\n      position: fixed;\n      bottom: 70px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: #dcfce7;\n      border: 1px solid #86efac;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    /* Mejoras para vista mobile */\n    @media (max-width: 640px) {\n      .kanban-column {\n        min-height: 300px;\n      }\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full overflow-x-auto custom-scrollbar relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: customStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 7\n    }, this), processingAppId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing-toast\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading loading-spinner loading-sm text-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium\",\n        children: \"Actualizando estado...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 9\n    }, this), autoTransitionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-transition-toast\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading loading-spinner loading-sm text-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium\",\n        children: autoTransitionMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 alert alert-error shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"stroke-current flex-shrink-0 h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: \"2\",\n            d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-none\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm\",\n          onClick: () => setErrorMessage(null),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 2xl:grid-cols-6 gap-4 pb-4 kanban-container p-4\",\n      style: {\n        minWidth: '1000px'\n      },\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bg-base-100 rounded-xl shadow-md border-t-4 border-${column.color} border-l border-r border-b flex flex-col h-full kanban-column`,\n        onDragOver: e => {\n          handleDragOver(e, column.id);\n        },\n        onDragLeave: e => {\n          e.currentTarget.classList.remove('drag-over');\n        },\n        onDrop: e => {\n          handleDrop(e, column.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-center py-3 px-4 font-bold rounded-t-lg flex items-center justify-between bg-${column.color} bg-opacity-10`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-${column.color} font-bold text-lg`,\n            children: column.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge badge-${column.color} badge-lg`,\n            children: column.applications.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 space-y-3 min-h-[500px] max-h-[calc(100vh-220px)] overflow-y-auto custom-scrollbar flex-grow\",\n          children: column.applications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center h-full opacity-50 border-2 border-dashed border-base-300 rounded-lg p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-12 w-12 mx-auto text-gray-400\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 1,\n                  d: \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1022,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-2\",\n                children: \"No hay solicitudes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1024,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 17\n          }, this) : column.applications.map((app, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-tip\": getDragTooltip(app),\n            className: `card shadow hover:shadow-lg transition-all ${getCardColor(app)} border-l-4 border-t border-r border-b hover:border-primary kanban-card relative ${app.id === processingAppId ? 'processing' : ''} ${app.isMoving ? 'opacity-90' : ''} ${getDraggableClasses(app)}`,\n            draggable: !!onStatusChange && app.id !== processingAppId && canDragCard(app),\n            onDragStart: e => handleDragStart(e, app, index),\n            onDragEnd: handleDragEnd,\n            style: {\n              animation: app.id === processingAppId ? 'processingPulse 1.5s infinite' : ''\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1 font-semibold\",\n                    children: app.client_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1043,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge badge-${column.color} badge-md`,\n                    children: getProductLabel(app.application_type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1044,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1042,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600 mb-1 flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1 inline\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1052,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1051,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"truncate max-w-[180px] font-medium\",\n                    children: app.company_name || \"Sin empresa\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1054,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1050,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1 text-primary\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1062,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1061,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-base font-bold text-primary\",\n                    children: formatCurrency(app.requested_amount)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1064,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1060,\n                  columnNumber: 25\n                }, this), renderApprovalIndicators(app), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-actions justify-end mt-3\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/applications/${app.id}`,\n                    className: \"btn btn-sm btn-primary w-full\",\n                    children: \"Ver Detalle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1073,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1072,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1048,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 21\n            }, this)\n          }, app.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 13\n        }, this)]\n      }, column.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 996,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 963,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"9HJAHsGKha/OdaiZwZ4vKu+iN2M=\", false, function () {\n  return [usePermissions, useAuth];\n});\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","getApprovalStatus","approveByAdvisor","approveByCompany","STATUS_COLORS","APPLICATION_STATUS","STATUS_LABELS","usePermissions","useAuth","jsxDEV","_jsxDEV","escapeSQLString","str","replace","KanbanBoard","applications","onStatusChange","_s","isLoading","setIsLoading","errorMessage","setErrorMessage","appsWithApproval","setAppsWithApproval","processingAppId","setProcessingAppId","shouldFilterByEntity","getEntityFilter","isAdvisor","isCompanyAdmin","user","dragItemRef","dragImageRef","draggedItemIndexRef","draggedItemNewStatusRef","autoTransitionMessage","setAutoTransitionMessage","length","console","log","map","app","id","status","client","client_name","amount","requested_amount","processedApps","normalizedStatus","NEW","loadApprovalStatuses","entityFilter","updatedApps","Promise","all","approvalStatus","error","groupedApplications","useMemo","initialGroups","Object","values","reduce","acc","isMoving","targetStatus","push","columns","entries","forEach","apps","_groupedApplications$","companyAdminColumns","title","color","PENDING","SOLICITUD","IN_REVIEW","APPROVED","POR_DISPERSAR","COMPLETED","EXPIRED","REJECTED","splice","col","count","advisorColumns","CANCELLED","updateLocalApprovalStatus","applicationId","updates","prev","approvedByAdvisor","approvedByCompany","handleDragStart","e","application","idx","current","currentTarget","dataTransfer","setData","effectAllowed","cloneNode","style","position","top","opacity","transform","width","offsetWidth","document","body","appendChild","rect","getBoundingClientRect","setDragImage","classList","add","handleDragEnd","remove","removeChild","handleDragOver","columnStatus","preventDefault","stopPropagation","dropEffect","contains","querySelectorAll","canDragCard","handleDrop","newStatus","getData","find","oldStatus","allowedTargetStatuses","includes","allowedSourceStatuses","appIndex","findIndex","updatedApp","isMovingToApproved","isMovingFromApproved","entityId","company_id","serverOperations","then","result","setTimeout","catch","undefined","message","formatCurrency","Intl","NumberFormat","currency","format","renderApprovalIndicators","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getProductLabel","type","labels","getCardColor","toLowerCase","getDraggableClasses","canDrag","getDragTooltip","customStyles","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","minWidth","column","onDragOver","onDragLeave","onDrop","stroke","index","draggable","onDragStart","onDragEnd","animation","application_type","company_name","to","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Application, getApprovalStatus, approveByAdvisor, approveByCompany } from '../../services/applicationService';\nimport { STATUS_COLORS, APPLICATION_STATUS, STATUS_LABELS } from '../../utils/constants/statuses';\nimport { usePermissions } from '../../contexts/PermissionsContext';\nimport { useAuth } from '../../contexts/AuthContext';\n\n// Función para escapar cadenas de texto para SQL\nfunction escapeSQLString(str: string) {\n  if (!str) return '';\n  return str.replace(/'/g, \"''\");\n}\n\ninterface KanbanBoardProps {\n  applications: Application[];\n  onStatusChange?: (application: Application, newStatus: string) => Promise<void>;\n}\n\n// Interfaz para el estado de aprobación\ninterface ApprovalStatus {\n  approvedByAdvisor: boolean;\n  approvedByCompany: boolean;\n}\n\n// Crear un tipo para aplicaciones con su estado de aprobación\ntype ApplicationWithApproval = Application & {\n  approvalStatus?: ApprovalStatus;\n  isMoving?: boolean;\n  targetStatus?: string;\n};\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({ applications, onStatusChange }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  const [appsWithApproval, setAppsWithApproval] = useState<ApplicationWithApproval[]>([]);\n  const [processingAppId, setProcessingAppId] = useState<string | null>(null);\n  const { shouldFilterByEntity, getEntityFilter, isAdvisor, isCompanyAdmin } = usePermissions();\n  const { user } = useAuth();\n  const dragItemRef = useRef<HTMLDivElement | null>(null);\n  const dragImageRef = useRef<HTMLDivElement | null>(null);\n  const draggedItemIndexRef = useRef<number>(-1);\n  const draggedItemNewStatusRef = useRef<string>('');\n  const [autoTransitionMessage, setAutoTransitionMessage] = useState<string | null>(null);\n  \n  // Reemplazar los useEffects problemáticos con una única función más clara\n  useEffect(() => {\n    // Si no hay aplicaciones, no hacer nada\n    if (!applications || applications.length === 0) {\n      setAppsWithApproval([]);\n      return;\n    }\n    \n    console.log('Procesando aplicaciones recibidas:', applications.map(app => ({\n      id: app.id,\n      status: app.status,\n      client: app.client_name,\n      amount: app.requested_amount\n    })));\n    \n    // Procesar todas las aplicaciones para normalizar su estado\n    const processedApps = applications.map(app => {\n      // Normalizar estados - cualquier aplicación en estado pending o solicitud debe ir a new\n      let normalizedStatus = app.status;\n      \n      if (!normalizedStatus || \n          normalizedStatus === 'pending' || \n          normalizedStatus === 'solicitud') {\n        normalizedStatus = APPLICATION_STATUS.NEW;\n        console.log(`Normalizando aplicación ${app.id} (${app.client_name}) de estado \"${app.status}\" a \"new\"`);\n      }\n      \n      return {\n        ...app,\n        status: normalizedStatus\n      };\n    });\n    \n    // Cargar los estados de aprobación para cada aplicación\n    const loadApprovalStatuses = async () => {\n      const entityFilter = shouldFilterByEntity() ? getEntityFilter() : null;\n      \n      try {\n        const updatedApps = await Promise.all(\n          processedApps.map(async (app) => {\n            try {\n              const approvalStatus = await getApprovalStatus(app.id, entityFilter);\n              return { ...app, approvalStatus };\n            } catch (error) {\n              console.error(`Error loading approval status for app ${app.id}:`, error);\n              return app;\n            }\n          })\n        );\n        \n        console.log(`Aplicaciones procesadas: ${updatedApps.length}`);\n        setAppsWithApproval(updatedApps);\n      } catch (error) {\n        console.error(\"Error cargando estados de aprobación:\", error);\n        // En caso de error, al menos utilizar las aplicaciones con estados normalizados\n        setAppsWithApproval(processedApps.map(app => ({ ...app })));\n      }\n    };\n    \n    loadApprovalStatuses();\n  }, [applications, shouldFilterByEntity, getEntityFilter]);\n  \n  // Simplificar la lógica de agrupación para evitar pérdida de datos\n  const groupedApplications = React.useMemo(() => {\n    console.log('Agrupando aplicaciones:', appsWithApproval.map(app => ({\n      id: app.id,\n      status: app.status,\n      client: app.client_name\n    })));\n    \n    // Crear un objeto con todos los estados posibles como claves y arrays vacíos como valores\n    const initialGroups = Object.values(APPLICATION_STATUS).reduce((acc, status) => {\n      acc[status] = [];\n      return acc;\n    }, {} as Record<string, ApplicationWithApproval[]>);\n    \n    // Luego añadir las aplicaciones a sus grupos correspondientes\n    return appsWithApproval.reduce((acc, app) => {\n      if (app.isMoving && app.targetStatus) {\n        // Si está en movimiento, colocarla en la columna de destino\n        acc[app.targetStatus].push(app);\n      } else {\n        // Si no, usar el estado normal, normalizando \"pending\" y \"solicitud\" a \"new\"\n        let status = app.status || APPLICATION_STATUS.NEW;\n        \n        // Normalizar estados \"pending\" y \"solicitud\" a \"new\"\n        if (status === 'pending' || status === 'solicitud') {\n          status = APPLICATION_STATUS.NEW;\n        }\n        \n        acc[status].push(app);\n      }\n      return acc;\n    }, initialGroups);\n  }, [appsWithApproval]);\n  \n  // Optimizar la creación de columnas para incluir correctamente todas las aplicaciones\n  const columns = React.useMemo(() => {\n    // Registrar la cantidad de aplicaciones en cada grupo para depuración\n    console.log('Conteo de aplicaciones por estado:');\n    Object.entries(groupedApplications).forEach(([status, apps]) => {\n      console.log(`${status}: ${apps.length}`);\n    });\n    \n    // Diferentes configuraciones de columnas según el rol\n    if (isCompanyAdmin()) {\n      // Configuración para administradores de empresa\n      const companyAdminColumns = [\n        {\n          id: APPLICATION_STATUS.NEW,\n          title: STATUS_LABELS[APPLICATION_STATUS.NEW],\n          color: STATUS_COLORS[APPLICATION_STATUS.NEW] || 'neutral',\n          applications: [\n            ...groupedApplications[APPLICATION_STATUS.NEW] || [],\n            ...groupedApplications[APPLICATION_STATUS.PENDING] || [],\n            ...groupedApplications[APPLICATION_STATUS.SOLICITUD] || []\n          ]\n        },\n        {\n          id: APPLICATION_STATUS.IN_REVIEW,\n          title: STATUS_LABELS[APPLICATION_STATUS.IN_REVIEW],\n          color: STATUS_COLORS[APPLICATION_STATUS.IN_REVIEW] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.IN_REVIEW] || []\n        },\n        {\n          id: APPLICATION_STATUS.APPROVED,\n          title: 'Aprobado por mi',\n          color: STATUS_COLORS[APPLICATION_STATUS.APPROVED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.APPROVED] || []\n        },\n        {\n          id: APPLICATION_STATUS.POR_DISPERSAR,\n          title: STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR],\n          color: STATUS_COLORS[APPLICATION_STATUS.POR_DISPERSAR] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.POR_DISPERSAR] || []\n        },\n        {\n          id: APPLICATION_STATUS.COMPLETED,\n          title: STATUS_LABELS[APPLICATION_STATUS.COMPLETED],\n          color: STATUS_COLORS[APPLICATION_STATUS.COMPLETED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.COMPLETED] || []\n        },\n        {\n          id: APPLICATION_STATUS.EXPIRED,\n          title: STATUS_LABELS[APPLICATION_STATUS.EXPIRED],\n          color: STATUS_COLORS[APPLICATION_STATUS.EXPIRED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.EXPIRED] || []\n        }\n      ];\n      \n      // Agregar columna \"Rechazado\" si hay aplicaciones rechazadas\n      if (groupedApplications[APPLICATION_STATUS.REJECTED]?.length > 0) {\n        companyAdminColumns.splice(3, 0, {\n          id: APPLICATION_STATUS.REJECTED,\n          title: STATUS_LABELS[APPLICATION_STATUS.REJECTED],\n          color: STATUS_COLORS[APPLICATION_STATUS.REJECTED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.REJECTED] || []\n        });\n      }\n      \n      console.log('Columnas para admin de empresa:', companyAdminColumns.map(col => ({\n        id: col.id,\n        count: col.applications.length\n      })));\n      \n      return companyAdminColumns;\n    }\n    \n    // Para asesores, mostrar todas las columnas estándar\n    const advisorColumns = [\n      {\n        id: APPLICATION_STATUS.NEW,\n        title: STATUS_LABELS[APPLICATION_STATUS.NEW],\n        color: STATUS_COLORS[APPLICATION_STATUS.NEW] || 'neutral',\n        applications: [\n          ...groupedApplications[APPLICATION_STATUS.NEW] || [],\n          ...groupedApplications[APPLICATION_STATUS.PENDING] || [],\n          ...groupedApplications[APPLICATION_STATUS.SOLICITUD] || []\n        ]\n      },\n      {\n        id: APPLICATION_STATUS.IN_REVIEW,\n        title: STATUS_LABELS[APPLICATION_STATUS.IN_REVIEW],\n        color: STATUS_COLORS[APPLICATION_STATUS.IN_REVIEW] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.IN_REVIEW] || []\n      },\n      {\n        id: APPLICATION_STATUS.APPROVED,\n        title: STATUS_LABELS[APPLICATION_STATUS.APPROVED],\n        color: STATUS_COLORS[APPLICATION_STATUS.APPROVED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.APPROVED] || []\n      },\n      {\n        id: APPLICATION_STATUS.REJECTED,\n        title: STATUS_LABELS[APPLICATION_STATUS.REJECTED],\n        color: STATUS_COLORS[APPLICATION_STATUS.REJECTED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.REJECTED] || []\n      },\n      {\n        id: APPLICATION_STATUS.POR_DISPERSAR,\n        title: STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR],\n        color: STATUS_COLORS[APPLICATION_STATUS.POR_DISPERSAR] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.POR_DISPERSAR] || []\n      },\n      {\n        id: APPLICATION_STATUS.COMPLETED,\n        title: STATUS_LABELS[APPLICATION_STATUS.COMPLETED],\n        color: STATUS_COLORS[APPLICATION_STATUS.COMPLETED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.COMPLETED] || []\n      },\n      {\n        id: APPLICATION_STATUS.EXPIRED,\n        title: STATUS_LABELS[APPLICATION_STATUS.EXPIRED],\n        color: STATUS_COLORS[APPLICATION_STATUS.EXPIRED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.EXPIRED] || []\n      },\n      {\n        id: APPLICATION_STATUS.CANCELLED,\n        title: STATUS_LABELS[APPLICATION_STATUS.CANCELLED],\n        color: STATUS_COLORS[APPLICATION_STATUS.CANCELLED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.CANCELLED] || []\n      }\n    ];\n    \n    console.log('Columnas para asesor:', advisorColumns.map(col => ({\n      id: col.id,\n      count: col.applications.length\n    })));\n    \n    return advisorColumns;\n  }, [groupedApplications, isCompanyAdmin]);\n  \n  // Función para actualizar localmente el estado de aprobación de una aplicación\n  const updateLocalApprovalStatus = (applicationId: string, updates: Partial<{ approvedByAdvisor: boolean, approvedByCompany: boolean }>) => {\n    setAppsWithApproval(prev => \n      prev.map(app => \n        app.id === applicationId\n          ? {\n              ...app,\n              approvalStatus: {\n                ...(app.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n                ...updates\n              }\n            }\n          : app\n      )\n    );\n  };\n  \n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>, application: ApplicationWithApproval, idx: number) => {\n    // Guardar la aplicación que estamos arrastrando\n    draggedItemIndexRef.current = idx;\n    \n    // Almacenar el elemento que estamos arrastrando para gestionar mejor el evento\n    dragItemRef.current = e.currentTarget;\n    \n    // Establecer los datos que queremos transferir\n    e.dataTransfer.setData('text/plain', application.id);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // Crear una copia visual para el arrastre\n    if (!dragImageRef.current) {\n      dragImageRef.current = e.currentTarget.cloneNode(true) as HTMLDivElement;\n      dragImageRef.current.style.position = 'absolute';\n      dragImageRef.current.style.top = '-1000px';\n      dragImageRef.current.style.opacity = '0.8';\n      dragImageRef.current.style.transform = 'scale(0.9)';\n      dragImageRef.current.style.width = `${e.currentTarget.offsetWidth}px`;\n      document.body.appendChild(dragImageRef.current);\n    }\n    \n    // Establecer la imagen de arrastre\n    if (dragImageRef.current) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      e.dataTransfer.setDragImage(dragImageRef.current, rect.width / 2, 20);\n    }\n    \n    // Añadir clase CSS para mostrar visualmente que el elemento está siendo arrastrado\n    if (e.currentTarget) {\n      e.currentTarget.classList.add('dragging');\n    }\n  };\n  \n  const handleDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\n    // Eliminar clase CSS de arrastre\n    if (dragItemRef.current) {\n      dragItemRef.current.classList.remove('dragging');\n      dragItemRef.current = null;\n    }\n    \n    if (e.currentTarget) {\n      e.currentTarget.classList.remove('dragging');\n    }\n    \n    // Eliminar el elemento clonado para el arrastre\n    if (dragImageRef.current) {\n      document.body.removeChild(dragImageRef.current);\n      dragImageRef.current = null;\n    }\n    \n    draggedItemIndexRef.current = -1;\n    draggedItemNewStatusRef.current = '';\n  };\n  \n  const handleDragOver = (e: React.DragEvent, columnStatus: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n    \n    // Guardar el nuevo estado para la actualización optimista\n    if (draggedItemNewStatusRef.current !== columnStatus) {\n      draggedItemNewStatusRef.current = columnStatus;\n    }\n    \n    // Añadir clase visual para indicar la columna destino\n    if (e.currentTarget.classList.contains('kanban-column')) {\n      document.querySelectorAll('.kanban-column').forEach(col => {\n        col.classList.remove('drag-over');\n      });\n      e.currentTarget.classList.add('drag-over');\n    }\n  };\n  \n  // Actualizar la función canDragCard para permitir mover tarjetas de status \"nuevo\" para admin de empresa\n  const canDragCard = (app: ApplicationWithApproval): boolean => {\n    // Los asesores pueden mover todas las tarjetas excepto las que están en movimiento\n    if (isAdvisor()) {\n      return !app.isMoving;\n    }\n    \n    // Para administradores de empresa:\n    if (isCompanyAdmin()) {\n      // No puede mover tarjetas que ya están en movimiento\n      if (app.isMoving) return false;\n      \n      // Puede mover tarjetas en estado \"nuevo\" (new), null, pending o solicitud\n      if (!app.status || \n          app.status === APPLICATION_STATUS.NEW || \n          app.status === 'pending' || \n          app.status === 'solicitud') return true;\n      \n      // Puede mover tarjetas en revisión (in_review)\n      if (app.status === APPLICATION_STATUS.IN_REVIEW) return true;\n      \n      // Puede mover tarjetas a estado aprobado por empresa\n      if (app.status === APPLICATION_STATUS.APPROVED) return true;\n      \n      // No puede mover tarjetas en estos estados\n      if (app.status === APPLICATION_STATUS.REJECTED ||\n          app.status === APPLICATION_STATUS.POR_DISPERSAR ||\n          app.status === APPLICATION_STATUS.COMPLETED ||\n          app.status === APPLICATION_STATUS.EXPIRED ||\n          app.status === APPLICATION_STATUS.CANCELLED) {\n        return false;\n      }\n      \n      // Por defecto, permitir movimiento para cualquier otro estado\n      return true;\n    }\n    \n    // Para otros roles, no permitir mover tarjetas\n    return false;\n  };\n  \n  // Restaurar la función handleDrop correctamente arreglada para que funcione con el formato actual de datos\n  const handleDrop = async (e: React.DragEvent<HTMLDivElement>, newStatus: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    // Eliminar todas las clases de arrastre\n    document.querySelectorAll('.kanban-column').forEach(col => {\n      col.classList.remove('drag-over');\n    });\n    \n    // Recuperar el ID de la aplicación y validaciones básicas\n    const applicationId = e.dataTransfer.getData('text/plain');\n    if (!applicationId || !onStatusChange || !user?.id) return;\n    \n    const application = appsWithApproval.find(app => app.id === applicationId);\n    if (!application) return;\n    \n    const oldStatus = application.status;\n    \n    // No hacer nada si el estatus es el mismo\n    if (oldStatus === newStatus) return;\n    \n    // Restricciones específicas por rol\n    if (isCompanyAdmin()) {\n      // El admin de empresa solo puede mover tarjetas entre NEW, IN_REVIEW y APPROVED\n      const allowedTargetStatuses = [\n        APPLICATION_STATUS.NEW,\n        APPLICATION_STATUS.IN_REVIEW,\n        APPLICATION_STATUS.APPROVED\n      ];\n      \n      // Si la aplicación está rechazada, solo el asesor puede moverla\n      if (oldStatus === APPLICATION_STATUS.REJECTED) {\n        setErrorMessage(\"Esta solicitud fue rechazada y solo el asesor puede moverla.\");\n        return;\n      }\n      \n      // Verificar si el estado al que quiere mover está permitido\n      if (!allowedTargetStatuses.includes(newStatus as APPLICATION_STATUS)) {\n        setErrorMessage(`No puedes mover tarjetas al estado \"${STATUS_LABELS[newStatus as keyof typeof STATUS_LABELS]}\". Solo puedes mover entre Nuevo, En Revisión y Aprobado.`);\n        return;\n      }\n      \n      // Verificar si el estado desde el cual quiere mover está permitido\n      // Si el estado es NEW o es uno de los estados permitidos para mover, permitir el movimiento\n      const allowedSourceStatuses = [\n        APPLICATION_STATUS.NEW,\n        APPLICATION_STATUS.IN_REVIEW,\n        APPLICATION_STATUS.APPROVED\n      ];\n      \n      if (!allowedSourceStatuses.includes(oldStatus as APPLICATION_STATUS)) {\n        setErrorMessage(`No puedes mover tarjetas que están en estado \"${STATUS_LABELS[oldStatus as keyof typeof STATUS_LABELS]}\".`);\n        return;\n      }\n    }\n    \n    // Restricción específica para asesores: solo ellos pueden mover de Por Dispersar a Completado\n    if (newStatus === APPLICATION_STATUS.COMPLETED && oldStatus === APPLICATION_STATUS.POR_DISPERSAR && !isAdvisor()) {\n      setErrorMessage(\"Solo los asesores pueden marcar solicitudes como completadas después de la dispersión.\");\n      return;\n    }\n    \n    try {\n      // Establecer el ID de la aplicación que se está procesando\n      setProcessingAppId(applicationId);\n      \n      // Actualización optimista en UI para mejor fluidez - moviendo visualmente la tarjeta\n      const updatedApps = [...appsWithApproval];\n      const appIndex = updatedApps.findIndex(app => app.id === applicationId);\n      \n      if (appIndex !== -1) {\n        // Crear copia profunda de la aplicación para evitar referencias\n        const updatedApp = { \n          ...updatedApps[appIndex], \n          isMoving: true,\n          targetStatus: newStatus \n        };\n        \n        // Lógica para manejar aprobaciones de manera optimista\n        const isMovingToApproved = newStatus === APPLICATION_STATUS.APPROVED;\n        const isMovingFromApproved = oldStatus === APPLICATION_STATUS.APPROVED && newStatus !== APPLICATION_STATUS.APPROVED;\n        \n        // Si se mueve a aprobado y el usuario es asesor, marcar como aprobado por asesor\n        if (isMovingToApproved && isAdvisor() && user?.entityId) {\n          updatedApp.approvalStatus = {\n            ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n            approvedByAdvisor: true\n          };\n        }\n        \n        // Si se mueve a aprobado y el usuario es admin de empresa, marcar como aprobado por empresa\n        if (isMovingToApproved && isCompanyAdmin() && user?.entityId && application.company_id) {\n          updatedApp.approvalStatus = {\n            ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n            approvedByCompany: true\n          };\n        }\n        \n        // Si se mueve desde aprobado, resetear los estados de aprobación según el rol\n        if (isMovingFromApproved) {\n          if (isAdvisor()) {\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n              approvedByAdvisor: false\n            };\n          } else if (isCompanyAdmin()) {\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n              approvedByCompany: false\n            };\n          }\n        }\n        \n        updatedApps[appIndex] = updatedApp;\n        setAppsWithApproval(updatedApps);\n      }\n      \n      // Procesar en el servidor en paralelo\n      const entityFilter = shouldFilterByEntity() ? getEntityFilter() : null;\n      const isMovingToApproved = newStatus === APPLICATION_STATUS.APPROVED;\n      \n      // Crear un array de promesas para manejar todas las operaciones del servidor\n      const serverOperations: Promise<any>[] = [];\n      \n      // Si se mueve a aprobado y el usuario es asesor, marcar como aprobado por asesor\n      if (isMovingToApproved && isAdvisor() && user?.entityId) {\n        serverOperations.push(\n          approveByAdvisor(applicationId, \"Aprobado vía Kanban\", user.entityId, entityFilter)\n            .then(async (result) => {\n              // Verificar si la aplicación ya está aprobada por la empresa\n              const approvalStatus = await getApprovalStatus(applicationId);\n              \n              // Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\n              if (approvalStatus?.approvedByAdvisor && approvalStatus?.approvedByCompany) {\n                // Mostrar notificación de transición automática\n                setAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n                \n                // Actualizar el estado objetivo para la animación\n                setAppsWithApproval(prev => \n                  prev.map(app => \n                    app.id === applicationId\n                      ? {\n                          ...app,\n                          targetStatus: APPLICATION_STATUS.POR_DISPERSAR,\n                          isMoving: true\n                        }\n                      : app\n                  )\n                );\n                \n                // Cambiar el estado a \"por_dispersar\"\n                setTimeout(() => {\n                  onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                  // Limpiar el mensaje después de mostrar\n                  setTimeout(() => setAutoTransitionMessage(null), 3000);\n                }, 500);\n              }\n              \n              return result;\n            })\n            .catch(error => {\n              console.error(\"Error al aprobar por asesor:\", error);\n            })\n        );\n      }\n      \n      // Si se mueve a aprobado y el usuario es admin de empresa, marcar como aprobado por empresa\n      if (isMovingToApproved && isCompanyAdmin() && user?.entityId && application.company_id) {\n        serverOperations.push(\n          approveByCompany(\n            applicationId, \n            \"Aprobado vía Kanban\", \n            user.entityId, \n            application.company_id, \n            entityFilter\n          ).then(async (result) => {\n            // Verificar si la aplicación ya está aprobada por el asesor\n            const approvalStatus = await getApprovalStatus(applicationId);\n            \n            // Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\n            if (approvalStatus?.approvedByAdvisor && approvalStatus?.approvedByCompany) {\n              // Mostrar notificación de transición automática\n              setAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n              \n              // Actualizar el estado objetivo para la animación\n              setAppsWithApproval(prev => \n                prev.map(app => \n                  app.id === applicationId\n                    ? {\n                        ...app,\n                        targetStatus: APPLICATION_STATUS.POR_DISPERSAR,\n                        isMoving: true\n                      }\n                    : app\n                )\n              );\n              \n              // Cambiar el estado a \"por_dispersar\"\n              setTimeout(() => {\n                onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                // Limpiar el mensaje después de mostrar\n                setTimeout(() => setAutoTransitionMessage(null), 3000);\n              }, 500);\n            }\n            \n            return result;\n          })\n          .catch(error => {\n            console.error(\"Error al aprobar por empresa:\", error);\n          })\n        );\n      }\n      \n      // Añadir la operación de cambio de estado\n      serverOperations.push(onStatusChange(application, newStatus));\n      \n      // Ejecutar todas las operaciones en paralelo después de un pequeño retraso para permitir la animación\n      setTimeout(async () => {\n        try {\n          await Promise.all(serverOperations);\n          \n          // Actualizar el estado final en la UI\n          setAppsWithApproval(prev => \n            prev.map(app => \n              app.id === applicationId\n                ? {\n                    ...app,\n                    status: newStatus as Application['status'],\n                    isMoving: false,\n                    targetStatus: undefined\n                  }\n                : app\n            )\n          );\n        } catch (error: any) {\n          setErrorMessage(`Error al actualizar el estatus: ${error.message}`);\n          console.error(\"Error updating status:\", error);\n          \n          // Revertir el cambio optimista si falla\n          setAppsWithApproval(prev => \n            prev.map(app => \n              app.id === applicationId\n                ? {\n                    ...app,\n                    status: oldStatus,\n                    isMoving: false,\n                    targetStatus: undefined\n                  }\n                : app\n            )\n          );\n        } finally {\n          setProcessingAppId(null);\n        }\n      }, 300); // Retraso para permitir que la animación se muestre\n      \n    } catch (error: any) {\n      setErrorMessage(`Error al actualizar el estatus: ${error.message}`);\n      console.error(\"Error updating status:\", error);\n      \n      // Revertir el cambio optimista si falla\n      setAppsWithApproval(prev => \n        prev.map(app => \n          app.id === applicationId\n            ? {\n                ...app,\n                status: oldStatus,\n                isMoving: false,\n                targetStatus: undefined\n              }\n            : app\n        )\n      );\n      setProcessingAppId(null);\n    }\n  };\n  \n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n    }).format(amount);\n  };\n  \n  // Renderizar los indicadores de aprobación\n  const renderApprovalIndicators = (app: ApplicationWithApproval) => {\n    if (!app.approvalStatus) return null;\n    \n    return (\n      <div className=\"flex items-center mt-1 space-x-2\">\n        <div className=\"tooltip tooltip-top flex items-center\" data-tip={app.approvalStatus.approvedByAdvisor ? \"Aprobado por asesor\" : \"Pendiente de aprobación por asesor\"}>\n          <span className=\"text-xs mr-1\">Asesor:</span>\n          <div className={`w-3 h-3 rounded-full ${app.approvalStatus.approvedByAdvisor ? 'bg-success animate-pulse' : 'bg-warning'}`}></div>\n        </div>\n        <div className=\"tooltip tooltip-top flex items-center\" data-tip={app.approvalStatus.approvedByCompany ? \"Aprobado por empresa\" : \"Pendiente de aprobación por empresa\"}>\n          <span className=\"text-xs mr-1\">Empresa:</span>\n          <div className={`w-3 h-3 rounded-full ${app.approvalStatus.approvedByCompany ? 'bg-success animate-pulse' : 'bg-warning'}`}></div>\n        </div>\n        \n        {/* Indicador de doble aprobación */}\n        {app.approvalStatus.approvedByAdvisor && app.approvalStatus.approvedByCompany && (\n          <div className=\"tooltip tooltip-top ml-2\" data-tip=\"Aprobada por ambos\">\n            <div className=\"badge badge-success badge-sm\">Aprobado Total</div>\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  const getProductLabel = (type: string) => {\n    const labels: Record<string, string> = {\n      'selected_plans': 'Crédito a Plazos',\n      'product_simulations': 'Simulación',\n      'auto_loan': 'Crédito Auto',\n      'car_backed_loan': 'Crédito con Garantía',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n    \n    return labels[type] || type;\n  };\n  \n  // Función para obtener el color apropiado para la tarjeta según estado y aprobaciones\n  const getCardColor = (app: ApplicationWithApproval) => {\n    const status = app.status || '';\n    \n    // Colores específicos según el estado\n    switch (status.toLowerCase()) {\n      case APPLICATION_STATUS.REJECTED:\n        return 'border-error bg-red-50';\n      case APPLICATION_STATUS.APPROVED:\n        // Si está aprobado, verificar el estado de las aprobaciones\n        if (app.approvalStatus) {\n          const { approvedByAdvisor, approvedByCompany } = app.approvalStatus;\n          if (approvedByAdvisor && approvedByCompany) {\n            return 'border-success bg-green-100'; // Aprobado por ambos\n          } else if (approvedByAdvisor) {\n            return 'border-success bg-green-50'; // Aprobado solo por asesor\n          } else if (approvedByCompany) {\n            return 'border-info bg-blue-50'; // Aprobado solo por empresa\n          }\n        }\n        return 'border-success bg-green-50';\n      case APPLICATION_STATUS.IN_REVIEW:\n        return 'border-info bg-blue-50';\n      case APPLICATION_STATUS.NEW:\n        return 'border-warning bg-yellow-50';\n      case APPLICATION_STATUS.PENDING:\n        return 'border-warning bg-amber-50';\n      case APPLICATION_STATUS.POR_DISPERSAR:\n        return 'border-accent bg-purple-50';\n      case APPLICATION_STATUS.COMPLETED:\n        return 'border-primary bg-indigo-50';\n      case APPLICATION_STATUS.EXPIRED:\n        return 'border-error bg-red-100';\n      case APPLICATION_STATUS.CANCELLED:\n        return 'border-neutral bg-gray-100';\n      default:\n        // Si el estado no coincide con ninguno de los anteriores, usar el color de la columna\n        return `border-${app.status || 'neutral'}`;\n    }\n  };\n  \n  // Función para determinar si una tarjeta está habilitada para ser movida\n  const getDraggableClasses = (app: ApplicationWithApproval): string => {\n    const canDrag = canDragCard(app) && !!onStatusChange && app.id !== processingAppId;\n    \n    if (canDrag) {\n      return 'cursor-grab hover:shadow-lg kanban-card-draggable';\n    } else {\n      return 'cursor-not-allowed opacity-80 kanban-card-locked';\n    }\n  };\n  \n  // Función para obtener el texto del tooltip según el estado de la tarjeta\n  const getDragTooltip = (app: ApplicationWithApproval): string => {\n    if (app.id === processingAppId) {\n      return \"Esta tarjeta está siendo procesada\";\n    }\n    \n    if (!onStatusChange) {\n      return \"No tienes permisos para mover tarjetas\";\n    }\n    \n    if (isCompanyAdmin()) {\n      if (app.status === APPLICATION_STATUS.REJECTED) {\n        return \"Las tarjetas rechazadas solo pueden ser movidas por asesores\";\n      }\n      \n      if ([\n        APPLICATION_STATUS.POR_DISPERSAR,\n        APPLICATION_STATUS.COMPLETED,\n        APPLICATION_STATUS.EXPIRED,\n        APPLICATION_STATUS.CANCELLED\n      ].includes(app.status as APPLICATION_STATUS)) {\n        return `No puedes mover tarjetas que están en estado \"${STATUS_LABELS[app.status as keyof typeof STATUS_LABELS]}\"`;\n      }\n    }\n    \n    return \"Arrastra para cambiar el estado\";\n  };\n  \n  if (applications.length === 0) {\n    return (\n      <div className=\"bg-base-200 p-6 rounded-lg\">\n        <h3 className=\"text-xl font-medium text-center\">No hay solicitudes para mostrar</h3>\n        <p className=\"text-center text-gray-500 mt-2\">No se encontraron solicitudes en el sistema</p>\n      </div>\n    );\n  }\n  \n  // Añadir estilos CSS para el scrollbar personalizado y mejoras visuales\n  const customStyles = `\n    .custom-scrollbar::-webkit-scrollbar {\n      width: 8px;\n      height: 8px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-track {\n      background: #f1f1f1;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb {\n      background: #888;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n    \n    .kanban-card {\n      transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out, box-shadow 0.3s ease-in-out, border-color 0.3s ease;\n      touch-action: none;\n      user-select: none;\n      will-change: transform, opacity; /* Optimización para hardware rendering */\n    }\n    \n    .kanban-card-draggable:active {\n      cursor: grabbing;\n    }\n    \n    .kanban-card-locked {\n      position: relative;\n    }\n    \n    .kanban-card-locked::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 12px;\n      height: 12px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23999'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n    }\n    \n    .kanban-card.dragging {\n      opacity: 0.8;\n      transform: scale(1.03);\n      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      z-index: 50;\n    }\n    \n    .kanban-column {\n      transition: all 0.2s ease;\n      border-radius: 0.75rem;\n      will-change: transform, background-color; /* Optimización para hardware rendering */\n    }\n    \n    .kanban-column.drag-over {\n      background-color: rgba(var(--b2, 217 217 217) / 0.5);\n      transform: scale(1.01);\n      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n    }\n\n    .kanban-container {\n      scroll-behavior: smooth;\n    }\n\n    @media (min-width: 768px) {\n      .kanban-card:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n      }\n    }\n    \n    /* Animaciones para cambios de estado */\n    @keyframes fadeIn {\n      0% { opacity: 0; }\n      100% { opacity: 1; }\n    }\n    \n    @keyframes slideIn {\n      0% { transform: translateY(10px); opacity: 0; }\n      100% { transform: translateY(0); opacity: 1; }\n    }\n    \n    @keyframes processingPulse {\n      0% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0.4); }\n      70% { box-shadow: 0 0 0 6px rgba(124, 58, 237, 0); }\n      100% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0); }\n    }\n    \n    .kanban-card {\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    .processing-toast {\n      position: fixed;\n      bottom: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    .auto-transition-toast {\n      position: fixed;\n      bottom: 70px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: #dcfce7;\n      border: 1px solid #86efac;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    /* Mejoras para vista mobile */\n    @media (max-width: 640px) {\n      .kanban-column {\n        min-height: 300px;\n      }\n    }\n  `;\n  \n  return (\n    <div className=\"w-full overflow-x-auto custom-scrollbar relative\">\n      <style>{customStyles}</style>\n      \n      {/* Reemplazar el overlay de carga con una notificación flotante más sutil */}\n      {processingAppId && (\n        <div className=\"processing-toast\">\n          <span className=\"loading loading-spinner loading-sm text-primary\"></span>\n          <p className=\"font-medium\">Actualizando estado...</p>\n        </div>\n      )}\n      \n      {/* Notificación para transiciones automáticas */}\n      {autoTransitionMessage && (\n        <div className=\"auto-transition-toast\">\n          <span className=\"loading loading-spinner loading-sm text-success\"></span>\n          <p className=\"font-medium\">{autoTransitionMessage}</p>\n        </div>\n      )}\n      \n      {errorMessage && (\n        <div className=\"mb-4 alert alert-error shadow-lg\">\n          <div>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"stroke-current flex-shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span>{errorMessage}</span>\n          </div>\n          <div className=\"flex-none\">\n            <button className=\"btn btn-sm\" onClick={() => setErrorMessage(null)}>Cerrar</button>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 2xl:grid-cols-6 gap-4 pb-4 kanban-container p-4\" style={{ minWidth: '1000px' }}>\n        {columns.map(column => (\n          <div \n            key={column.id}\n            className={`bg-base-100 rounded-xl shadow-md border-t-4 border-${column.color} border-l border-r border-b flex flex-col h-full kanban-column`}\n            onDragOver={(e) => {\n              handleDragOver(e, column.id);\n            }}\n            onDragLeave={(e) => {\n              e.currentTarget.classList.remove('drag-over');\n            }}\n            onDrop={(e) => {\n              handleDrop(e, column.id);\n            }}\n          >\n            {/* Cabecera de columna con indicador de color */}\n            <div className={`text-center py-3 px-4 font-bold rounded-t-lg flex items-center justify-between bg-${column.color} bg-opacity-10`}>\n              <span className={`text-${column.color} font-bold text-lg`}>{column.title}</span>\n              <span className={`badge badge-${column.color} badge-lg`}>{column.applications.length}</span>\n            </div>\n            \n            <div className=\"p-3 space-y-3 min-h-[500px] max-h-[calc(100vh-220px)] overflow-y-auto custom-scrollbar flex-grow\">\n              {column.applications.length === 0 ? (\n                <div className=\"flex items-center justify-center h-full opacity-50 border-2 border-dashed border-base-300 rounded-lg p-6\">\n                  <div className=\"text-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 mx-auto text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    <p className=\"text-sm mt-2\">No hay solicitudes</p>\n                  </div>\n                </div>\n              ) : (\n                column.applications.map((app, index) => (\n                  <div\n                    key={app.id}\n                    data-tip={getDragTooltip(app)}\n                    className={`card shadow hover:shadow-lg transition-all ${getCardColor(app)} border-l-4 border-t border-r border-b hover:border-primary kanban-card relative ${app.id === processingAppId ? 'processing' : ''} ${app.isMoving ? 'opacity-90' : ''} ${getDraggableClasses(app)}`}\n                    draggable={!!onStatusChange && app.id !== processingAppId && canDragCard(app)}\n                    onDragStart={(e) => handleDragStart(e, app, index)}\n                    onDragEnd={handleDragEnd}\n                    style={{\n                      animation: app.id === processingAppId ? 'processingPulse 1.5s infinite' : ''\n                    }}\n                  >\n                    <div className=\"card-body p-4\">\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"flex-1 font-semibold\">{app.client_name}</div>\n                          <span className={`badge badge-${column.color} badge-md`}>{getProductLabel(app.application_type)}</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"mt-2\">\n                        {/* Info de la empresa */}\n                        <div className=\"text-sm text-gray-600 mb-1 flex items-center\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 inline\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                          </svg>\n                          <span className=\"truncate max-w-[180px] font-medium\">\n                            {app.company_name || \"Sin empresa\"}\n                          </span>\n                        </div>\n                        \n                        {/* Monto */}\n                        <div className=\"flex items-center mb-2\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 text-primary\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                          </svg>\n                          <span className=\"text-base font-bold text-primary\">\n                            {formatCurrency(app.requested_amount)}\n                          </span>\n                        </div>\n                        \n                        {/* Indicadores de estado de aprobación */}\n                        {renderApprovalIndicators(app)}\n                        \n                        <div className=\"card-actions justify-end mt-3\">\n                          <Link to={`/applications/${app.id}`} className=\"btn btn-sm btn-primary w-full\">\n                            Ver Detalle\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default KanbanBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}