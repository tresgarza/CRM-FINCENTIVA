{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/NotificationPopup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n// Map NotificationType to basic types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapNotificationTypeToBasic = type => {\n  switch (type) {\n    case 'info':\n    case 'new_application':\n    case 'new_message':\n      return 'info';\n    case 'success':\n    case 'approval_required':\n    case 'application_status_updated':\n      return 'success';\n    case 'warning':\n      return 'warning';\n    case 'error':\n    case 'application_comment':\n      return 'error';\n    default:\n      return 'info';\n  }\n};\n\n// Add a global listener for user interaction to enable audio\nif (typeof window !== 'undefined' && !document.documentElement.hasAttribute('data-listeners-added')) {\n  document.documentElement.setAttribute('data-listeners-added', 'true');\n  const userInteractionEvents = ['click', 'touchstart', 'keydown'];\n  const handleUserInteraction = () => {\n    document.documentElement.setAttribute('data-user-interacted', 'true');\n\n    // Remove listeners after first interaction\n    userInteractionEvents.forEach(event => {\n      document.removeEventListener(event, handleUserInteraction);\n    });\n\n    // Play a silent sound to unlock audio on iOS\n    try {\n      const silentSound = new Audio();\n      silentSound.volume = 0.01;\n      silentSound.play().catch(() => {/* Ignore errors */});\n    } catch (e) {\n      // Ignore errors\n    }\n  };\n\n  // Add listeners for all interaction types\n  userInteractionEvents.forEach(event => {\n    document.addEventListener(event, handleUserInteraction);\n  });\n  console.log('User interaction listeners added for sound enablement');\n}\nconst NotificationPopup = ({\n  title,\n  message,\n  type = 'info',\n  duration = 5000,\n  // Por defecto, 5 segundos\n  onClose,\n  playSound = true,\n  soundType = 'notification',\n  customSound,\n  centerScreen = false\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(true);\n  const [exiting, setExiting] = useState(false);\n\n  // Configurar el auto-cierre\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        closeNotification();\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [duration]);\n\n  // Reproducir sonido de notificación\n  useEffect(() => {\n    if (playSound) {\n      try {\n        // Create a single standardized audio element\n        const audio = new Audio();\n\n        // Set the source based on customSound or soundType with fallback to WAV format\n        let audioSource = '';\n\n        // Si hay un sonido personalizado, usarlo\n        if (customSound) {\n          audioSource = customSound.replace('.mp3', '').replace('.wav', '');\n        } else {\n          // De lo contrario, usar el tipo de sonido\n          switch (soundType) {\n            case 'notification':\n              audioSource = '/sounds/notification';\n              break;\n            case 'alert':\n              audioSource = '/sounds/alert';\n              break;\n            case 'approval':\n              audioSource = '/sounds/approval';\n              break;\n            default:\n              audioSource = '/sounds/notification';\n          }\n        }\n\n        // Si es un sonido personalizado sin extensión, asume mp3\n        if (customSound && !customSound.includes('.')) {\n          audio.src = customSound + '.mp3';\n        } else if (customSound) {\n          // Si es un sonido personalizado con extensión, usarlo directamente\n          audio.src = customSound;\n        } else {\n          // Create a fallback system with different formats\n          audio.innerHTML = `\n            <source src=\"${audioSource}.mp3\" type=\"audio/mp3\">\n            <source src=\"${audioSource}.wav\" type=\"audio/wav\">\n          `;\n\n          // Explicitly set the src for the Audio element too (as backup)\n          audio.src = `${audioSource}.mp3`;\n        }\n\n        // Set volume before playing\n        audio.volume = 0.5;\n\n        // Add error handling for the audio element\n        audio.addEventListener('error', e => {\n          console.error('Error playing notification sound', e);\n\n          // Try fallback to WAV if MP3 fails and it's not a custom sound\n          if (audio.src.endsWith('.mp3') && !customSound) {\n            console.log('Attempting to play WAV fallback');\n            audio.src = `${audioSource}.wav`;\n            audio.load();\n            audio.play().catch(err => {\n              console.error('Fallback sound playback failed:', err);\n            });\n          }\n        });\n\n        // Wait a moment to ensure browser is ready\n        setTimeout(() => {\n          const playPromise = audio.play();\n          if (playPromise !== undefined) {\n            playPromise.catch(err => {\n              console.log('Browser blocked autoplay, needs user interaction first');\n\n              // Mark that we've attempted to play audio\n              if (!document.documentElement.hasAttribute('data-audio-attempted')) {\n                document.documentElement.setAttribute('data-audio-attempted', 'true');\n              }\n            });\n          }\n        }, 100);\n      } catch (error) {\n        console.error('Failed to initialize sound:', error);\n      }\n    }\n  }, [playSound, soundType, customSound]);\n  const closeNotification = () => {\n    setExiting(true);\n    // Agregar un pequeño retraso para la animación de salida\n    setTimeout(() => {\n      setIsVisible(false);\n      if (onClose) onClose();\n    }, 300);\n  };\n  if (!isVisible) return null;\n\n  // Mapeo de estilos según el tipo\n  const typeStyles = {\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-800',\n      title: 'text-blue-900'\n    },\n    success: {\n      bg: 'bg-green-50',\n      border: 'border-green-200',\n      text: 'text-green-800',\n      title: 'text-green-900'\n    },\n    warning: {\n      bg: 'bg-yellow-50',\n      border: 'border-yellow-200',\n      text: 'text-yellow-800',\n      title: 'text-yellow-900'\n    },\n    error: {\n      bg: 'bg-red-50',\n      border: 'border-red-200',\n      text: 'text-red-800',\n      title: 'text-red-900'\n    }\n  };\n\n  // Map complex notification types to the basic ones\n  const basicType = mapNotificationTypeToBasic(type);\n\n  // Use the mapped type to get styles\n  const styles = typeStyles[basicType] || typeStyles.info;\n\n  // Estilos de posición según si debe estar centrado o no\n  const positionClasses = centerScreen ? \"fixed inset-0 flex items-center justify-center z-50\" : \"fixed top-5 right-5 z-50 max-w-md w-full\";\n\n  // Ancho según si debe estar centrado o no\n  const widthClasses = centerScreen ? \"w-full max-w-xl mx-4\" // Más ancho cuando está centrado\n  : \"w-full\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: positionClasses,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.bg} ${styles.border} ${styles.text} rounded-lg shadow-lg p-4 border ${exiting ? 'animate-popup-exit' : 'animate-popup-entry'} ${widthClasses}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-base font-semibold ${styles.title}`,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), centerScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            dangerouslySetInnerHTML: {\n              __html: message\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 text-sm\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeNotification,\n          className: \"flex-shrink-0 ml-2 text-gray-400 hover:text-gray-500 focus:outline-none\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationPopup, \"bcPZT+kBBVGg6BPgoIbVXJ3hBdw=\");\n_c = NotificationPopup;\nexport default NotificationPopup;\nvar _c;\n$RefreshReg$(_c, \"NotificationPopup\");","map":{"version":3,"names":["React","useEffect","useState","XMarkIcon","jsxDEV","_jsxDEV","mapNotificationTypeToBasic","type","window","document","documentElement","hasAttribute","setAttribute","userInteractionEvents","handleUserInteraction","forEach","event","removeEventListener","silentSound","Audio","volume","play","catch","e","addEventListener","console","log","NotificationPopup","title","message","duration","onClose","playSound","soundType","customSound","centerScreen","_s","isVisible","setIsVisible","exiting","setExiting","timer","setTimeout","closeNotification","clearTimeout","audio","audioSource","replace","includes","src","innerHTML","error","endsWith","load","err","playPromise","undefined","typeStyles","info","bg","border","text","success","warning","basicType","styles","positionClasses","widthClasses","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","onClick","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/NotificationPopup.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n// Map NotificationType to basic types\nconst mapNotificationTypeToBasic = (type: string): 'info' | 'success' | 'warning' | 'error' => {\n  switch (type) {\n    case 'info':\n    case 'new_application':\n    case 'new_message':\n      return 'info';\n    case 'success':\n    case 'approval_required':\n    case 'application_status_updated':\n      return 'success';\n    case 'warning':\n      return 'warning';\n    case 'error':\n    case 'application_comment':\n      return 'error';\n    default:\n      return 'info';\n  }\n};\n\n// Add a global listener for user interaction to enable audio\nif (typeof window !== 'undefined' && !document.documentElement.hasAttribute('data-listeners-added')) {\n  document.documentElement.setAttribute('data-listeners-added', 'true');\n  \n  const userInteractionEvents = ['click', 'touchstart', 'keydown'];\n  \n  const handleUserInteraction = () => {\n    document.documentElement.setAttribute('data-user-interacted', 'true');\n    \n    // Remove listeners after first interaction\n    userInteractionEvents.forEach(event => {\n      document.removeEventListener(event, handleUserInteraction);\n    });\n    \n    // Play a silent sound to unlock audio on iOS\n    try {\n      const silentSound = new Audio();\n      silentSound.volume = 0.01;\n      silentSound.play().catch(() => {/* Ignore errors */});\n    } catch (e) {\n      // Ignore errors\n    }\n  };\n  \n  // Add listeners for all interaction types\n  userInteractionEvents.forEach(event => {\n    document.addEventListener(event, handleUserInteraction);\n  });\n  \n  console.log('User interaction listeners added for sound enablement');\n}\n\ninterface NotificationPopupProps {\n  title: string;\n  message: string;\n  type?: 'info' | 'success' | 'warning' | 'error' | string;\n  duration?: number; // Duración en milisegundos\n  onClose?: () => void;\n  playSound?: boolean;\n  soundType?: 'notification' | 'alert' | 'approval'; // Diferentes tipos de sonido\n  customSound?: string; // Ruta personalizada para el sonido\n  centerScreen?: boolean; // Opción para centrar en la pantalla\n}\n\nconst NotificationPopup: React.FC<NotificationPopupProps> = ({\n  title,\n  message,\n  type = 'info',\n  duration = 5000, // Por defecto, 5 segundos\n  onClose,\n  playSound = true,\n  soundType = 'notification',\n  customSound,\n  centerScreen = false\n}) => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [exiting, setExiting] = useState(false);\n\n  // Configurar el auto-cierre\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        closeNotification();\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [duration]);\n\n  // Reproducir sonido de notificación\n  useEffect(() => {\n    if (playSound) {\n      try {\n        // Create a single standardized audio element\n        const audio = new Audio();\n        \n        // Set the source based on customSound or soundType with fallback to WAV format\n        let audioSource = '';\n        \n        // Si hay un sonido personalizado, usarlo\n        if (customSound) {\n          audioSource = customSound.replace('.mp3', '').replace('.wav', '');\n        } else {\n          // De lo contrario, usar el tipo de sonido\n          switch (soundType) {\n            case 'notification':\n              audioSource = '/sounds/notification';\n              break;\n            case 'alert':\n              audioSource = '/sounds/alert';\n              break;\n            case 'approval':\n              audioSource = '/sounds/approval';\n              break;\n            default:\n              audioSource = '/sounds/notification';\n          }\n        }\n        \n        // Si es un sonido personalizado sin extensión, asume mp3\n        if (customSound && !customSound.includes('.')) {\n          audio.src = customSound + '.mp3';\n        } else if (customSound) {\n          // Si es un sonido personalizado con extensión, usarlo directamente\n          audio.src = customSound;\n        } else {\n          // Create a fallback system with different formats\n          audio.innerHTML = `\n            <source src=\"${audioSource}.mp3\" type=\"audio/mp3\">\n            <source src=\"${audioSource}.wav\" type=\"audio/wav\">\n          `;\n          \n          // Explicitly set the src for the Audio element too (as backup)\n          audio.src = `${audioSource}.mp3`;\n        }\n        \n        // Set volume before playing\n        audio.volume = 0.5;\n        \n        // Add error handling for the audio element\n        audio.addEventListener('error', (e) => {\n          console.error('Error playing notification sound', e);\n          \n          // Try fallback to WAV if MP3 fails and it's not a custom sound\n          if (audio.src.endsWith('.mp3') && !customSound) {\n            console.log('Attempting to play WAV fallback');\n            audio.src = `${audioSource}.wav`;\n            audio.load();\n            audio.play().catch(err => {\n              console.error('Fallback sound playback failed:', err);\n            });\n          }\n        });\n        \n        // Wait a moment to ensure browser is ready\n        setTimeout(() => {\n          const playPromise = audio.play();\n          if (playPromise !== undefined) {\n            playPromise.catch(err => {\n              console.log('Browser blocked autoplay, needs user interaction first');\n              \n              // Mark that we've attempted to play audio\n              if (!document.documentElement.hasAttribute('data-audio-attempted')) {\n                document.documentElement.setAttribute('data-audio-attempted', 'true');\n              }\n            });\n          }\n        }, 100);\n      } catch (error) {\n        console.error('Failed to initialize sound:', error);\n      }\n    }\n  }, [playSound, soundType, customSound]);\n\n  const closeNotification = () => {\n    setExiting(true);\n    // Agregar un pequeño retraso para la animación de salida\n    setTimeout(() => {\n      setIsVisible(false);\n      if (onClose) onClose();\n    }, 300);\n  };\n\n  if (!isVisible) return null;\n\n  // Mapeo de estilos según el tipo\n  const typeStyles = {\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-800',\n      title: 'text-blue-900'\n    },\n    success: {\n      bg: 'bg-green-50',\n      border: 'border-green-200',\n      text: 'text-green-800',\n      title: 'text-green-900'\n    },\n    warning: {\n      bg: 'bg-yellow-50',\n      border: 'border-yellow-200',\n      text: 'text-yellow-800',\n      title: 'text-yellow-900'\n    },\n    error: {\n      bg: 'bg-red-50',\n      border: 'border-red-200',\n      text: 'text-red-800',\n      title: 'text-red-900'\n    }\n  };\n\n  // Map complex notification types to the basic ones\n  const basicType = mapNotificationTypeToBasic(type);\n  \n  // Use the mapped type to get styles\n  const styles = typeStyles[basicType] || typeStyles.info;\n\n  // Estilos de posición según si debe estar centrado o no\n  const positionClasses = centerScreen \n    ? \"fixed inset-0 flex items-center justify-center z-50\"\n    : \"fixed top-5 right-5 z-50 max-w-md w-full\";\n\n  // Ancho según si debe estar centrado o no\n  const widthClasses = centerScreen \n    ? \"w-full max-w-xl mx-4\" // Más ancho cuando está centrado\n    : \"w-full\";\n\n  return (\n    <div className={positionClasses}>\n      <div\n        className={`${styles.bg} ${styles.border} ${styles.text} rounded-lg shadow-lg p-4 border ${\n          exiting ? 'animate-popup-exit' : 'animate-popup-entry'\n        } ${widthClasses}`}\n      >\n        <div className=\"flex justify-between items-start\">\n          <div className=\"flex-1\">\n            <h3 className={`text-base font-semibold ${styles.title}`}>{title}</h3>\n            {/* Mensaje como HTML si es un popup centrado o como texto normal */}\n            {centerScreen ? (\n              <div className=\"mt-2\" dangerouslySetInnerHTML={{ __html: message }} />\n            ) : (\n              <div className=\"mt-1 text-sm\">{message}</div>\n            )}\n          </div>\n          <button\n            onClick={closeNotification}\n            className=\"flex-shrink-0 ml-2 text-gray-400 hover:text-gray-500 focus:outline-none\"\n          >\n            <XMarkIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationPopup; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}