{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/pages/EditClient.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport MainLayout from '../components/layout/MainLayout';\nimport ClientForm from '../components/clients/ClientForm';\nimport { getClientById, updateClient } from '../services/clientService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Default company ID (Herramental)\nconst DEFAULT_COMPANY_ID = \"70b2aa97-a5b6-4b5e-91db-be8acbd3701a\";\nconst EditClient = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [client, setClient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  useEffect(() => {\n    if (id) {\n      fetchClientData(id);\n    }\n  }, [id]);\n  const fetchClientData = async clientId => {\n    try {\n      setLoading(true);\n      console.log(`Fetching client data for ID ${clientId}`);\n      const clientData = await getClientById(clientId);\n      if (clientData) {\n        console.log('Client data retrieved successfully:', clientData);\n        setClient(clientData);\n      } else {\n        setError('No se encontró el cliente especificado.');\n      }\n    } catch (err) {\n      console.error('Error al obtener datos del cliente:', err);\n      setError('Error al cargar los datos del cliente. Por favor, intente de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async (data, documents) => {\n    if (!id) return;\n    try {\n      setIsSubmitting(true);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(null); // Clear any previous success message\n\n      // First save the client data without documents\n      console.log('Updating client data first...', data);\n      const updatedClient = await updateClient(id, data, documents, user === null || user === void 0 ? void 0 : user.id);\n      console.log('Client data successfully updated', updatedClient);\n\n      // Check if there's a warning message (e.g., some documents failed to upload)\n      if (updatedClient.warningMessage) {\n        setSuccessMessage(updatedClient.warningMessage);\n        // Don't navigate away when there's a warning about documents\n        return;\n      }\n\n      // Successfully updated\n      console.log('Client update complete');\n      navigate('/clients');\n    } catch (error) {\n      console.error('Error al actualizar cliente:', error);\n      setError(error.message || 'Error al guardar los cambios. Por favor, intente de nuevo.');\n\n      // Scroll to top to show the error message\n      window.scrollTo(0, 0);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle partial save\n  const handleSavePartial = async (data, step) => {\n    try {\n      // Log the saving attempt\n      console.log(`🔍 Guardando datos parciales del cliente en paso ${step}...`);\n      console.log('🔍 Datos a guardar:', data);\n\n      // Show saving indicator\n      setIsSubmitting(true);\n      setError(null); // Clear any previous errors\n\n      if (!client || !client.id) {\n        throw new Error('No se encontró el ID del cliente para actualización parcial');\n      }\n\n      // Asegurarnos de que siempre incluimos el ID del cliente\n      const partialData = {\n        id: client.id,\n        // Siempre incluir el ID para asegurar la actualización correcta\n        ...collectFieldsForStep(data, step)\n      };\n\n      // Asegurarnos de que tenemos campos importantes como company_id\n      if (!partialData.company_id && client.company_id) {\n        partialData.company_id = client.company_id;\n      }\n\n      // Asegurarnos de que tenemos advisor_id\n      if (!partialData.advisor_id && client.advisor_id) {\n        partialData.advisor_id = client.advisor_id;\n      }\n      console.log('🔍 Datos finales a enviar a Supabase:', partialData);\n      try {\n        // Update client with partial data\n        const updatedClient = await updateClient(client.id, partialData);\n        console.log(`🔍 Actualización exitosa para sección ${step}:`, updatedClient);\n        if (!updatedClient) {\n          throw new Error('No se recibió respuesta después de la actualización');\n        }\n\n        // Create a complete merged client object with ALL data\n        // This ensures all fields are available in subsequent steps\n        const mergedClient = {\n          ...client,\n          // Start with original data\n          ...partialData,\n          // Apply our partial changes \n          ...updatedClient // Apply any additional fields returned from the update\n        };\n\n        // Update local state with the merged client data\n        setClient(mergedClient);\n        console.log('🔍 Cliente actualizado en estado local:', mergedClient);\n\n        // Show success message (including any warnings)\n        if (updatedClient.warningMessage) {\n          setSuccessMessage(updatedClient.warningMessage);\n        } else {\n          setSuccessMessage(`Se guardaron los datos de la sección ${step} correctamente`);\n        }\n\n        // Clear message after delay\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3000);\n\n        // Return the complete merged client data to the form\n        // This ensures we always have all client data in the form regardless of step\n        console.log('🔍 Datos completos a devolver al formulario:', mergedClient);\n\n        // For debugging, log all the fields we expect to see in the next step\n        if (step === 1 && mergedClient) {\n          console.log('🔍 Verificando campos financieros para el paso 2:');\n          console.log('employment_type:', mergedClient.employment_type);\n          console.log('employment_years:', mergedClient.employment_years);\n          console.log('monthly_income:', mergedClient.monthly_income);\n          console.log('additional_income:', mergedClient.additional_income);\n          console.log('monthly_expenses:', mergedClient.monthly_expenses);\n          console.log('other_loan_balances:', mergedClient.other_loan_balances);\n        } else if (step === 2 && mergedClient) {\n          console.log('🔍 Verificando campos bancarios para el paso 3:');\n          console.log('bank_name:', mergedClient.bank_name);\n          console.log('bank_clabe:', mergedClient.bank_clabe);\n          console.log('bank_account_number:', mergedClient.bank_account_number);\n          console.log('bank_account_type:', mergedClient.bank_account_type);\n          console.log('bank_account_origin:', mergedClient.bank_account_origin);\n        }\n        return mergedClient;\n      } catch (err) {\n        console.error(`🔍 Error al actualizar cliente en paso ${step}:`, err);\n\n        // Log more details about the error\n        if (err.message) console.error('Error message:', err.message);\n        if (err.cause) console.error('Error cause:', err.cause);\n        if (err.stack) console.error('Error stack:', err.stack);\n\n        // Try to get more information if it's a Supabase error\n        if (err.code || err.details || err.hint) {\n          console.error('Supabase error details:', {\n            code: err.code,\n            details: err.details,\n            hint: err.hint\n          });\n        }\n        setError(`Error al guardar la sección ${step}: ${err.message || 'Error desconocido'}`);\n        throw err;\n      }\n    } catch (error) {\n      console.error(`🔍 Error en handleSavePartial en paso ${step}:`, error);\n      setError(error.message || `Error al guardar la sección ${step}. Por favor, intente nuevamente.`);\n\n      // Mostrar el error por 6 segundos antes de limpiarlo automáticamente\n      setTimeout(() => {\n        if (error.message === setError) {\n          // Solo limpiar si es el mismo error\n          setError(null);\n        }\n      }, 6000);\n      throw error;\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Helper function to collect fields based on step\n  const collectFieldsForStep = (data, step) => {\n    const result = {};\n\n    // Always preserve these fields if they exist\n    if (data.id) result.id = data.id;\n    if (data.company_id) result.company_id = data.company_id;\n    if (data.advisor_id) result.advisor_id = data.advisor_id;\n    switch (step) {\n      case 1:\n        // Personal data\n        const personalFields = ['first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone', 'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address', 'city', 'state', 'postal_code'];\n        personalFields.forEach(field => {\n          if (field in data) {\n            result[field] = data[field];\n          }\n        });\n        break;\n      case 2:\n        // Financial details\n        const financialFields = ['employment_type', 'employment_years', 'monthly_income', 'additional_income', 'monthly_expenses', 'other_loan_balances'];\n        financialFields.forEach(field => {\n          if (field in data) {\n            result[field] = data[field];\n          }\n        });\n        break;\n      case 3:\n        // Bank details\n        const bankFields = ['bank_name', 'bank_clabe', 'bank_account_number', 'bank_account_type', 'bank_account_origin'];\n        bankFields.forEach(field => {\n          if (field in data) {\n            result[field] = data[field];\n          }\n        });\n        break;\n      default:\n        console.warn(`🔍 Paso desconocido para guardado parcial: ${step}`);\n    }\n    return result;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading loading-spinner loading-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this);\n  }\n  if (error || !client) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error || 'No se encontró el cliente solicitado.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/clients'),\n            className: \"btn btn-primary\",\n            children: \"Volver a Clientes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/clients'),\n          className: \"btn btn-sm btn-outline mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5 mr-1\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), \"Volver\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"Editar Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setError(null),\n            className: \"ml-auto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSuccessMessage(null),\n            className: \"ml-auto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ClientForm, {\n        initialData: client,\n        onSubmit: handleSubmit,\n        onSavePartial: handleSavePartial,\n        isSubmitting: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(EditClient, \"hNTKjFQfZWv2LXnl75sVxr7xiik=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = EditClient;\nexport default EditClient;\nvar _c;\n$RefreshReg$(_c, \"EditClient\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useAuth","MainLayout","ClientForm","getClientById","updateClient","jsxDEV","_jsxDEV","DEFAULT_COMPANY_ID","EditClient","_s","id","navigate","user","client","setClient","loading","setLoading","isSubmitting","setIsSubmitting","error","setError","successMessage","setSuccessMessage","fetchClientData","clientId","console","log","clientData","err","handleSubmit","data","documents","updatedClient","warningMessage","message","window","scrollTo","handleSavePartial","step","Error","partialData","collectFieldsForStep","company_id","advisor_id","mergedClient","setTimeout","employment_type","employment_years","monthly_income","additional_income","monthly_expenses","other_loan_balances","bank_name","bank_clabe","bank_account_number","bank_account_type","bank_account_origin","cause","stack","code","details","hint","result","personalFields","forEach","field","financialFields","bankFields","warn","children","className","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","fillRule","clipRule","initialData","onSubmit","onSavePartial","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/EditClient.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport MainLayout from '../components/layout/MainLayout';\nimport ClientForm from '../components/clients/ClientForm';\nimport { Client, ClientDocument, getClientById, updateClient, uploadClientDocuments } from '../services/clientService';\nimport { getClientDocuments } from '../services/documentService';\nimport Alert from '../components/ui/Alert';\n\n// Default company ID (Herramental)\nconst DEFAULT_COMPANY_ID = \"70b2aa97-a5b6-4b5e-91db-be8acbd3701a\";\n\nconst EditClient: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  \n  const [client, setClient] = useState<Client | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (id) {\n      fetchClientData(id);\n    }\n  }, [id]);\n\n  const fetchClientData = async (clientId: string) => {\n    try {\n      setLoading(true);\n      console.log(`Fetching client data for ID ${clientId}`);\n      const clientData = await getClientById(clientId);\n      \n      if (clientData) {\n        console.log('Client data retrieved successfully:', clientData);\n        setClient(clientData);\n      } else {\n        setError('No se encontró el cliente especificado.');\n      }\n    } catch (err) {\n      console.error('Error al obtener datos del cliente:', err);\n      setError('Error al cargar los datos del cliente. Por favor, intente de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (data: Partial<Client>, documents: ClientDocument[]) => {\n    if (!id) return;\n    \n    try {\n      setIsSubmitting(true);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(null); // Clear any previous success message\n      \n      // First save the client data without documents\n      console.log('Updating client data first...', data);\n      const updatedClient = await updateClient(id, data, documents, user?.id);\n      console.log('Client data successfully updated', updatedClient);\n      \n      // Check if there's a warning message (e.g., some documents failed to upload)\n      if (updatedClient.warningMessage) {\n        setSuccessMessage(updatedClient.warningMessage);\n        // Don't navigate away when there's a warning about documents\n        return;\n      }\n      \n      // Successfully updated\n      console.log('Client update complete');\n      navigate('/clients');\n    } catch (error: any) {\n      console.error('Error al actualizar cliente:', error);\n      setError(error.message || 'Error al guardar los cambios. Por favor, intente de nuevo.');\n      \n      // Scroll to top to show the error message\n      window.scrollTo(0, 0);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  // Handle partial save\n  const handleSavePartial = async (data: Partial<Client>, step: number) => {\n    try {\n      // Log the saving attempt\n      console.log(`🔍 Guardando datos parciales del cliente en paso ${step}...`);\n      console.log('🔍 Datos a guardar:', data);\n      \n      // Show saving indicator\n      setIsSubmitting(true);\n      setError(null); // Clear any previous errors\n      \n      if (!client || !client.id) {\n        throw new Error('No se encontró el ID del cliente para actualización parcial');\n      }\n      \n      // Asegurarnos de que siempre incluimos el ID del cliente\n      const partialData: Partial<Client> = {\n        id: client.id, // Siempre incluir el ID para asegurar la actualización correcta\n        ...collectFieldsForStep(data, step)\n      };\n      \n      // Asegurarnos de que tenemos campos importantes como company_id\n      if (!partialData.company_id && client.company_id) {\n        partialData.company_id = client.company_id;\n      }\n      \n      // Asegurarnos de que tenemos advisor_id\n      if (!partialData.advisor_id && client.advisor_id) {\n        partialData.advisor_id = client.advisor_id;\n      }\n      \n      console.log('🔍 Datos finales a enviar a Supabase:', partialData);\n      \n      try {\n        // Update client with partial data\n        const updatedClient = await updateClient(client.id, partialData);\n        console.log(`🔍 Actualización exitosa para sección ${step}:`, updatedClient);\n        \n        if (!updatedClient) {\n          throw new Error('No se recibió respuesta después de la actualización');\n        }\n        \n        // Create a complete merged client object with ALL data\n        // This ensures all fields are available in subsequent steps\n        const mergedClient = {\n          ...client,                 // Start with original data\n          ...partialData,            // Apply our partial changes \n          ...updatedClient           // Apply any additional fields returned from the update\n        };\n        \n        // Update local state with the merged client data\n        setClient(mergedClient as Client);\n        console.log('🔍 Cliente actualizado en estado local:', mergedClient);\n        \n        // Show success message (including any warnings)\n        if (updatedClient.warningMessage) {\n          setSuccessMessage(updatedClient.warningMessage);\n        } else {\n          setSuccessMessage(`Se guardaron los datos de la sección ${step} correctamente`);\n        }\n        \n        // Clear message after delay\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3000);\n        \n        // Return the complete merged client data to the form\n        // This ensures we always have all client data in the form regardless of step\n        console.log('🔍 Datos completos a devolver al formulario:', mergedClient);\n        \n        // For debugging, log all the fields we expect to see in the next step\n        if (step === 1 && mergedClient) {\n          console.log('🔍 Verificando campos financieros para el paso 2:');\n          console.log('employment_type:', mergedClient.employment_type);\n          console.log('employment_years:', mergedClient.employment_years);\n          console.log('monthly_income:', mergedClient.monthly_income);\n          console.log('additional_income:', mergedClient.additional_income);\n          console.log('monthly_expenses:', mergedClient.monthly_expenses);\n          console.log('other_loan_balances:', mergedClient.other_loan_balances);\n        } else if (step === 2 && mergedClient) {\n          console.log('🔍 Verificando campos bancarios para el paso 3:');\n          console.log('bank_name:', mergedClient.bank_name);\n          console.log('bank_clabe:', mergedClient.bank_clabe);\n          console.log('bank_account_number:', mergedClient.bank_account_number);\n          console.log('bank_account_type:', mergedClient.bank_account_type);\n          console.log('bank_account_origin:', mergedClient.bank_account_origin);\n        }\n        \n        return mergedClient;\n      } catch (err: any) {\n        console.error(`🔍 Error al actualizar cliente en paso ${step}:`, err);\n        \n        // Log more details about the error\n        if (err.message) console.error('Error message:', err.message);\n        if (err.cause) console.error('Error cause:', err.cause);\n        if (err.stack) console.error('Error stack:', err.stack);\n        \n        // Try to get more information if it's a Supabase error\n        if (err.code || err.details || err.hint) {\n          console.error('Supabase error details:', {\n            code: err.code,\n            details: err.details,\n            hint: err.hint\n          });\n        }\n        \n        setError(`Error al guardar la sección ${step}: ${err.message || 'Error desconocido'}`);\n        throw err;\n      }\n    } catch (error: any) {\n      console.error(`🔍 Error en handleSavePartial en paso ${step}:`, error);\n      setError(error.message || `Error al guardar la sección ${step}. Por favor, intente nuevamente.`);\n      \n      // Mostrar el error por 6 segundos antes de limpiarlo automáticamente\n      setTimeout(() => {\n        if (error.message === setError) { // Solo limpiar si es el mismo error\n          setError(null);\n        }\n      }, 6000);\n      \n      throw error;\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  // Helper function to collect fields based on step\n  const collectFieldsForStep = (data: Partial<Client>, step: number): Partial<Client> => {\n    const result: Partial<Client> = {};\n    \n    // Always preserve these fields if they exist\n    if (data.id) result.id = data.id;\n    if (data.company_id) result.company_id = data.company_id;\n    if (data.advisor_id) result.advisor_id = data.advisor_id;\n    \n    switch(step) {\n      case 1: // Personal data\n        const personalFields = [\n          'first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone',\n          'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address',\n          'city', 'state', 'postal_code'\n        ];\n        personalFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      case 2: // Financial details\n        const financialFields = [\n          'employment_type', 'employment_years', 'monthly_income',\n          'additional_income', 'monthly_expenses', 'other_loan_balances'\n        ];\n        financialFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      case 3: // Bank details\n        const bankFields = [\n          'bank_name', 'bank_clabe', 'bank_account_number',\n          'bank_account_type', 'bank_account_origin'\n        ];\n        bankFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      default:\n        console.warn(`🔍 Paso desconocido para guardado parcial: ${step}`);\n    }\n    \n    return result;\n  };\n\n  if (loading) {\n    return (\n      <MainLayout>\n        <div className=\"p-6 flex justify-center\">\n          <span className=\"loading loading-spinner loading-lg\"></span>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  if (error || !client) {\n    return (\n      <MainLayout>\n        <div className=\"p-6\">\n          <div className=\"alert alert-error\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span>{error || 'No se encontró el cliente solicitado.'}</span>\n          </div>\n          <div className=\"mt-4\">\n            <button \n              onClick={() => navigate('/clients')}\n              className=\"btn btn-primary\"\n            >\n              Volver a Clientes\n            </button>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"p-6\">\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={() => navigate('/clients')} \n            className=\"btn btn-sm btn-outline mr-4\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n            </svg>\n            Volver\n          </button>\n          <h1 className=\"text-2xl font-bold\">Editar Cliente</h1>\n        </div>\n        \n        {/* Display error alert if there's an error */}\n        {error && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-error\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{error}</span>\n              <button onClick={() => setError(null)} className=\"ml-auto\">×</button>\n            </div>\n          </div>\n        )}\n        \n        {/* Display success message if there's one */}\n        {successMessage && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-success\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{successMessage}</span>\n              <button onClick={() => setSuccessMessage(null)} className=\"ml-auto\">×</button>\n            </div>\n          </div>\n        )}\n        \n        <ClientForm \n          initialData={client}\n          onSubmit={handleSubmit}\n          onSavePartial={handleSavePartial}\n          isSubmitting={isSubmitting}\n        />\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default EditClient; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}