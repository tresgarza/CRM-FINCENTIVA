{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/charts/AmountRangeChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registrar componentes necesarios de Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst AmountRangeChart = ({\n  data,\n  title = 'Distribución por Monto',\n  height = 300,\n  className = ''\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Solicitudes',\n      data: [],\n      backgroundColor: 'rgba(255, 159, 64, 0.8)',\n      borderColor: 'rgba(255, 159, 64, 1)',\n      borderWidth: 1\n    }]\n  });\n\n  // Procesar los datos para el gráfico\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Ordenar los rangos por valor\n    const sortedData = [...data].sort((a, b) => {\n      // Extraer el valor mínimo de cada rango para ordenar\n      const getMinValue = range => {\n        const match = range.match(/(\\d+)/);\n        return match ? parseInt(match[1], 10) : 0;\n      };\n      return getMinValue(a.range) - getMinValue(b.range);\n    });\n    const labels = sortedData.map(item => item.range);\n    const counts = sortedData.map(item => item.count);\n\n    // Generar colores con gradiente según el monto\n    const colors = sortedData.map((_, index) => {\n      const value = index / (sortedData.length - 1 || 1);\n      const r = Math.round(255 - value * 100);\n      const g = Math.round(120 + value * 60);\n      const b = Math.round(50 + value * 100);\n      return `rgba(${r}, ${g}, ${b}, 0.8)`;\n    });\n    setChartData({\n      labels,\n      datasets: [{\n        label: 'Solicitudes',\n        data: counts,\n        backgroundColor: colors,\n        borderColor: colors.map(color => color.replace('0.8', '1')),\n        borderWidth: 1\n      }]\n    });\n  }, [data]);\n  const options = {\n    indexAxis: 'y',\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            return `Solicitudes: ${context.parsed.x}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        beginAtZero: true,\n        ticks: {\n          precision: 0\n        }\n      },\n      y: {\n        grid: {\n          display: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chart-container ${className}`,\n    style: {\n      height: `${height}px`\n    },\n    children: data && data.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full bg-base-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: \"Sin datos disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(AmountRangeChart, \"EUCWYNLGn5BuHySEG9BjX0P9C0s=\");\n_c = AmountRangeChart;\nexport default AmountRangeChart;\nvar _c;\n$RefreshReg$(_c, \"AmountRangeChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","AmountRangeChart","data","title","height","className","_s","chartData","setChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","length","sortedData","sort","a","b","getMinValue","range","match","parseInt","map","item","counts","count","colors","_","index","value","r","Math","round","g","color","replace","options","indexAxis","responsive","maintainAspectRatio","plugins","legend","display","text","font","size","tooltip","callbacks","context","parsed","x","scales","beginAtZero","ticks","precision","y","grid","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/charts/AmountRangeChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\n// Registrar componentes necesarios de Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface AmountRange {\n  range: string;\n  count: number;\n}\n\ninterface AmountRangeChartProps {\n  data: AmountRange[];\n  title?: string;\n  height?: number;\n  className?: string;\n}\n\nconst AmountRangeChart: React.FC<AmountRangeChartProps> = ({\n  data,\n  title = 'Distribución por Monto',\n  height = 300,\n  className = '',\n}) => {\n  const [chartData, setChartData] = useState<any>({\n    labels: [],\n    datasets: [\n      {\n        label: 'Solicitudes',\n        data: [],\n        backgroundColor: 'rgba(255, 159, 64, 0.8)',\n        borderColor: 'rgba(255, 159, 64, 1)',\n        borderWidth: 1,\n      },\n    ],\n  });\n\n  // Procesar los datos para el gráfico\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Ordenar los rangos por valor\n    const sortedData = [...data].sort((a, b) => {\n      // Extraer el valor mínimo de cada rango para ordenar\n      const getMinValue = (range: string) => {\n        const match = range.match(/(\\d+)/);\n        return match ? parseInt(match[1], 10) : 0;\n      };\n      \n      return getMinValue(a.range) - getMinValue(b.range);\n    });\n\n    const labels = sortedData.map(item => item.range);\n    const counts = sortedData.map(item => item.count);\n\n    // Generar colores con gradiente según el monto\n    const colors = sortedData.map((_, index) => {\n      const value = index / (sortedData.length - 1 || 1);\n      const r = Math.round(255 - (value * 100));\n      const g = Math.round(120 + (value * 60));\n      const b = Math.round(50 + (value * 100));\n      return `rgba(${r}, ${g}, ${b}, 0.8)`;\n    });\n\n    setChartData({\n      labels,\n      datasets: [\n        {\n          label: 'Solicitudes',\n          data: counts,\n          backgroundColor: colors,\n          borderColor: colors.map(color => color.replace('0.8', '1')),\n          borderWidth: 1,\n        },\n      ],\n    });\n  }, [data]);\n\n  const options = {\n    indexAxis: 'y' as const,\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (context: any) => {\n            return `Solicitudes: ${context.parsed.x}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        beginAtZero: true,\n        ticks: {\n          precision: 0,\n        },\n      },\n      y: {\n        grid: {\n          display: false,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className={`chart-container ${className}`} style={{ height: `${height}px` }}>\n      {data && data.length > 0 ? (\n        <Bar data={chartData} options={options} />\n      ) : (\n        <div className=\"flex items-center justify-center h-full bg-base-200 rounded-lg\">\n          <p className=\"text-sm text-gray-500\">Sin datos disponibles</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AmountRangeChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}