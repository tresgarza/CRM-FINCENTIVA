{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, query, getDataUrl, dataAttr, isLeftClick, isModifierKey, getEventTarget, getRelativePoint, trackPointerMove } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createSplitProps, compact } from '@zag-js/utils';\nimport getStroke from 'perfect-freehand';\nimport { createProps } from '@zag-js/types';\n\n// src/signature-pad.anatomy.ts\nvar anatomy = createAnatomy(\"signature-pad\").parts(\"root\", \"control\", \"segment\", \"segmentPath\", \"guide\", \"clearTrigger\", \"label\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `signature-${ctx.id}`,\n  getControlId: ctx => ctx.ids?.control ?? `signature-control-${ctx.id}`,\n  getLabelId: ctx => ctx.ids?.label ?? `signature-label-${ctx.id}`,\n  getHiddenInputId: ctx => ctx.ids?.hiddenInput ?? `signature-input-${ctx.id}`,\n  getControlEl: ctx => dom.getById(ctx, dom.getControlId(ctx)),\n  getSegmentEl: ctx => query(dom.getControlEl(ctx), \"[data-part=segment]\"),\n  getHiddenInputEl: ctx => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  getDataUrl: (ctx, options) => {\n    if (ctx.isEmpty) return Promise.resolve(\"\");\n    return getDataUrl(dom.getSegmentEl(ctx), options);\n  }\n});\n\n// src/signature-pad.connect.ts\nvar defaultTranslations = {\n  control: \"signature pad\",\n  clearTrigger: \"clear signature\"\n};\nfunction connect(state, send, normalize) {\n  const drawing = state.matches(\"drawing\");\n  const empty = state.context.isEmpty;\n  const interactive = state.context.isInteractive;\n  const disabled = !!state.context.disabled;\n  const translations = state.context.translations || defaultTranslations;\n  return {\n    empty,\n    drawing,\n    currentPath: state.context.currentPath,\n    paths: state.context.paths,\n    clear() {\n      send({\n        type: \"CLEAR\"\n      });\n    },\n    getDataUrl(type, quality) {\n      return dom.getDataUrl(state.context, {\n        type,\n        quality\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        id: dom.getLabelId(state.context),\n        \"data-disabled\": dataAttr(disabled),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onClick(event) {\n          if (!interactive) return;\n          if (event.defaultPrevented) return;\n          const controlEl = dom.getControlEl(state.context);\n          controlEl?.focus({\n            preventScroll: true\n          });\n        }\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        id: dom.getRootId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        tabIndex: disabled ? void 0 : 0,\n        id: dom.getControlId(state.context),\n        role: \"application\",\n        \"aria-roledescription\": \"signature pad\",\n        \"aria-label\": translations.control,\n        \"aria-disabled\": disabled,\n        \"data-disabled\": dataAttr(disabled),\n        onPointerDown(event) {\n          if (!isLeftClick(event)) return;\n          if (isModifierKey(event)) return;\n          if (!interactive) return;\n          const target = getEventTarget(event);\n          if (target?.closest(\"[data-part=clear-trigger]\")) return;\n          event.currentTarget.setPointerCapture(event.pointerId);\n          const point = {\n            x: event.clientX,\n            y: event.clientY\n          };\n          const {\n            offset\n          } = getRelativePoint(point, dom.getControlEl(state.context));\n          send({\n            type: \"POINTER_DOWN\",\n            point: offset,\n            pressure: event.pressure\n          });\n        },\n        onPointerUp(event) {\n          if (!interactive) return;\n          if (event.currentTarget.hasPointerCapture(event.pointerId)) {\n            event.currentTarget.releasePointerCapture(event.pointerId);\n          }\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getSegmentProps() {\n      return normalize.svg({\n        ...parts.segment.attrs,\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          pointerEvents: \"none\",\n          fill: state.context.drawing.fill\n        }\n      });\n    },\n    getSegmentPathProps(props2) {\n      return normalize.path({\n        ...parts.segmentPath.attrs,\n        d: props2.path\n      });\n    },\n    getGuideProps() {\n      return normalize.element({\n        ...parts.guide.attrs,\n        \"data-disabled\": dataAttr(disabled)\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        type: \"button\",\n        \"aria-label\": translations.clearTrigger,\n        hidden: !state.context.paths.length || drawing,\n        disabled,\n        onClick() {\n          send({\n            type: \"CLEAR\"\n          });\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      return normalize.input({\n        id: dom.getHiddenInputId(state.context),\n        type: \"text\",\n        hidden: true,\n        disabled,\n        required: state.context.required,\n        readOnly: state.context.readOnly,\n        name: state.context.name,\n        value: props2.value\n      });\n    }\n  };\n}\n\n// src/get-svg-path.ts\nvar average = (a, b) => (a + b) / 2;\nfunction getSvgPathFromStroke(points, closed = true) {\n  const len = points.length;\n  if (len < 4) {\n    return \"\";\n  }\n  let a = points[0];\n  let b = points[1];\n  const c = points[2];\n  let result = `M${a[0].toFixed(2)},${a[1].toFixed(2)} Q${b[0].toFixed(2)},${b[1].toFixed(2)} ${average(b[0], c[0]).toFixed(2)},${average(b[1], c[1]).toFixed(2)} T`;\n  for (let i = 2, max = len - 1; i < max; i++) {\n    a = points[i];\n    b = points[i + 1];\n    result += `${average(a[0], b[0]).toFixed(2)},${average(a[1], b[1]).toFixed(2)} `;\n  }\n  if (closed) {\n    result += \"Z\";\n  }\n  return result;\n}\n\n// src/signature-pad.machine.ts\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"signature-pad\",\n    initial: \"idle\",\n    context: {\n      readOnly: false,\n      disabled: false,\n      ...ctx,\n      paths: [],\n      currentPoints: [],\n      currentPath: null,\n      drawing: {\n        size: 2,\n        simulatePressure: false,\n        thinning: 0.7,\n        smoothing: 0.4,\n        streamline: 0.6,\n        ...ctx.drawing\n      }\n    },\n    computed: {\n      isInteractive: ctx2 => !(ctx2.disabled || ctx2.readOnly),\n      isEmpty: ctx2 => ctx2.paths.length === 0\n    },\n    on: {\n      CLEAR: {\n        actions: [\"clearPoints\", \"invokeOnDrawEnd\", \"focusCanvasEl\"]\n      }\n    },\n    states: {\n      idle: {\n        on: {\n          POINTER_DOWN: {\n            target: \"drawing\",\n            actions: [\"addPoint\"]\n          }\n        }\n      },\n      drawing: {\n        activities: [\"trackPointerMove\"],\n        on: {\n          POINTER_MOVE: {\n            actions: [\"addPoint\", \"invokeOnDraw\"]\n          },\n          POINTER_UP: {\n            target: \"idle\",\n            actions: [\"endStroke\", \"invokeOnDrawEnd\"]\n          }\n        }\n      }\n    }\n  }, {\n    activities: {\n      trackPointerMove(ctx2, _evt, {\n        send\n      }) {\n        const doc = dom.getDoc(ctx2);\n        return trackPointerMove(doc, {\n          onPointerMove({\n            event,\n            point\n          }) {\n            const {\n              offset\n            } = getRelativePoint(point, dom.getControlEl(ctx2));\n            send({\n              type: \"POINTER_MOVE\",\n              point: offset,\n              pressure: event.pressure\n            });\n          },\n          onPointerUp() {\n            send({\n              type: \"POINTER_UP\"\n            });\n          }\n        });\n      }\n    },\n    actions: {\n      addPoint(ctx2, evt) {\n        ctx2.currentPoints.push(evt.point);\n        const stroke = getStroke(ctx2.currentPoints, ctx2.drawing);\n        ctx2.currentPath = getSvgPathFromStroke(stroke);\n      },\n      endStroke(ctx2) {\n        ctx2.paths.push(ctx2.currentPath);\n        ctx2.currentPoints = [];\n        ctx2.currentPath = null;\n      },\n      clearPoints(ctx2) {\n        ctx2.currentPoints = [];\n        ctx2.paths = [];\n      },\n      focusCanvasEl(ctx2) {\n        queueMicrotask(() => {\n          dom.getControlEl(ctx2)?.focus({\n            preventScroll: true\n          });\n        });\n      },\n      invokeOnDraw(ctx2) {\n        ctx2.onDraw?.({\n          paths: [...ctx2.paths, ctx2.currentPath]\n        });\n      },\n      invokeOnDrawEnd(ctx2) {\n        ctx2.onDrawEnd?.({\n          paths: [...ctx2.paths],\n          getDataUrl(type, quality = 0.92) {\n            return dom.getDataUrl(ctx2, {\n              type,\n              quality\n            });\n          }\n        });\n      }\n    }\n  });\n}\nvar props = createProps()([\"dir\", \"disabled\", \"drawing\", \"getRootNode\", \"id\", \"ids\", \"name\", \"onDraw\", \"onDrawEnd\", \"readOnly\", \"required\", \"translations\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","createScope","query","getDataUrl","dataAttr","isLeftClick","isModifierKey","getEventTarget","getRelativePoint","trackPointerMove","createMachine","createSplitProps","compact","getStroke","createProps","anatomy","parts","build","dom","getRootId","ctx","ids","root","id","getControlId","control","getLabelId","label","getHiddenInputId","hiddenInput","getControlEl","getById","getSegmentEl","getHiddenInputEl","options","isEmpty","Promise","resolve","defaultTranslations","clearTrigger","connect","state","send","normalize","drawing","matches","empty","context","interactive","isInteractive","disabled","translations","currentPath","paths","clear","type","quality","getLabelProps","attrs","htmlFor","onClick","event","defaultPrevented","controlEl","focus","preventScroll","getRootProps","element","getControlProps","tabIndex","role","onPointerDown","target","closest","currentTarget","setPointerCapture","pointerId","point","x","clientX","y","clientY","offset","pressure","onPointerUp","hasPointerCapture","releasePointerCapture","style","position","touchAction","userSelect","WebkitUserSelect","getSegmentProps","svg","segment","top","left","width","height","pointerEvents","fill","getSegmentPathProps","props2","path","segmentPath","d","getGuideProps","guide","getClearTriggerProps","button","hidden","length","getHiddenInputProps","input","required","readOnly","name","value","average","a","b","getSvgPathFromStroke","points","closed","len","c","result","toFixed","i","max","machine","userContext","initial","currentPoints","size","simulatePressure","thinning","smoothing","streamline","computed","ctx2","on","CLEAR","actions","states","idle","POINTER_DOWN","activities","POINTER_MOVE","POINTER_UP","_evt","doc","getDoc","onPointerMove","addPoint","evt","push","stroke","endStroke","clearPoints","focusCanvasEl","queueMicrotask","invokeOnDraw","onDraw","invokeOnDrawEnd","onDrawEnd","props","splitProps"],"sources":["/Users/diegogg98/NEW CRM MAR18/node_modules/@zag-js/signature-pad/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, query, getDataUrl, dataAttr, isLeftClick, isModifierKey, getEventTarget, getRelativePoint, trackPointerMove } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createSplitProps, compact } from '@zag-js/utils';\nimport getStroke from 'perfect-freehand';\nimport { createProps } from '@zag-js/types';\n\n// src/signature-pad.anatomy.ts\nvar anatomy = createAnatomy(\"signature-pad\").parts(\n  \"root\",\n  \"control\",\n  \"segment\",\n  \"segmentPath\",\n  \"guide\",\n  \"clearTrigger\",\n  \"label\"\n);\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `signature-${ctx.id}`,\n  getControlId: (ctx) => ctx.ids?.control ?? `signature-control-${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `signature-label-${ctx.id}`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `signature-input-${ctx.id}`,\n  getControlEl: (ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getSegmentEl: (ctx) => query(dom.getControlEl(ctx), \"[data-part=segment]\"),\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  getDataUrl: (ctx, options) => {\n    if (ctx.isEmpty) return Promise.resolve(\"\");\n    return getDataUrl(dom.getSegmentEl(ctx), options);\n  }\n});\n\n// src/signature-pad.connect.ts\nvar defaultTranslations = {\n  control: \"signature pad\",\n  clearTrigger: \"clear signature\"\n};\nfunction connect(state, send, normalize) {\n  const drawing = state.matches(\"drawing\");\n  const empty = state.context.isEmpty;\n  const interactive = state.context.isInteractive;\n  const disabled = !!state.context.disabled;\n  const translations = state.context.translations || defaultTranslations;\n  return {\n    empty,\n    drawing,\n    currentPath: state.context.currentPath,\n    paths: state.context.paths,\n    clear() {\n      send({ type: \"CLEAR\" });\n    },\n    getDataUrl(type, quality) {\n      return dom.getDataUrl(state.context, { type, quality });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        id: dom.getLabelId(state.context),\n        \"data-disabled\": dataAttr(disabled),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onClick(event) {\n          if (!interactive) return;\n          if (event.defaultPrevented) return;\n          const controlEl = dom.getControlEl(state.context);\n          controlEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        id: dom.getRootId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        tabIndex: disabled ? void 0 : 0,\n        id: dom.getControlId(state.context),\n        role: \"application\",\n        \"aria-roledescription\": \"signature pad\",\n        \"aria-label\": translations.control,\n        \"aria-disabled\": disabled,\n        \"data-disabled\": dataAttr(disabled),\n        onPointerDown(event) {\n          if (!isLeftClick(event)) return;\n          if (isModifierKey(event)) return;\n          if (!interactive) return;\n          const target = getEventTarget(event);\n          if (target?.closest(\"[data-part=clear-trigger]\")) return;\n          event.currentTarget.setPointerCapture(event.pointerId);\n          const point = { x: event.clientX, y: event.clientY };\n          const { offset } = getRelativePoint(point, dom.getControlEl(state.context));\n          send({ type: \"POINTER_DOWN\", point: offset, pressure: event.pressure });\n        },\n        onPointerUp(event) {\n          if (!interactive) return;\n          if (event.currentTarget.hasPointerCapture(event.pointerId)) {\n            event.currentTarget.releasePointerCapture(event.pointerId);\n          }\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getSegmentProps() {\n      return normalize.svg({\n        ...parts.segment.attrs,\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          pointerEvents: \"none\",\n          fill: state.context.drawing.fill\n        }\n      });\n    },\n    getSegmentPathProps(props2) {\n      return normalize.path({\n        ...parts.segmentPath.attrs,\n        d: props2.path\n      });\n    },\n    getGuideProps() {\n      return normalize.element({\n        ...parts.guide.attrs,\n        \"data-disabled\": dataAttr(disabled)\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        type: \"button\",\n        \"aria-label\": translations.clearTrigger,\n        hidden: !state.context.paths.length || drawing,\n        disabled,\n        onClick() {\n          send({ type: \"CLEAR\" });\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      return normalize.input({\n        id: dom.getHiddenInputId(state.context),\n        type: \"text\",\n        hidden: true,\n        disabled,\n        required: state.context.required,\n        readOnly: state.context.readOnly,\n        name: state.context.name,\n        value: props2.value\n      });\n    }\n  };\n}\n\n// src/get-svg-path.ts\nvar average = (a, b) => (a + b) / 2;\nfunction getSvgPathFromStroke(points, closed = true) {\n  const len = points.length;\n  if (len < 4) {\n    return \"\";\n  }\n  let a = points[0];\n  let b = points[1];\n  const c = points[2];\n  let result = `M${a[0].toFixed(2)},${a[1].toFixed(2)} Q${b[0].toFixed(2)},${b[1].toFixed(2)} ${average(b[0], c[0]).toFixed(2)},${average(\n    b[1],\n    c[1]\n  ).toFixed(2)} T`;\n  for (let i = 2, max = len - 1; i < max; i++) {\n    a = points[i];\n    b = points[i + 1];\n    result += `${average(a[0], b[0]).toFixed(2)},${average(a[1], b[1]).toFixed(2)} `;\n  }\n  if (closed) {\n    result += \"Z\";\n  }\n  return result;\n}\n\n// src/signature-pad.machine.ts\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"signature-pad\",\n      initial: \"idle\",\n      context: {\n        readOnly: false,\n        disabled: false,\n        ...ctx,\n        paths: [],\n        currentPoints: [],\n        currentPath: null,\n        drawing: {\n          size: 2,\n          simulatePressure: false,\n          thinning: 0.7,\n          smoothing: 0.4,\n          streamline: 0.6,\n          ...ctx.drawing\n        }\n      },\n      computed: {\n        isInteractive: (ctx2) => !(ctx2.disabled || ctx2.readOnly),\n        isEmpty: (ctx2) => ctx2.paths.length === 0\n      },\n      on: {\n        CLEAR: {\n          actions: [\"clearPoints\", \"invokeOnDrawEnd\", \"focusCanvasEl\"]\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            POINTER_DOWN: {\n              target: \"drawing\",\n              actions: [\"addPoint\"]\n            }\n          }\n        },\n        drawing: {\n          activities: [\"trackPointerMove\"],\n          on: {\n            POINTER_MOVE: {\n              actions: [\"addPoint\", \"invokeOnDraw\"]\n            },\n            POINTER_UP: {\n              target: \"idle\",\n              actions: [\"endStroke\", \"invokeOnDrawEnd\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      activities: {\n        trackPointerMove(ctx2, _evt, { send }) {\n          const doc = dom.getDoc(ctx2);\n          return trackPointerMove(doc, {\n            onPointerMove({ event, point }) {\n              const { offset } = getRelativePoint(point, dom.getControlEl(ctx2));\n              send({ type: \"POINTER_MOVE\", point: offset, pressure: event.pressure });\n            },\n            onPointerUp() {\n              send({ type: \"POINTER_UP\" });\n            }\n          });\n        }\n      },\n      actions: {\n        addPoint(ctx2, evt) {\n          ctx2.currentPoints.push(evt.point);\n          const stroke = getStroke(ctx2.currentPoints, ctx2.drawing);\n          ctx2.currentPath = getSvgPathFromStroke(stroke);\n        },\n        endStroke(ctx2) {\n          ctx2.paths.push(ctx2.currentPath);\n          ctx2.currentPoints = [];\n          ctx2.currentPath = null;\n        },\n        clearPoints(ctx2) {\n          ctx2.currentPoints = [];\n          ctx2.paths = [];\n        },\n        focusCanvasEl(ctx2) {\n          queueMicrotask(() => {\n            dom.getControlEl(ctx2)?.focus({ preventScroll: true });\n          });\n        },\n        invokeOnDraw(ctx2) {\n          ctx2.onDraw?.({\n            paths: [...ctx2.paths, ctx2.currentPath]\n          });\n        },\n        invokeOnDrawEnd(ctx2) {\n          ctx2.onDrawEnd?.({\n            paths: [...ctx2.paths],\n            getDataUrl(type, quality = 0.92) {\n              return dom.getDataUrl(ctx2, { type, quality });\n            }\n          });\n        }\n      }\n    }\n  );\n}\nvar props = createProps()([\n  \"dir\",\n  \"disabled\",\n  \"drawing\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onDraw\",\n  \"onDrawEnd\",\n  \"readOnly\",\n  \"required\",\n  \"translations\"\n]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}