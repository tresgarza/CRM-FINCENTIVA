{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{ChartBarIcon,CurrencyDollarIcon,UserGroupIcon,ClipboardDocumentCheckIcon}from'@heroicons/react/24/outline';import{useAuth}from'../contexts/AuthContext';import{USER_ROLES}from'../utils/constants/roles';import{APPLICATION_TYPE_LABELS}from'../utils/constants/applications';// Componentes de UI\nimport MainLayout from'../components/layout/MainLayout';import MetricCard from'../components/ui/charts/MetricCard';import StatusDistributionChart from'../components/ui/charts/StatusDistributionChart';import MonthlyApplicationsChart from'../components/ui/charts/MonthlyApplicationsChart';import AmountRangeChart from'../components/ui/charts/AmountRangeChart';import AdvisorPerformanceChart from'../components/ui/charts/AdvisorPerformanceChart';// Servicios\nimport{getGeneralDashboardStats,getAdvisorDashboardStats,getCompanyDashboardStats}from'../services/dashboardService';// Interfaces adicionales\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\n// Tipo combinado para stats con todas las propiedades posibles\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{var _stats$applications;const navigate=useNavigate();const{user}=useAuth();const[isLoading,setIsLoading]=useState(true);const[stats,setStats]=useState(null);const[error,setError]=useState(null);const[partialData,setPartialData]=useState(false);// Formatear moneda (pesos)\nconst formatCurrency=value=>{const numValue=typeof value==='string'?parseFloat(value):value;return new Intl.NumberFormat('es-MX',{style:'currency',currency:'MXN',minimumFractionDigits:2,// Siempre mostrar 2 decimales\nmaximumFractionDigits:2// Siempre mostrar 2 decimales\n}).format(numValue);};// Comprobar si el objeto es de tipo AdvisorStats\nconst isAdvisorStats=obj=>{return'conversionRate'in obj&&typeof obj.conversionRate==='number';};// Cargar estadísticas según rol del usuario\nuseEffect(()=>{if(!user){navigate('/login');return;}const fetchDashboardData=async()=>{try{setIsLoading(true);setError(null);setPartialData(false);let dashboardData;try{if(user.role===USER_ROLES.ADVISOR){// Estadísticas específicas del asesor\ndashboardData=await getAdvisorDashboardStats(user.id);}else if(user.role===USER_ROLES.COMPANY_ADMIN&&user.entityId){// Estadísticas específicas de la empresa (entityId contiene el company_id)\ndashboardData=await getCompanyDashboardStats(user.entityId);}else{// Estadísticas generales para admin del sistema\ndashboardData=await getGeneralDashboardStats();}}catch(statsError){console.error('Error fetching dashboard stats:',statsError);// Create fallback data\nsetPartialData(true);dashboardData={totalApplications:0,applicationsByStatus:[{status:'approved',count:9},{status:'pending',count:25},{status:'in_review',count:12},{status:'rejected',count:5},{status:'completed',count:8}],avgAmount:0,minAmount:0,maxAmount:0,recentApplications:[],applicationsByMonth:[],totalApproved:0,totalRejected:0,totalPending:0,pendingApproval:0,totalClients:0};}// Preparar datos de muestra para los gráficos mientras implementamos los datos reales\nconst extendedData={...dashboardData,applications:{pending:dashboardData.totalPending||0,approved:dashboardData.totalApproved||0,rejected:dashboardData.totalRejected||0,in_review:(dashboardData.totalPending||0)-(dashboardData.pendingApproval||0)},previousMonthApproved:Math.floor((dashboardData.totalApproved||0)*0.8),// Simulación\namountRanges:[{range:'0-5,000',count:Math.floor(Math.random()*30)+10},{range:'5,001-10,000',count:Math.floor(Math.random()*25)+15},{range:'10,001-20,000',count:Math.floor(Math.random()*20)+20},{range:'20,001-30,000',count:Math.floor(Math.random()*15)+10},{range:'30,001-50,000',count:Math.floor(Math.random()*10)+5},{range:'50,001+',count:Math.floor(Math.random()*5)+2}],advisorPerformance:[{advisor_name:'Asesor 1',total_applications:Math.floor(Math.random()*30)+20,approved_applications:Math.floor(Math.random()*20)+10},{advisor_name:'Asesor 2',total_applications:Math.floor(Math.random()*30)+15,approved_applications:Math.floor(Math.random()*15)+5},{advisor_name:'Asesor 3',total_applications:Math.floor(Math.random()*25)+10,approved_applications:Math.floor(Math.random()*10)+5},{advisor_name:'Asesor 4',total_applications:Math.floor(Math.random()*20)+5,approved_applications:Math.floor(Math.random()*10)+2},{advisor_name:'Asesor 5',total_applications:Math.floor(Math.random()*15)+5,approved_applications:Math.floor(Math.random()*8)+1}]};setStats(extendedData);}catch(err){console.error('Error al cargar estadísticas:',err);setError('Error al cargar las estadísticas del dashboard. Intente refrescar la página.');}finally{setIsLoading(false);}};fetchDashboardData();},[navigate,user]);// Obtener la etiqueta legible para el tipo de aplicación\nconst getApplicationTypeLabel=type=>{if(!type)return'N/A';// Normalizar el tipo a minúsculas para comparación\nconst normalizedType=type.toLowerCase();// Verificar si es alguno de los tipos definidos en APPLICATION_TYPE_LABELS\nfor(const[key,value]of Object.entries(APPLICATION_TYPE_LABELS)){if(key.toLowerCase()===normalizedType||key.toLowerCase().includes(normalizedType)||normalizedType.includes(key.toLowerCase())){return value;}}// Mapeo directo para valores específicos\n// Este mapeo garantiza que los valores exactos de la base de datos se traduzcan correctamente\nconst typeMappings={'selected_plans':'Planes Seleccionados','product_simulations':'Simulación de Producto','cash_requests':'Solicitud de Efectivo','auto_loan':'Crédito Automotriz','car_backed_loan':'Crédito con Garantía Automotriz','personal_loan':'Préstamo Personal','cash_advance':'Adelanto de Efectivo'};// Buscar coincidencia exacta primero\nif(typeMappings[normalizedType]){return typeMappings[normalizedType];}// Buscar una coincidencia parcial\nfor(const[key,value]of Object.entries(typeMappings)){if(normalizedType.includes(key)||key.includes(normalizedType)){return value;}}// Si no hay coincidencia, retornar el valor original\nreturn type;};// Si está cargando, mostrar indicador\nif(isLoading){return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-full p-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"loading loading-spinner loading-lg\"})})})});}// Si hay error, mostrar mensaje\nif(error){return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsx(\"div\",{className:\"p-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-error\",children:/*#__PURE__*/_jsx(\"span\",{children:typeof error==='object'?'Error al cargar el dashboard':error})})})});}// Si no hay datos, mostrar mensaje\nif(!stats){return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsx(\"div\",{className:\"p-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-info\",children:/*#__PURE__*/_jsx(\"span\",{children:\"No hay datos disponibles para mostrar en el dashboard.\"})})})});}return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 space-y-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-800 mb-6\",children:\"Dashboard\"}),partialData&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-warning mb-4\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.\"})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-error mb-4\",children:/*#__PURE__*/_jsx(\"span\",{children:error})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsx(MetricCard,{title:\"Total de Solicitudes\",value:stats.totalApplications,icon:/*#__PURE__*/_jsx(ChartBarIcon,{className:\"h-5 w-5\"}),color:\"blue\"}),/*#__PURE__*/_jsx(MetricCard,{title:\"Solicitudes Aprobadas\",value:((_stats$applications=stats.applications)===null||_stats$applications===void 0?void 0:_stats$applications.approved)||0,previousValue:stats.previousMonthApproved,icon:/*#__PURE__*/_jsx(ClipboardDocumentCheckIcon,{className:\"h-5 w-5\"}),color:\"green\"}),/*#__PURE__*/_jsx(MetricCard,{title:\"Monto Promedio\",value:stats.avgAmount,formatValue:formatCurrency,icon:/*#__PURE__*/_jsx(CurrencyDollarIcon,{className:\"h-5 w-5\"}),color:\"indigo\"}),isAdvisorStats(stats)?/*#__PURE__*/_jsx(MetricCard,{title:\"Tasa de Conversi\\xF3n\",value:stats.conversionRate,isPercentage:true,icon:/*#__PURE__*/_jsx(UserGroupIcon,{className:\"h-5 w-5\"}),color:\"purple\"}):/*#__PURE__*/_jsx(MetricCard,{title:\"Total de Clientes\",value:'totalClients'in stats&&stats.totalClients?Number(stats.totalClients):'No clients',icon:/*#__PURE__*/_jsx(UserGroupIcon,{className:\"h-5 w-5\"}),color:\"purple\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Solicitudes por Mes\"}),stats.applicationsByMonth&&Array.isArray(stats.applicationsByMonth)&&/*#__PURE__*/_jsx(MonthlyApplicationsChart,{data:stats.applicationsByMonth.map(item=>({month:String(item.month||''),count:Number(item.count||0)})),height:300,title:\"\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Distribuci\\xF3n por Estado\"}),/*#__PURE__*/_jsx(StatusDistributionChart,{data:stats.applicationsByStatus.map(item=>({status:String(item.status||''),count:Number(item.count||0)})),height:300,title:\"\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Distribuci\\xF3n por Monto\"}),stats.amountRanges&&/*#__PURE__*/_jsx(AmountRangeChart,{data:stats.amountRanges,height:300,title:\"\"})]})}),(user===null||user===void 0?void 0:user.role)===USER_ROLES.SUPERADMIN&&/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Rendimiento de Asesores\"}),stats.advisorPerformance&&/*#__PURE__*/_jsx(AdvisorPerformanceChart,{data:stats.advisorPerformance,height:300,title:\"\",maxBars:8})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md mt-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Solicitudes Recientes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-zebra w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Cliente\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tipo\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Monto\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Estado\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Fecha\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:stats.recentApplications&&stats.recentApplications.length>0?stats.recentApplications.map((app,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover cursor-pointer\",onClick:()=>navigate(`/applications/${app.id}`),children:[/*#__PURE__*/_jsx(\"td\",{children:String(app.client_name||'N/A')}),/*#__PURE__*/_jsx(\"td\",{children:getApplicationTypeLabel(app.application_type)}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(Number(app.amount||0))}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:`badge badge-${String(app.status)==='approved'?'success':String(app.status)==='rejected'?'error':String(app.status)==='pending'?'warning':String(app.status)==='in_review'?'info':'ghost'}`,children:String(app.status||'N/A')})}),/*#__PURE__*/_jsx(\"td\",{children:app.created_at?new Date(String(app.created_at)).toLocaleDateString():'N/A'})]},index)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:5,className:\"text-center\",children:\"No hay solicitudes recientes\"})})})]})})]})})]})});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ChartBarIcon","CurrencyDollarIcon","UserGroupIcon","ClipboardDocumentCheckIcon","useAuth","USER_ROLES","APPLICATION_TYPE_LABELS","MainLayout","MetricCard","StatusDistributionChart","MonthlyApplicationsChart","AmountRangeChart","AdvisorPerformanceChart","getGeneralDashboardStats","getAdvisorDashboardStats","getCompanyDashboardStats","jsx","_jsx","jsxs","_jsxs","Dashboard","_stats$applications","navigate","user","isLoading","setIsLoading","stats","setStats","error","setError","partialData","setPartialData","formatCurrency","value","numValue","parseFloat","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","isAdvisorStats","obj","conversionRate","fetchDashboardData","dashboardData","role","ADVISOR","id","COMPANY_ADMIN","entityId","statsError","console","totalApplications","applicationsByStatus","status","count","avgAmount","minAmount","maxAmount","recentApplications","applicationsByMonth","totalApproved","totalRejected","totalPending","pendingApproval","totalClients","extendedData","applications","pending","approved","rejected","in_review","previousMonthApproved","Math","floor","amountRanges","range","random","advisorPerformance","advisor_name","total_applications","approved_applications","err","getApplicationTypeLabel","type","normalizedType","toLowerCase","key","Object","entries","includes","typeMappings","children","className","title","icon","color","previousValue","formatValue","isPercentage","Number","Array","isArray","data","map","item","month","String","height","SUPERADMIN","maxBars","length","app","index","onClick","client_name","application_type","amount","created_at","Date","toLocaleDateString","colSpan"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChartBarIcon, CurrencyDollarIcon, UserGroupIcon, ClipboardDocumentCheckIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { USER_ROLES } from '../utils/constants/roles';\nimport { APPLICATION_TYPE_LABELS } from '../utils/constants/applications';\n\n// Componentes de UI\nimport MainLayout from '../components/layout/MainLayout';\nimport MetricCard from '../components/ui/charts/MetricCard';\nimport StatusDistributionChart from '../components/ui/charts/StatusDistributionChart';\nimport MonthlyApplicationsChart from '../components/ui/charts/MonthlyApplicationsChart';\nimport AmountRangeChart from '../components/ui/charts/AmountRangeChart';\nimport AdvisorPerformanceChart from '../components/ui/charts/AdvisorPerformanceChart';\n\n// Servicios\nimport {\n  DashboardStats,\n  AdvisorStats,\n  CompanyStats,\n  getGeneralDashboardStats,\n  getAdvisorDashboardStats,\n  getCompanyDashboardStats,\n} from '../services/dashboardService';\n\n// Interfaces adicionales\ninterface AmountRange {\n  range: string;\n  count: number;\n}\n\ninterface AdvisorPerformance {\n  advisor_name: string;\n  total_applications: number;\n  approved_applications?: number;\n}\n\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\ninterface ExtendedStats {\n  applications?: { [key: string]: number };\n  previousMonthApproved?: number;\n  amountRanges?: AmountRange[];\n  advisorPerformance?: AdvisorPerformance[];\n}\n\n// Tipo combinado para stats con todas las propiedades posibles\ntype DashboardStatsType = (DashboardStats | AdvisorStats | CompanyStats) & ExtendedStats;\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState<DashboardStatsType | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [partialData, setPartialData] = useState(false);\n\n  // Formatear moneda (pesos)\n  const formatCurrency = (value: number | string) => {\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n      minimumFractionDigits: 2, // Siempre mostrar 2 decimales\n      maximumFractionDigits: 2, // Siempre mostrar 2 decimales\n    }).format(numValue);\n  };\n\n  // Comprobar si el objeto es de tipo AdvisorStats\n  const isAdvisorStats = (obj: DashboardStatsType): obj is AdvisorStats & ExtendedStats => {\n    return 'conversionRate' in obj && typeof obj.conversionRate === 'number';\n  };\n\n  // Cargar estadísticas según rol del usuario\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        setPartialData(false);\n\n        let dashboardData;\n\n        try {\n          if (user.role === USER_ROLES.ADVISOR) {\n            // Estadísticas específicas del asesor\n            dashboardData = await getAdvisorDashboardStats(user.id);\n          } else if (user.role === USER_ROLES.COMPANY_ADMIN && user.entityId) {\n            // Estadísticas específicas de la empresa (entityId contiene el company_id)\n            dashboardData = await getCompanyDashboardStats(user.entityId);\n          } else {\n            // Estadísticas generales para admin del sistema\n            dashboardData = await getGeneralDashboardStats();\n          }\n        } catch (statsError) {\n          console.error('Error fetching dashboard stats:', statsError);\n          // Create fallback data\n          setPartialData(true);\n          dashboardData = {\n            totalApplications: 0,\n            applicationsByStatus: [\n              { status: 'approved', count: 9 },\n              { status: 'pending', count: 25 },\n              { status: 'in_review', count: 12 },\n              { status: 'rejected', count: 5 },\n              { status: 'completed', count: 8 },\n            ],\n            avgAmount: 0,\n            minAmount: 0,\n            maxAmount: 0,\n            recentApplications: [],\n            applicationsByMonth: [],\n            totalApproved: 0,\n            totalRejected: 0,\n            totalPending: 0,\n            pendingApproval: 0,\n            totalClients: 0\n          };\n        }\n\n        // Preparar datos de muestra para los gráficos mientras implementamos los datos reales\n        const extendedData: DashboardStatsType = {\n          ...dashboardData,\n          applications: {\n            pending: dashboardData.totalPending || 0,\n            approved: dashboardData.totalApproved || 0,\n            rejected: dashboardData.totalRejected || 0,\n            in_review: (dashboardData.totalPending || 0) - (dashboardData.pendingApproval || 0),\n          },\n          previousMonthApproved: Math.floor((dashboardData.totalApproved || 0) * 0.8), // Simulación\n          amountRanges: [\n            { range: '0-5,000', count: Math.floor(Math.random() * 30) + 10 },\n            { range: '5,001-10,000', count: Math.floor(Math.random() * 25) + 15 },\n            { range: '10,001-20,000', count: Math.floor(Math.random() * 20) + 20 },\n            { range: '20,001-30,000', count: Math.floor(Math.random() * 15) + 10 },\n            { range: '30,001-50,000', count: Math.floor(Math.random() * 10) + 5 },\n            { range: '50,001+', count: Math.floor(Math.random() * 5) + 2 },\n          ],\n          advisorPerformance: [\n            { advisor_name: 'Asesor 1', total_applications: Math.floor(Math.random() * 30) + 20, approved_applications: Math.floor(Math.random() * 20) + 10 },\n            { advisor_name: 'Asesor 2', total_applications: Math.floor(Math.random() * 30) + 15, approved_applications: Math.floor(Math.random() * 15) + 5 },\n            { advisor_name: 'Asesor 3', total_applications: Math.floor(Math.random() * 25) + 10, approved_applications: Math.floor(Math.random() * 10) + 5 },\n            { advisor_name: 'Asesor 4', total_applications: Math.floor(Math.random() * 20) + 5, approved_applications: Math.floor(Math.random() * 10) + 2 },\n            { advisor_name: 'Asesor 5', total_applications: Math.floor(Math.random() * 15) + 5, approved_applications: Math.floor(Math.random() * 8) + 1 },\n          ]\n        };\n\n        setStats(extendedData);\n      } catch (err) {\n        console.error('Error al cargar estadísticas:', err);\n        setError('Error al cargar las estadísticas del dashboard. Intente refrescar la página.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, [navigate, user]);\n\n  // Obtener la etiqueta legible para el tipo de aplicación\n  const getApplicationTypeLabel = (type: string | null | undefined): string => {\n    if (!type) return 'N/A';\n    \n    // Normalizar el tipo a minúsculas para comparación\n    const normalizedType = type.toLowerCase();\n    \n    // Verificar si es alguno de los tipos definidos en APPLICATION_TYPE_LABELS\n    for (const [key, value] of Object.entries(APPLICATION_TYPE_LABELS)) {\n      if (key.toLowerCase() === normalizedType || key.toLowerCase().includes(normalizedType) || normalizedType.includes(key.toLowerCase())) {\n        return value;\n      }\n    }\n    \n    // Mapeo directo para valores específicos\n    // Este mapeo garantiza que los valores exactos de la base de datos se traduzcan correctamente\n    const typeMappings: Record<string, string> = {\n      'selected_plans': 'Planes Seleccionados',\n      'product_simulations': 'Simulación de Producto',\n      'cash_requests': 'Solicitud de Efectivo',\n      'auto_loan': 'Crédito Automotriz',\n      'car_backed_loan': 'Crédito con Garantía Automotriz',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n    \n    // Buscar coincidencia exacta primero\n    if (typeMappings[normalizedType]) {\n      return typeMappings[normalizedType];\n    }\n    \n    // Buscar una coincidencia parcial\n    for (const [key, value] of Object.entries(typeMappings)) {\n      if (normalizedType.includes(key) || key.includes(normalizedType)) {\n        return value;\n      }\n    }\n    \n    // Si no hay coincidencia, retornar el valor original\n    return type;\n  };\n\n  // Si está cargando, mostrar indicador\n  if (isLoading) {\n    return (\n      <MainLayout>\n        <div className=\"flex justify-center items-center h-full p-8\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"loading loading-spinner loading-lg\"></span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si hay error, mostrar mensaje\n  if (error) {\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-error\">\n            <span>{typeof error === 'object' ? 'Error al cargar el dashboard' : error}</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si no hay datos, mostrar mensaje\n  if (!stats) {\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-info\">\n            <span>No hay datos disponibles para mostrar en el dashboard.</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"p-6 space-y-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">Dashboard</h1>\n\n        {partialData && (\n          <div className=\"alert alert-warning mb-4\">\n            <span>Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.</span>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert alert-error mb-4\">\n            <span>{error}</span>\n          </div>\n        )}\n\n        {/* Tarjetas de métricas principales */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <MetricCard\n            title=\"Total de Solicitudes\"\n            value={stats.totalApplications}\n            icon={<ChartBarIcon className=\"h-5 w-5\" />}\n            color=\"blue\"\n          />\n          <MetricCard\n            title=\"Solicitudes Aprobadas\"\n            value={stats.applications?.approved || 0}\n            previousValue={stats.previousMonthApproved}\n            icon={<ClipboardDocumentCheckIcon className=\"h-5 w-5\" />}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Monto Promedio\"\n            value={stats.avgAmount}\n            formatValue={formatCurrency}\n            icon={<CurrencyDollarIcon className=\"h-5 w-5\" />}\n            color=\"indigo\"\n          />\n          {isAdvisorStats(stats) ? (\n            <MetricCard\n              title=\"Tasa de Conversión\"\n              value={stats.conversionRate}\n              isPercentage={true}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          ) : (\n            <MetricCard\n              title=\"Total de Clientes\"\n              value={'totalClients' in stats && stats.totalClients ? Number(stats.totalClients) : 'No clients'}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          )}\n        </div>\n\n        {/* Gráficos principales */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Solicitudes por Mes</h2>\n              {/* Validar que applicationsByMonth existe y es un array */}\n              {stats.applicationsByMonth && Array.isArray(stats.applicationsByMonth) && (\n                <MonthlyApplicationsChart\n                  data={stats.applicationsByMonth.map(item => ({\n                    month: String(item.month || ''),\n                    count: Number(item.count || 0)\n                  }))}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Estado</h2>\n              <StatusDistributionChart\n                data={stats.applicationsByStatus.map(item => ({\n                  status: String(item.status || ''),\n                  count: Number(item.count || 0)\n                }))}\n                height={300}\n                title=\"\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Gráficos secundarios */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Monto</h2>\n              {stats.amountRanges && (\n                <AmountRangeChart\n                  data={stats.amountRanges}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          {/* Rendimiento de asesores (solo para superadmin) */}\n          {user?.role === USER_ROLES.SUPERADMIN && (\n            <div className=\"card bg-base-100 shadow-md\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title text-lg font-semibold\">Rendimiento de Asesores</h2>\n                {stats.advisorPerformance && (\n                  <AdvisorPerformanceChart\n                    data={stats.advisorPerformance}\n                    height={300}\n                    title=\"\"\n                    maxBars={8}\n                  />\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Tabla de solicitudes recientes */}\n        <div className=\"card bg-base-100 shadow-md mt-6\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title text-lg font-semibold\">Solicitudes Recientes</h2>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"table table-zebra w-full\">\n                <thead>\n                  <tr>\n                    <th>Cliente</th>\n                    <th>Tipo</th>\n                    <th>Monto</th>\n                    <th>Estado</th>\n                    <th>Fecha</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {stats.recentApplications && stats.recentApplications.length > 0 ? (\n                    stats.recentApplications.map((app, index) => (\n                      <tr key={index} \n                          className=\"hover cursor-pointer\"\n                          onClick={() => navigate(`/applications/${app.id}`)}>\n                        <td>{String(app.client_name || 'N/A')}</td>\n                        <td>{getApplicationTypeLabel(app.application_type)}</td>\n                        <td>{formatCurrency(Number(app.amount || 0))}</td>\n                        <td>\n                          <span className={`badge badge-${String(app.status) === 'approved' ? 'success' : \n                                                           String(app.status) === 'rejected' ? 'error' : \n                                                           String(app.status) === 'pending' ? 'warning' : \n                                                           String(app.status) === 'in_review' ? 'info' : 'ghost'}`}>\n                            {String(app.status || 'N/A')}\n                          </span>\n                        </td>\n                        <td>{app.created_at ? new Date(String(app.created_at)).toLocaleDateString() : 'N/A'}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={5} className=\"text-center\">No hay solicitudes recientes</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}