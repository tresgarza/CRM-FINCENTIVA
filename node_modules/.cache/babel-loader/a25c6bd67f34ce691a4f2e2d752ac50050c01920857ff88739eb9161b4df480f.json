{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\n\n// Constantes para almacenamiento\nconst STORAGE_KEY_TOKEN = 'crm_token';\n\n// Valores de autenticación de Supabase\nconst SUPABASE_URL = process.env.REACT_APP_SUPABASE_URL || 'https://ydnygntfkrleiseuciwq.supabase.co';\nconst SUPABASE_ANON_KEY = process.env.REACT_APP_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlkbnlnbnRma3JsZWlzZXVjaXdxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk5OTI0MDYsImV4cCI6MjA1NTU2ODQwNn0.B-dH2Kptzz1oyM4ynno_GjlvjpxL-HbNKC_st4bgf0A';\n\n// Initialize the Supabase client\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\n// Service role key (más permisos que el anon key)\nconst SERVICE_ROLE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlkbnlnbnRma3JsZWlzZXVjaXdxIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczOTk5MjQwNiwiZXhwIjoyMDU1NTY4NDA2fQ.TwhEGW9DK4DTQQRquT6Z9UW8T8UjLX-hp9uKdRjWAhs';\n\n// Get a Supabase client with auth using JWT token or service role if needed\nexport const getAuthenticatedClient = () => {\n  const token = localStorage.getItem(STORAGE_KEY_TOKEN);\n  const userStr = localStorage.getItem('crm_user');\n  const user = userStr ? JSON.parse(userStr) : null;\n\n  // Si tenemos un token y un usuario, intentamos usar el token\n  if (token && user) {\n    console.log('Using authenticated client with JWT token');\n    return createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {\n      global: {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n    });\n  }\n\n  // Si hay un usuario pero no tenemos token, usamos service role (más permisos)\n  if (user) {\n    console.log('Using service role client for authenticated operations');\n    return createClient(SUPABASE_URL, SERVICE_ROLE_KEY);\n  }\n\n  // Fallback to the default client if no authentication\n  console.log('Using default anonymous client (not authenticated)');\n  return supabase;\n};\n\n// Get a Supabase client with service role key (for admin operations)\nexport const getServiceClient = () => {\n  console.log('Using service role client');\n  return createClient(SUPABASE_URL, SERVICE_ROLE_KEY);\n};\n\n// Export a method to get access to Supabase Storage\nexport const getStorage = () => {\n  // Usamos el cliente con rol de servicio para acceder al storage\n  // Esto permite crear buckets y gestionar el almacenamiento sin restricciones RLS\n  console.log('Using service role client for storage operations');\n  return getServiceClient().storage;\n};","map":{"version":3,"names":["createClient","STORAGE_KEY_TOKEN","SUPABASE_URL","process","env","REACT_APP_SUPABASE_URL","SUPABASE_ANON_KEY","REACT_APP_SUPABASE_ANON_KEY","supabase","SERVICE_ROLE_KEY","getAuthenticatedClient","token","localStorage","getItem","userStr","user","JSON","parse","console","log","global","headers","Authorization","getServiceClient","getStorage","storage"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient, SupabaseClient } from '@supabase/supabase-js';\n\n// Constantes para almacenamiento\nconst STORAGE_KEY_TOKEN = 'crm_token';\n\n// Valores de autenticación de Supabase\nconst SUPABASE_URL = process.env.REACT_APP_SUPABASE_URL || 'https://ydnygntfkrleiseuciwq.supabase.co';\nconst SUPABASE_ANON_KEY = process.env.REACT_APP_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlkbnlnbnRma3JsZWlzZXVjaXdxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk5OTI0MDYsImV4cCI6MjA1NTU2ODQwNn0.B-dH2Kptzz1oyM4ynno_GjlvjpxL-HbNKC_st4bgf0A';\n\n// Initialize the Supabase client\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\n// Service role key (más permisos que el anon key)\nconst SERVICE_ROLE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlkbnlnbnRma3JsZWlzZXVjaXdxIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczOTk5MjQwNiwiZXhwIjoyMDU1NTY4NDA2fQ.TwhEGW9DK4DTQQRquT6Z9UW8T8UjLX-hp9uKdRjWAhs';\n\n// Get a Supabase client with auth using JWT token or service role if needed\nexport const getAuthenticatedClient = (): SupabaseClient => {\n  const token = localStorage.getItem(STORAGE_KEY_TOKEN);\n  const userStr = localStorage.getItem('crm_user');\n  const user = userStr ? JSON.parse(userStr) : null;\n  \n  // Si tenemos un token y un usuario, intentamos usar el token\n  if (token && user) {\n    console.log('Using authenticated client with JWT token');\n    return createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {\n      global: {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n    });\n  }\n  \n  // Si hay un usuario pero no tenemos token, usamos service role (más permisos)\n  if (user) {\n    console.log('Using service role client for authenticated operations');\n    return createClient(SUPABASE_URL, SERVICE_ROLE_KEY);\n  }\n  \n  // Fallback to the default client if no authentication\n  console.log('Using default anonymous client (not authenticated)');\n  return supabase;\n};\n\n// Get a Supabase client with service role key (for admin operations)\nexport const getServiceClient = (): SupabaseClient => {\n  console.log('Using service role client');\n  return createClient(SUPABASE_URL, SERVICE_ROLE_KEY);\n};\n\n// Export a method to get access to Supabase Storage\nexport const getStorage = () => {\n  // Usamos el cliente con rol de servicio para acceder al storage\n  // Esto permite crear buckets y gestionar el almacenamiento sin restricciones RLS\n  console.log('Using service role client for storage operations');\n  return getServiceClient().storage;\n}; "],"mappings":"AAAA,SAASA,YAAY,QAAwB,uBAAuB;;AAEpE;AACA,MAAMC,iBAAiB,GAAG,WAAW;;AAErC;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,0CAA0C;AACrG,MAAMC,iBAAiB,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B,IAAI,kNAAkN;;AAEvR;AACA,OAAO,MAAMC,QAAQ,GAAGR,YAAY,CAACE,YAAY,EAAEI,iBAAiB,CAAC;;AAErE;AACA,MAAMG,gBAAgB,GAAG,6NAA6N;;AAEtP;AACA,OAAO,MAAMC,sBAAsB,GAAGA,CAAA,KAAsB;EAC1D,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACZ,iBAAiB,CAAC;EACrD,MAAMa,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAChD,MAAME,IAAI,GAAGD,OAAO,GAAGE,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,GAAG,IAAI;;EAEjD;EACA,IAAIH,KAAK,IAAII,IAAI,EAAE;IACjBG,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IACxD,OAAOnB,YAAY,CAACE,YAAY,EAAEI,iBAAiB,EAAE;MACnDc,MAAM,EAAE;QACNC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUX,KAAK;QAChC;MACF;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,IAAII,IAAI,EAAE;IACRG,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;IACrE,OAAOnB,YAAY,CAACE,YAAY,EAAEO,gBAAgB,CAAC;EACrD;;EAEA;EACAS,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;EACjE,OAAOX,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMe,gBAAgB,GAAGA,CAAA,KAAsB;EACpDL,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,OAAOnB,YAAY,CAACE,YAAY,EAAEO,gBAAgB,CAAC;AACrD,CAAC;;AAED;AACA,OAAO,MAAMe,UAAU,GAAGA,CAAA,KAAM;EAC9B;EACA;EACAN,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;EAC/D,OAAOI,gBAAgB,CAAC,CAAC,CAACE,OAAO;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}