{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/KanbanBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getApprovalStatus, approveByAdvisor, approveByCompany } from '../../services/applicationService';\nimport { APPLICATION_STATUS, STATUS_LABELS } from '../../utils/constants/statuses';\nimport { usePermissions } from '../../contexts/PermissionsContext';\nimport { useAuth } from '../../contexts/AuthContext';\n\n// Función para escapar cadenas de texto para SQL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction escapeSQLString(str) {\n  if (!str) return '';\n  return str.replace(/'/g, \"''\");\n}\n\n// Interfaz para el estado de aprobación\n\n// Crear un tipo para aplicaciones con su estado de aprobación\n\nconst KanbanBoard = ({\n  applications,\n  onStatusChange\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [appsWithApproval, setAppsWithApproval] = useState([]);\n  const [processingAppId, setProcessingAppId] = useState(null);\n  const {\n    shouldFilterByEntity,\n    getEntityFilter,\n    isAdvisor,\n    isCompanyAdmin\n  } = usePermissions();\n  const {\n    user\n  } = useAuth();\n  const dragItemRef = useRef(null);\n  const dragImageRef = useRef(null);\n  const draggedItemIndexRef = useRef(-1);\n  const draggedItemNewStatusRef = useRef('');\n  const [autoTransitionMessage, setAutoTransitionMessage] = useState(null);\n\n  // Primero, modificar useEffect para cargar aplicaciones con datos de aprobación\n  useEffect(() => {\n    const loadApprovalStatuses = async () => {\n      if (!applications || applications.length === 0) return;\n      setIsLoading(true);\n      try {\n        const appsWithStatus = await Promise.all(applications.map(async app => {\n          // Obtener el estado de aprobación real de la API\n          const status = await getApprovalStatus(app.id);\n\n          // Devolver la aplicación con su estado de aprobación\n          return {\n            ...app,\n            approvalStatus: status || {\n              approvedByAdvisor: false,\n              approvedByCompany: false\n            },\n            // Para administradores de empresa, agregar un campo que maneja su \"estado virtual\"\n            company_review_status: isCompanyAdmin() ?\n            // Si la aplicación está en revisión o aprobada por empresa, marcarla\n            app.status === APPLICATION_STATUS.IN_REVIEW || status && status.approvedByCompany : false\n          };\n        }));\n        setAppsWithApproval(appsWithStatus);\n      } catch (error) {\n        console.error(\"Error loading approval statuses:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadApprovalStatuses();\n  }, [applications]);\n\n  // Actualizar la lógica para nuevas aplicaciones para incluir todas las nuevas notificaciones\n  useEffect(() => {\n    // Verificar si hay aplicaciones que deberían estar en \"nuevo\" (recién creadas)\n    const newApplications = applications.filter(app => {\n      // Identificar aplicaciones recién creadas (menos de 24 horas)\n      const isNew = !app.status || app.status === 'pending' || app.status === 'solicitud';\n      const createdAt = new Date(app.created_at);\n      const now = new Date();\n      const hoursElapsed = (now.getTime() - createdAt.getTime()) / (1000 * 60 * 60);\n      const isRecent = hoursElapsed < 24;\n      return isRecent && (isNew || app.status === 'new');\n    });\n\n    // Si hay aplicaciones nuevas sin status o con status pendiente/solicitud, asignarles \"nuevo\"\n    if (newApplications.length > 0) {\n      console.log('Aplicaciones nuevas detectadas:', newApplications);\n      const updatedApps = [...appsWithApproval];\n      newApplications.forEach(newApp => {\n        const index = updatedApps.findIndex(app => app.id === newApp.id);\n        if (index !== -1 && (!updatedApps[index].status || updatedApps[index].status === 'pending' || updatedApps[index].status === 'solicitud')) {\n          updatedApps[index] = {\n            ...updatedApps[index],\n            status: APPLICATION_STATUS.NEW\n          };\n          console.log(`Aplicación ${newApp.id} movida a estado NUEVO`);\n        }\n      });\n      setAppsWithApproval(updatedApps);\n    }\n  }, [applications]); // Usar applications como dependencia en lugar de appsWithApproval\n\n  // Asegurar que nuevas aplicaciones se muestren inmediatamente\n  // añadiendo una función de comprobación en el useEffect principal\n  useEffect(() => {\n    const checkForNewApplications = async () => {\n      // Verificar que tenemos usuario y permisos\n      if (!(user !== null && user !== void 0 && user.id)) return;\n      try {\n        // Ejecutar esta comprobación solo si somos admin de empresa\n        if (isCompanyAdmin() && applications.length > 0) {\n          // Obtener la fecha de hace 24 horas\n          const oneDayAgo = new Date();\n          oneDayAgo.setHours(oneDayAgo.getHours() - 24);\n\n          // Buscar aplicaciones creadas en las últimas 24 horas\n          const recentApps = applications.filter(app => {\n            const createdAt = new Date(app.created_at);\n            return createdAt >= oneDayAgo;\n          });\n\n          // Si hay aplicaciones recientes, asegurarnos de que aparezcan en el tablero\n          if (recentApps.length > 0) {\n            console.log(`Encontradas ${recentApps.length} aplicaciones recientes`);\n\n            // Asegurar que todas estas aplicaciones están en nuestro estado local\n            // y que tienen el estado correcto (NEW si no tienen un estado específico)\n            const updatedApps = [...appsWithApproval];\n            let hasChanges = false;\n            recentApps.forEach(recentApp => {\n              const index = updatedApps.findIndex(app => app.id === recentApp.id);\n\n              // Si la aplicación no está en nuestro estado, agregarla\n              if (index === -1) {\n                console.log(`Agregando aplicación nueva ${recentApp.id} al estado`);\n                updatedApps.push({\n                  ...recentApp,\n                  status: recentApp.status || APPLICATION_STATUS.NEW,\n                  approvalStatus: {\n                    approvedByAdvisor: recentApp.approved_by_advisor || false,\n                    approvedByCompany: recentApp.approved_by_company || false\n                  }\n                });\n                hasChanges = true;\n              }\n              // Si no tiene estado o está en estado pendiente/solicitud, asignarle NEW\n              else if (!updatedApps[index].status || updatedApps[index].status === 'pending' || updatedApps[index].status === 'solicitud') {\n                console.log(`Actualizando estado de ${recentApp.id} a NUEVO`);\n                updatedApps[index] = {\n                  ...updatedApps[index],\n                  status: APPLICATION_STATUS.NEW\n                };\n                hasChanges = true;\n              }\n            });\n\n            // Actualizar el estado solo si hubo cambios\n            if (hasChanges) {\n              setAppsWithApproval(updatedApps);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error verificando nuevas aplicaciones:', error);\n      }\n    };\n\n    // Ejecutar la función de comprobación\n    checkForNewApplications();\n  }, [applications, user === null || user === void 0 ? void 0 : user.id, isCompanyAdmin]);\n\n  // Modificar la lógica para actualizar todas las aplicaciones con estado \"pending\" o \"solicitud\" a \"new\"\n  useEffect(() => {\n    // Si no hay aplicaciones, no hacer nada\n    if (!applications || applications.length === 0) return;\n    console.log('Verificando estado de aplicaciones:', applications.map(a => ({\n      id: a.id,\n      status: a.status\n    })));\n\n    // Actualizar solo las aplicaciones con estado específico a \"new\" sin afectar las demás\n    const updatedApps = [...appsWithApproval];\n    let hasChanges = false;\n    applications.forEach(app => {\n      const index = updatedApps.findIndex(a => a.id === app.id);\n      const needsUpdate = !app.status || app.status === 'pending' || app.status === 'solicitud';\n\n      // Solo actualizar si el estado necesita cambiar a \"new\"\n      if (index !== -1 && needsUpdate) {\n        console.log(`Actualizando estado de aplicación ${app.id} de \"${app.status}\" a \"new\"`);\n        updatedApps[index] = {\n          ...updatedApps[index],\n          status: APPLICATION_STATUS.NEW\n        };\n        hasChanges = true;\n      } else if (index === -1) {\n        // Si la aplicación no está en el array, agregarla con su estado original\n        // o \"new\" si no tiene estado o es pending/solicitud\n        const newStatus = needsUpdate ? APPLICATION_STATUS.NEW : app.status;\n        console.log(`Agregando aplicación ${app.id} con estado \"${newStatus}\"`);\n        updatedApps.push({\n          ...app,\n          status: newStatus,\n          approvalStatus: {\n            approvedByAdvisor: app.approved_by_advisor || false,\n            approvedByCompany: app.approved_by_company || false\n          }\n        });\n        hasChanges = true;\n      }\n      // Si existe y no necesita actualización, la dejamos como está\n    });\n    if (hasChanges) {\n      console.log('Actualizando aplicaciones:');\n      updatedApps.forEach(app => console.log(`- ${app.id}: ${app.status}`));\n      setAppsWithApproval(updatedApps);\n    }\n  }, [applications]);\n\n  // Organizar aplicaciones por estatus\n  const groupedApplications = useMemo(() => {\n    if (!applications || !user) return {};\n    console.log(\"Agrupando aplicaciones en el Kanban...\");\n    const statusGroups = {};\n\n    // Inicializar grupos de estatus\n    Object.values(APPLICATION_STATUS).forEach(status => {\n      statusGroups[status] = [];\n    });\n    if (isCompanyAdmin()) {\n      // Asegurar que trabajamos con aplicaciones que tienen el campo approvalStatus\n      applications.forEach(app => {\n        var _app$approvalStatus, _app$approvalStatus2;\n        // Verificar si la aplicación está aprobada por ambos (asesor y empresa)\n        const hasBothApprovals = ((_app$approvalStatus = app.approvalStatus) === null || _app$approvalStatus === void 0 ? void 0 : _app$approvalStatus.approvedByAdvisor) && ((_app$approvalStatus2 = app.approvalStatus) === null || _app$approvalStatus2 === void 0 ? void 0 : _app$approvalStatus2.approvedByCompany);\n\n        // Si está aprobada por ambos y no está en un estado final, mover a POR_DISPERSAR\n        const isTerminalStatus = [APPLICATION_STATUS.COMPLETED, APPLICATION_STATUS.EXPIRED, APPLICATION_STATUS.CANCELLED, APPLICATION_STATUS.REJECTED].includes(app.status);\n\n        // Mover automáticamente a Por Dispersar si tiene ambas aprobaciones y no está en estado terminal\n        if (hasBothApprovals && !isTerminalStatus && app.status !== APPLICATION_STATUS.POR_DISPERSAR) {\n          console.log(`Moviendo aplicación ${app.id} a Por Dispersar (tiene ambas aprobaciones)`);\n          statusGroups[APPLICATION_STATUS.POR_DISPERSAR].push(app);\n          return; // Skip para no agregarlo a otro grupo\n        }\n\n        // Asignar a grupo según su estado real\n        switch (app.status) {\n          case APPLICATION_STATUS.NEW:\n            statusGroups[APPLICATION_STATUS.NEW].push(app);\n            break;\n          case APPLICATION_STATUS.IN_REVIEW:\n            // Para empresa, si la app está en IN_REVIEW, se muestra ahí\n            statusGroups[APPLICATION_STATUS.IN_REVIEW].push(app);\n            break;\n          case APPLICATION_STATUS.APPROVED:\n            // Si tiene aprobación de ambos y no está en uno de los estados terminales, \n            // mostrar en POR_DISPERSAR (ya revisado arriba)\n            statusGroups[APPLICATION_STATUS.APPROVED].push(app);\n            break;\n          default:\n            // Cualquier otro estado se coloca en su columna correspondiente\n            statusGroups[app.status].push(app);\n            break;\n        }\n      });\n    } else if (isAdvisor()) {\n      // Asegurar que trabajamos con aplicaciones que tienen el campo approvalStatus\n      applications.forEach(app => {\n        var _app$approvalStatus3, _app$approvalStatus4;\n        // Verificar si la aplicación está aprobada por ambos (asesor y empresa)\n        const hasBothApprovals = ((_app$approvalStatus3 = app.approvalStatus) === null || _app$approvalStatus3 === void 0 ? void 0 : _app$approvalStatus3.approvedByAdvisor) && ((_app$approvalStatus4 = app.approvalStatus) === null || _app$approvalStatus4 === void 0 ? void 0 : _app$approvalStatus4.approvedByCompany);\n\n        // Si está aprobada por ambos y no está en un estado final, mover a POR_DISPERSAR\n        const isTerminalStatus = [APPLICATION_STATUS.COMPLETED, APPLICATION_STATUS.EXPIRED, APPLICATION_STATUS.CANCELLED, APPLICATION_STATUS.REJECTED].includes(app.status);\n\n        // Mover automáticamente a Por Dispersar si tiene ambas aprobaciones y no está en estado terminal\n        if (hasBothApprovals && !isTerminalStatus && app.status !== APPLICATION_STATUS.POR_DISPERSAR) {\n          console.log(`Moviendo aplicación ${app.id} a Por Dispersar (tiene ambas aprobaciones)`);\n          statusGroups[APPLICATION_STATUS.POR_DISPERSAR].push(app);\n          return; // Skip para no agregarlo a otro grupo\n        }\n\n        // Asignar a grupo según su estado\n        statusGroups[app.status].push(app);\n      });\n    }\n\n    // Debug: Verificar aplicaciones con ambas aprobaciones para detectar problemas\n    console.log(\"Aplicaciones con ambas aprobaciones:\");\n    applications.forEach(app => {\n      var _app$approvalStatus5, _app$approvalStatus6;\n      if ((_app$approvalStatus5 = app.approvalStatus) !== null && _app$approvalStatus5 !== void 0 && _app$approvalStatus5.approvedByAdvisor && (_app$approvalStatus6 = app.approvalStatus) !== null && _app$approvalStatus6 !== void 0 && _app$approvalStatus6.approvedByCompany) {\n        var _Object$entries$find;\n        console.log(`ID: ${app.id}, Status: ${app.status}, En columna: ${((_Object$entries$find = Object.entries(statusGroups).find(([_, apps]) => apps.some(a => a.id === app.id))) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[0]) || 'No encontrado'}`);\n      }\n    });\n    return statusGroups;\n  }, [applications, user]);\n\n  // Modificar la lógica de agrupamiento de aplicaciones para separar flujos\n  // Esta es la parte clave que separa completamente los flujos\n  const columns = useMemo(() => {\n    // Estados estándar del Kanban\n    const statusGroups = {\n      [APPLICATION_STATUS.NEW]: [],\n      [APPLICATION_STATUS.IN_REVIEW]: [],\n      [APPLICATION_STATUS.APPROVED]: [],\n      [APPLICATION_STATUS.POR_DISPERSAR]: [],\n      [APPLICATION_STATUS.COMPLETED]: [],\n      [APPLICATION_STATUS.EXPIRED]: [],\n      [APPLICATION_STATUS.REJECTED]: [],\n      [APPLICATION_STATUS.CANCELLED]: []\n    };\n\n    // Agrupar aplicaciones por estado\n    appsWithApproval.forEach(app => {\n      var _app$approvalStatus7, _app$approvalStatus8;\n      // CRUCIAL FIX: Siempre mover a Por Dispersar si tiene ambas aprobaciones\n      // y no está en un estado terminal (completado, expirado, cancelado, rechazado)\n      if ((_app$approvalStatus7 = app.approvalStatus) !== null && _app$approvalStatus7 !== void 0 && _app$approvalStatus7.approvedByAdvisor && (_app$approvalStatus8 = app.approvalStatus) !== null && _app$approvalStatus8 !== void 0 && _app$approvalStatus8.approvedByCompany) {\n        const finalStates = [APPLICATION_STATUS.COMPLETED, APPLICATION_STATUS.EXPIRED, APPLICATION_STATUS.CANCELLED, APPLICATION_STATUS.REJECTED];\n        if (!finalStates.includes(app.status)) {\n          console.log(`Aplicación ${app.id} con ambas aprobaciones: moviendo a Por Dispersar`);\n          statusGroups[APPLICATION_STATUS.POR_DISPERSAR].push(app);\n          return; // Importante: salir para no procesar más esta aplicación\n        }\n      }\n\n      // Lógica específica para administradores de empresa - flujo independiente\n      if (isCompanyAdmin()) {\n        var _app$approvalStatus9, _app$approvalStatus10, _app$approvalStatus11;\n        // Para admin de empresa, la lógica es:\n        // 1. Si está aprobada por empresa -> va a \"Aprobado por mi\"\n        if ((_app$approvalStatus9 = app.approvalStatus) !== null && _app$approvalStatus9 !== void 0 && _app$approvalStatus9.approvedByCompany && !((_app$approvalStatus10 = app.approvalStatus) !== null && _app$approvalStatus10 !== void 0 && _app$approvalStatus10.approvedByAdvisor)) {\n          statusGroups[APPLICATION_STATUS.APPROVED].push(app);\n        }\n        // 2. Si está en revisión por empresa -> va a \"En Revisión\"\n        else if (app.company_review_status) {\n          statusGroups[APPLICATION_STATUS.IN_REVIEW].push(app);\n        }\n        // 3. Si no está ni en revisión ni aprobada por empresa -> va a \"Nuevo\"\n        else if (app.status === APPLICATION_STATUS.NEW || app.status === APPLICATION_STATUS.PENDING || !app.company_review_status && !((_app$approvalStatus11 = app.approvalStatus) !== null && _app$approvalStatus11 !== void 0 && _app$approvalStatus11.approvedByCompany)) {\n          statusGroups[APPLICATION_STATUS.NEW].push(app);\n        }\n        // El resto va a su estado correspondiente\n        else if (app.status) {\n          // Todos los demás estados (por_dispersar, completado, etc.) van a su columna normal\n          statusGroups[app.status].push(app);\n        }\n      }\n      // Lógica para asesores - flujo normal basado en estado real\n      else if (isAdvisor()) {\n        if (app.status) {\n          // Usar el estado real de la aplicación para agruparla\n          statusGroups[app.status].push(app);\n        } else {\n          // Si no tiene estado, ponerla en \"Nuevo\"\n          statusGroups[APPLICATION_STATUS.NEW].push(app);\n        }\n      }\n      // Lógica para otros roles\n      else {\n        if (app.status) {\n          statusGroups[app.status].push(app);\n        } else {\n          // Si no tiene estado, ponerla en \"Nuevo\"\n          statusGroups[APPLICATION_STATUS.NEW].push(app);\n        }\n      }\n    });\n\n    // Definición de colores para cada columna\n    const columnDefinitions = [{\n      id: APPLICATION_STATUS.NEW,\n      title: 'Nuevo',\n      color: 'warning',\n      applications: statusGroups[APPLICATION_STATUS.NEW]\n    }, {\n      id: APPLICATION_STATUS.IN_REVIEW,\n      title: 'En Revisión',\n      color: 'info',\n      applications: statusGroups[APPLICATION_STATUS.IN_REVIEW]\n    }, {\n      id: APPLICATION_STATUS.APPROVED,\n      title: 'Aprobado por mi',\n      color: 'success',\n      applications: statusGroups[APPLICATION_STATUS.APPROVED]\n    }, {\n      id: APPLICATION_STATUS.POR_DISPERSAR,\n      title: 'Por Dispersar',\n      color: 'accent',\n      applications: statusGroups[APPLICATION_STATUS.POR_DISPERSAR]\n    }, {\n      id: APPLICATION_STATUS.COMPLETED,\n      title: 'Completado',\n      color: 'primary',\n      applications: statusGroups[APPLICATION_STATUS.COMPLETED]\n    }, {\n      id: APPLICATION_STATUS.EXPIRED,\n      title: 'Expirado',\n      color: 'error',\n      applications: statusGroups[APPLICATION_STATUS.EXPIRED]\n    }, {\n      id: APPLICATION_STATUS.REJECTED,\n      title: 'Rechazado',\n      color: 'error',\n      applications: statusGroups[APPLICATION_STATUS.REJECTED]\n    }, {\n      id: APPLICATION_STATUS.CANCELLED,\n      title: 'Cancelado',\n      color: 'neutral',\n      applications: statusGroups[APPLICATION_STATUS.CANCELLED]\n    }];\n    return columnDefinitions;\n  }, [appsWithApproval, isAdvisor, isCompanyAdmin]);\n\n  // Función para actualizar localmente el estado de aprobación de una aplicación\n  const updateLocalApprovalStatus = (applicationId, updates) => {\n    setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n      ...app,\n      approvalStatus: {\n        ...(app.approvalStatus || {\n          approvedByAdvisor: false,\n          approvedByCompany: false\n        }),\n        ...updates\n      }\n    } : app));\n  };\n  const handleDragStart = (e, application, idx) => {\n    // Guardar la aplicación que estamos arrastrando\n    draggedItemIndexRef.current = idx;\n\n    // Almacenar el elemento que estamos arrastrando para gestionar mejor el evento\n    dragItemRef.current = e.currentTarget;\n\n    // Establecer los datos que queremos transferir\n    e.dataTransfer.setData('text/plain', application.id);\n    e.dataTransfer.effectAllowed = 'move';\n\n    // Crear una copia visual para el arrastre\n    if (!dragImageRef.current) {\n      dragImageRef.current = e.currentTarget.cloneNode(true);\n      dragImageRef.current.style.position = 'absolute';\n      dragImageRef.current.style.top = '-1000px';\n      dragImageRef.current.style.opacity = '0.8';\n      dragImageRef.current.style.transform = 'scale(0.9)';\n      dragImageRef.current.style.width = `${e.currentTarget.offsetWidth}px`;\n      document.body.appendChild(dragImageRef.current);\n    }\n\n    // Establecer la imagen de arrastre\n    if (dragImageRef.current) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      e.dataTransfer.setDragImage(dragImageRef.current, rect.width / 2, 20);\n    }\n\n    // Añadir clase CSS para mostrar visualmente que el elemento está siendo arrastrado\n    if (e.currentTarget) {\n      e.currentTarget.classList.add('dragging');\n    }\n  };\n  const handleDragEnd = e => {\n    // Eliminar clase CSS de arrastre\n    if (dragItemRef.current) {\n      dragItemRef.current.classList.remove('dragging');\n      dragItemRef.current = null;\n    }\n    if (e.currentTarget) {\n      e.currentTarget.classList.remove('dragging');\n    }\n\n    // Eliminar el elemento clonado para el arrastre\n    if (dragImageRef.current) {\n      document.body.removeChild(dragImageRef.current);\n      dragImageRef.current = null;\n    }\n    draggedItemIndexRef.current = -1;\n    draggedItemNewStatusRef.current = '';\n  };\n  const handleDragOver = (e, columnStatus) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n\n    // Guardar el nuevo estado para la actualización optimista\n    if (draggedItemNewStatusRef.current !== columnStatus) {\n      draggedItemNewStatusRef.current = columnStatus;\n    }\n\n    // Añadir clase visual para indicar la columna destino\n    if (e.currentTarget.classList.contains('kanban-column')) {\n      document.querySelectorAll('.kanban-column').forEach(col => {\n        col.classList.remove('drag-over');\n      });\n      e.currentTarget.classList.add('drag-over');\n    }\n  };\n\n  // Función para determinar si una tarjeta puede ser arrastrada\n  const canDragCard = app => {\n    // No permitir arrastrar si la tarjeta está en procesamiento\n    if (app.id === processingAppId) {\n      return false;\n    }\n\n    // Asesores pueden mover cualquier tarjeta excepto las que están procesándose\n    if (isAdvisor()) {\n      var _app$approvalStatus12, _app$approvalStatus13;\n      // No permitir mover tarjetas con ambas aprobaciones o en estados finales\n      const restrictedStatuses = [APPLICATION_STATUS.POR_DISPERSAR, APPLICATION_STATUS.COMPLETED, APPLICATION_STATUS.EXPIRED, APPLICATION_STATUS.CANCELLED];\n      if (restrictedStatuses.includes(app.status)) {\n        return false;\n      }\n\n      // Si tiene ambas aprobaciones y está en estado aprobado, no se debería poder mover\n      if ((_app$approvalStatus12 = app.approvalStatus) !== null && _app$approvalStatus12 !== void 0 && _app$approvalStatus12.approvedByAdvisor && (_app$approvalStatus13 = app.approvalStatus) !== null && _app$approvalStatus13 !== void 0 && _app$approvalStatus13.approvedByCompany && app.status === APPLICATION_STATUS.APPROVED) {\n        return false;\n      }\n      return true;\n    }\n\n    // Admins de empresa solo pueden mover tarjetas entre Nuevo, En Revisión y Aprobado por mí\n    if (isCompanyAdmin()) {\n      var _app$approvalStatus14, _app$approvalStatus15;\n      // Estados que nunca pueden moverse por ningún rol\n      const restrictedStatuses = [APPLICATION_STATUS.POR_DISPERSAR, APPLICATION_STATUS.COMPLETED, APPLICATION_STATUS.EXPIRED, APPLICATION_STATUS.CANCELLED, APPLICATION_STATUS.REJECTED];\n\n      // No permitir mover tarjetas en estados restringidos\n      if (restrictedStatuses.includes(app.status)) {\n        return false;\n      }\n\n      // Si ya está aprobada por ambos, no se debería poder mover\n      if ((_app$approvalStatus14 = app.approvalStatus) !== null && _app$approvalStatus14 !== void 0 && _app$approvalStatus14.approvedByAdvisor && (_app$approvalStatus15 = app.approvalStatus) !== null && _app$approvalStatus15 !== void 0 && _app$approvalStatus15.approvedByCompany) {\n        return false;\n      }\n      return true;\n    }\n\n    // Para otros roles, no permitir arrastrar\n    return false;\n  };\n\n  // Modificar handleDrop para manejar correctamente el flujo independiente\n  const handleDrop = async (e, newStatus) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // Eliminar todas las clases de arrastre\n    document.querySelectorAll('.kanban-column').forEach(col => {\n      col.classList.remove('drag-over');\n    });\n\n    // Recuperar el ID de la aplicación\n    const applicationId = e.dataTransfer.getData('text/plain');\n    if (!applicationId || !(user !== null && user !== void 0 && user.id)) return;\n    const application = appsWithApproval.find(app => app.id === applicationId);\n    if (!application) return;\n    const oldStatus = application.status;\n\n    // No hacer nada si el estatus es el mismo\n    if (oldStatus === newStatus) return;\n    console.log(`Intentando mover tarjeta ${applicationId} de ${oldStatus} a ${newStatus}`);\n\n    // Establecer el ID de la aplicación que se está procesando\n    setProcessingAppId(applicationId);\n    try {\n      // Para administradores de empresa (FLUJO INDEPENDIENTE)\n      if (isCompanyAdmin()) {\n        // El admin de empresa solo puede mover tarjetas entre estos estados\n        const allowedTargetStates = [APPLICATION_STATUS.NEW, APPLICATION_STATUS.IN_REVIEW, APPLICATION_STATUS.APPROVED];\n\n        // Si intenta mover a un estado que no está permitido\n        if (!allowedTargetStates.includes(newStatus)) {\n          setErrorMessage(`No puedes mover solicitudes al estado \"${STATUS_LABELS[newStatus]}\". Solo puedes mover entre Nuevo, En Revisión y Aprobado por mí.`);\n          setProcessingAppId(null);\n          return;\n        }\n\n        // Estados que nunca pueden ser movidos por un admin de empresa\n        const restrictedStatuses = [APPLICATION_STATUS.POR_DISPERSAR, APPLICATION_STATUS.COMPLETED, APPLICATION_STATUS.EXPIRED, APPLICATION_STATUS.CANCELLED, APPLICATION_STATUS.REJECTED];\n\n        // Si la tarjeta está en un estado restringido, no permitir moverla\n        if (restrictedStatuses.includes(oldStatus)) {\n          setErrorMessage(`No puedes mover solicitudes que están en estado \"${STATUS_LABELS[oldStatus]}\".`);\n          setProcessingAppId(null);\n          return;\n        }\n\n        // Actualización optimista en UI para mejor fluidez\n        const updatedApps = [...appsWithApproval];\n        const appIndex = updatedApps.findIndex(app => app.id === applicationId);\n        if (appIndex !== -1) {\n          // Crear copia profunda para evitar referencias\n          const updatedApp = {\n            ...updatedApps[appIndex],\n            isMoving: true,\n            targetStatus: newStatus\n          };\n          if (newStatus === APPLICATION_STATUS.NEW) {\n            // Mover a Nuevo\n            updatedApp.company_review_status = false;\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || {\n                approvedByAdvisor: false,\n                approvedByCompany: false\n              }),\n              approvedByCompany: false\n            };\n          } else if (newStatus === APPLICATION_STATUS.IN_REVIEW) {\n            // Mover a En Revisión\n            updatedApp.company_review_status = true;\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || {\n                approvedByAdvisor: false,\n                approvedByCompany: false\n              }),\n              approvedByCompany: false\n            };\n          } else if (newStatus === APPLICATION_STATUS.APPROVED) {\n            // Mover a Aprobado por mí\n            updatedApp.company_review_status = true; // Se considera revisado si está aprobado\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || {\n                approvedByAdvisor: false,\n                approvedByCompany: false\n              }),\n              approvedByCompany: true\n            };\n\n            // Llamar a la API para aprobar por empresa\n            if (user !== null && user !== void 0 && user.entityId && application.company_id) {\n              try {\n                await approveByCompany(applicationId, \"Aprobado vía Kanban\", user.entityId, application.company_id, null).then(async () => {\n                  // Verificar si la aplicación ya está aprobada por el asesor\n                  const approvalStatus = await getApprovalStatus(applicationId);\n\n                  // Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\n                  if (approvalStatus !== null && approvalStatus !== void 0 && approvalStatus.approvedByAdvisor && approvalStatus !== null && approvalStatus !== void 0 && approvalStatus.approvedByCompany) {\n                    // Actualizar en memoria el estado de aprobación\n                    updatedApp.approvalStatus = {\n                      approvedByAdvisor: true,\n                      approvedByCompany: true\n                    };\n\n                    // Mostrar notificación de transición automática\n                    setAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n\n                    // Actualizar el estado objetivo para la animación\n                    updatedApp.targetStatus = APPLICATION_STATUS.POR_DISPERSAR;\n\n                    // Cambiar el estado a \"por_dispersar\" después de un breve retraso\n                    setTimeout(() => {\n                      if (onStatusChange) {\n                        onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                      }\n                      // Limpiar el mensaje después de mostrar\n                      setTimeout(() => setAutoTransitionMessage(null), 3000);\n                    }, 500);\n                  }\n                });\n              } catch (error) {\n                console.error(\"Error al aprobar por empresa:\", error);\n                setErrorMessage(`Error al aprobar: ${error.message}`);\n              }\n            }\n          }\n\n          // Actualizar la app en el estado\n          updatedApps[appIndex] = updatedApp;\n          setAppsWithApproval(updatedApps);\n\n          // Refrescar el estado de aprobación después de unos segundos para asegurar sincronización\n          setTimeout(async () => {\n            const refreshedStatus = await getApprovalStatus(applicationId);\n            if (refreshedStatus) {\n              updateLocalApprovalStatus(applicationId, {\n                approvedByAdvisor: refreshedStatus.approvedByAdvisor,\n                approvedByCompany: refreshedStatus.approvedByCompany\n              });\n\n              // Si tiene ambas aprobaciones, asegurar que se mueva a POR_DISPERSAR\n              if (refreshedStatus.approvedByAdvisor && refreshedStatus.approvedByCompany) {\n                if (onStatusChange) {\n                  onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                }\n              }\n            }\n            setProcessingAppId(null);\n          }, 1000);\n\n          // Quitar la marca de movimiento después de un breve retraso\n          setTimeout(() => {\n            setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n              ...app,\n              isMoving: false,\n              targetStatus: undefined\n            } : app));\n          }, 500);\n        }\n      }\n      // Para asesores (flujo normal)\n      else if (isAdvisor()) {\n        // Actualización optimista en UI\n        const updatedApps = [...appsWithApproval];\n        const appIndex = updatedApps.findIndex(app => app.id === applicationId);\n        if (appIndex !== -1) {\n          // Crear copia profunda para evitar referencias\n          const updatedApp = {\n            ...updatedApps[appIndex],\n            isMoving: true,\n            targetStatus: newStatus,\n            status: newStatus // actualizar el estado directamente\n          };\n\n          // Lógica para manejar aprobaciones de manera optimista\n          if (newStatus === APPLICATION_STATUS.APPROVED) {\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || {\n                approvedByAdvisor: false,\n                approvedByCompany: false\n              }),\n              approvedByAdvisor: true\n            };\n\n            // Llamar a la API para aprobar por asesor\n            if (user !== null && user !== void 0 && user.entityId) {\n              try {\n                await approveByAdvisor(applicationId, \"Aprobado vía Kanban\", user.entityId, null).then(async () => {\n                  // Verificar si la aplicación ya está aprobada por la empresa\n                  const approvalStatus = await getApprovalStatus(applicationId);\n\n                  // Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\n                  if (approvalStatus !== null && approvalStatus !== void 0 && approvalStatus.approvedByAdvisor && approvalStatus !== null && approvalStatus !== void 0 && approvalStatus.approvedByCompany) {\n                    // Actualizar en memoria el estado de aprobación\n                    updatedApp.approvalStatus = {\n                      approvedByAdvisor: true,\n                      approvedByCompany: true\n                    };\n\n                    // Mostrar notificación de transición automática\n                    setAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n\n                    // Actualizar el estado objetivo para la animación\n                    updatedApp.targetStatus = APPLICATION_STATUS.POR_DISPERSAR;\n\n                    // Cambiar el estado a \"por_dispersar\" después de un breve retraso\n                    setTimeout(() => {\n                      if (onStatusChange) {\n                        onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                      }\n                      // Limpiar el mensaje después de mostrar\n                      setTimeout(() => setAutoTransitionMessage(null), 3000);\n                    }, 500);\n                  }\n                });\n              } catch (error) {\n                console.error(\"Error al aprobar por asesor:\", error);\n                setErrorMessage(`Error al aprobar: ${error.message}`);\n              }\n            }\n          }\n          // Si el asesor mueve de \"aprobado\" a otro estado, quitar la aprobación del asesor\n          else if (oldStatus === APPLICATION_STATUS.APPROVED) {\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || {\n                approvedByAdvisor: false,\n                approvedByCompany: false\n              }),\n              approvedByAdvisor: false\n            };\n          }\n\n          // Actualizar la app en el estado\n          updatedApps[appIndex] = updatedApp;\n          setAppsWithApproval(updatedApps);\n\n          // Llamar a la API para actualizar el estado\n          if (onStatusChange) {\n            try {\n              await onStatusChange(application, newStatus);\n\n              // Refrescar el estado de aprobación después de unos segundos para asegurar sincronización\n              setTimeout(async () => {\n                const refreshedStatus = await getApprovalStatus(applicationId);\n                if (refreshedStatus) {\n                  updateLocalApprovalStatus(applicationId, {\n                    approvedByAdvisor: refreshedStatus.approvedByAdvisor,\n                    approvedByCompany: refreshedStatus.approvedByCompany\n                  });\n\n                  // Si tiene ambas aprobaciones, asegurar que se mueva a POR_DISPERSAR\n                  if (refreshedStatus.approvedByAdvisor && refreshedStatus.approvedByCompany) {\n                    if (onStatusChange) {\n                      onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                    }\n                  }\n                }\n                setProcessingAppId(null);\n              }, 1000);\n            } catch (error) {\n              console.error(\"Error updating status:\", error);\n              setErrorMessage(`Error al actualizar el estado: ${error.message}`);\n\n              // Revertir cambios en caso de error\n              setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n                ...app,\n                status: oldStatus,\n                isMoving: false,\n                targetStatus: undefined\n              } : app));\n              setProcessingAppId(null);\n            }\n          }\n\n          // Quitar la marca de movimiento después de un breve retraso\n          setTimeout(() => {\n            setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n              ...app,\n              isMoving: false,\n              targetStatus: undefined\n            } : app));\n          }, 500);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error in handleDrop:\", error);\n      setErrorMessage(`Error al actualizar el estado: ${error.message}`);\n      setProcessingAppId(null);\n    }\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN'\n    }).format(amount);\n  };\n\n  // Renderizar los indicadores de aprobación con mejor formato y legibilidad\n  const renderApprovalIndicators = app => {\n    if (!app.approvalStatus) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mt-1 space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip tooltip-top flex items-center\",\n        \"data-tip\": app.approvalStatus.approvedByAdvisor ? \"Aprobado por asesor\" : \"Pendiente de aprobación por asesor\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs mr-1\",\n          children: \"Asesor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${app.approvalStatus.approvedByAdvisor ? 'bg-success animate-pulse' : 'bg-warning'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip tooltip-top flex items-center\",\n        \"data-tip\": app.approvalStatus.approvedByCompany ? \"Aprobado por empresa\" : \"Pendiente de aprobación por empresa\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs mr-1\",\n          children: \"Empresa:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${app.approvalStatus.approvedByCompany ? 'bg-success animate-pulse' : 'bg-warning'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 9\n      }, this), app.approvalStatus.approvedByAdvisor && app.approvalStatus.approvedByCompany && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip tooltip-top ml-2\",\n        \"data-tip\": \"Aprobada por ambos\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge badge-success badge-sm text-xs px-2 py-1\",\n          children: \"Aprobado Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Mejorar el formato de las etiquetas de producto para mayor legibilidad\n  const getProductLabel = type => {\n    const labels = {\n      'selected_plans': 'Crédito a Plazos',\n      'product_simulations': 'Simulación',\n      'auto_loan': 'Crédito Auto',\n      'car_backed_loan': 'Crédito con Garantía',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n    return labels[type] || type;\n  };\n\n  // Función para obtener el color apropiado para la tarjeta según estado y aprobaciones\n  const getCardColor = app => {\n    const status = app.status || '';\n\n    // Colores específicos según el estado\n    switch (status.toLowerCase()) {\n      case APPLICATION_STATUS.REJECTED:\n        return 'border-error bg-red-50';\n      case APPLICATION_STATUS.APPROVED:\n        // Si está aprobado, verificar el estado de las aprobaciones\n        if (app.approvalStatus) {\n          const {\n            approvedByAdvisor,\n            approvedByCompany\n          } = app.approvalStatus;\n          if (approvedByAdvisor && approvedByCompany) {\n            return 'border-success bg-green-100'; // Aprobado por ambos\n          } else if (approvedByAdvisor) {\n            return 'border-success bg-green-50'; // Aprobado solo por asesor\n          } else if (approvedByCompany) {\n            return 'border-info bg-blue-50'; // Aprobado solo por empresa\n          }\n        }\n        return 'border-success bg-green-50';\n      case APPLICATION_STATUS.IN_REVIEW:\n        return 'border-info bg-blue-50';\n      case APPLICATION_STATUS.NEW:\n        return 'border-warning bg-yellow-50';\n      case APPLICATION_STATUS.PENDING:\n        return 'border-warning bg-amber-50';\n      case APPLICATION_STATUS.POR_DISPERSAR:\n        return 'border-accent bg-purple-50';\n      case APPLICATION_STATUS.COMPLETED:\n        return 'border-primary bg-indigo-50';\n      case APPLICATION_STATUS.EXPIRED:\n        return 'border-error bg-red-100';\n      case APPLICATION_STATUS.CANCELLED:\n        return 'border-neutral bg-gray-100';\n      default:\n        // Si el estado no coincide con ninguno de los anteriores, usar el color de la columna\n        return `border-${app.status || 'neutral'}`;\n    }\n  };\n\n  // Estilos personalizados para mostrar claramente cuáles tarjetas se pueden arrastrar\n  const customStyles = `\n    .custom-scrollbar::-webkit-scrollbar {\n      width: 8px;\n      height: 8px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-track {\n      background: #f1f1f1;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb {\n      background: #888;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n    \n    .kanban-card {\n      transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out, box-shadow 0.3s ease-in-out, border-color 0.3s ease;\n      touch-action: none;\n      user-select: none;\n      will-change: transform, opacity;\n    }\n    \n    .kanban-card-draggable {\n      cursor: grab !important;\n      position: relative;\n    }\n    \n    .kanban-card-draggable:hover {\n      transform: translateY(-4px);\n      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.15);\n      border-color: #a855f7;\n      z-index: 10;\n    }\n    \n    .kanban-card-draggable:active {\n      cursor: grabbing !important;\n    }\n    \n    /* Indicator for draggable cards */\n    .kanban-card-draggable::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 20px;\n      height: 20px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23666'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 11.5V14m0-2.5v-6a1.5 1.5 0 113 0m-3 6a1.5 1.5 0 00-3 0v2a7.5 7.5 0 0015 0v-5a1.5 1.5 0 013 0m-6-3V11m0-5.5v-1a1.5 1.5 0 013 0v1m0 0V11' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n      transition: opacity 0.2s ease;\n    }\n    \n    .kanban-card-draggable:hover::after {\n      opacity: 1;\n    }\n    \n    .kanban-card-locked {\n      position: relative;\n      cursor: not-allowed !important;\n      opacity: 0.8;\n    }\n    \n    .kanban-card-locked::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 20px;\n      height: 20px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23999'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n    }\n    \n    .kanban-card.dragging {\n      opacity: 0.8;\n      transform: scale(1.03);\n      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      z-index: 50;\n    }\n    \n    .kanban-column {\n      transition: all 0.2s ease;\n      border-radius: 0.75rem;\n      will-change: transform, background-color;\n    }\n    \n    .kanban-column.drag-over {\n      background-color: rgba(var(--b2, 217 217 217) / 0.5);\n      transform: scale(1.01);\n      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n      border: 2px dashed #a855f7 !important;\n    }\n\n    .kanban-container {\n      scroll-behavior: smooth;\n    }\n\n    @media (min-width: 768px) {\n      .kanban-card-draggable:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.15);\n      }\n    }\n    \n    /* Animaciones para cambios de estado */\n    @keyframes fadeIn {\n      0% { opacity: 0; }\n      100% { opacity: 1; }\n    }\n    \n    @keyframes slideIn {\n      0% { transform: translateY(10px); opacity: 0; }\n      100% { transform: translateY(0); opacity: 1; }\n    }\n    \n    @keyframes processingPulse {\n      0% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0.4); }\n      70% { box-shadow: 0 0 0 6px rgba(124, 58, 237, 0); }\n      100% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0); }\n    }\n    \n    .kanban-card {\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    .processing-toast {\n      position: fixed;\n      bottom: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    .auto-transition-toast {\n      position: fixed;\n      bottom: 70px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: #dcfce7;\n      border: 1px solid #86efac;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    /* Pop-up tooltip con instrucciones para arrastrar */\n    .drag-instructions {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      padding: 12px 16px;\n      z-index: 1000;\n      max-width: 300px;\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    /* Mejoras para vista mobile */\n    @media (max-width: 640px) {\n      .kanban-column {\n        min-height: 300px;\n      }\n    }\n  `;\n\n  // Función para obtener clases draggable\n  const getDraggableClasses = app => {\n    // Usar la función canDragCard que está definida en el ámbito superior\n    const isDraggable = canDragCard(app) && app.id !== processingAppId;\n    return isDraggable ? 'cursor-grab kanban-card-draggable' : 'cursor-not-allowed opacity-80 kanban-card-locked';\n  };\n\n  // Función para definir los tooltips con información clara y precisa\n  const getDragTooltip = app => {\n    var _app$approvalStatus16, _app$approvalStatus17;\n    if (app.id === processingAppId) {\n      return \"Esta tarjeta está siendo procesada\";\n    }\n\n    // Si la tarjeta se puede arrastrar, mostrar mensaje informativo\n    if (canDragCard(app)) {\n      return \"Arrastra para cambiar el estado\";\n    }\n\n    // Mensajes específicos para casos donde no se puede arrastrar\n    if ((_app$approvalStatus16 = app.approvalStatus) !== null && _app$approvalStatus16 !== void 0 && _app$approvalStatus16.approvedByAdvisor && (_app$approvalStatus17 = app.approvalStatus) !== null && _app$approvalStatus17 !== void 0 && _app$approvalStatus17.approvedByCompany) {\n      return \"Esta solicitud ya está completamente aprobada y no puede ser movida\";\n    }\n\n    // Mensajes específicos según el rol y estado\n    if (isCompanyAdmin()) {\n      if (app.status === APPLICATION_STATUS.REJECTED) {\n        return \"Las solicitudes rechazadas solo pueden ser movidas por asesores\";\n      } else if (app.status === APPLICATION_STATUS.POR_DISPERSAR) {\n        return \"Esta solicitud ya está lista para dispersión y no puede regresar a estados anteriores\";\n      } else if (app.status === APPLICATION_STATUS.COMPLETED) {\n        return \"Esta solicitud ya está completada y no puede cambiar de estado\";\n      } else if (app.status === APPLICATION_STATUS.EXPIRED) {\n        return \"Esta solicitud ha expirado y no puede cambiar de estado\";\n      } else if (app.status === APPLICATION_STATUS.CANCELLED) {\n        return \"Esta solicitud fue cancelada y no puede cambiar de estado\";\n      }\n    }\n    return \"No puedes mover esta tarjeta en este momento\";\n  };\n\n  // Utilidad para asegurar que las aplicaciones con ambas aprobaciones se muevan a POR_DISPERSAR\n  const ensureCorrectStatusForDualApprovals = useCallback(async () => {\n    if (!applications || !user || !onStatusChange) return;\n    console.log(\"Verificando aplicaciones con aprobación dual...\");\n\n    // Identificar aplicaciones que tienen ambas aprobaciones pero no están en POR_DISPERSAR\n    const needStatusUpdate = applications.filter(app => {\n      var _app$approvalStatus18, _app$approvalStatus19;\n      const hasBothApprovals = ((_app$approvalStatus18 = app.approvalStatus) === null || _app$approvalStatus18 === void 0 ? void 0 : _app$approvalStatus18.approvedByAdvisor) && ((_app$approvalStatus19 = app.approvalStatus) === null || _app$approvalStatus19 === void 0 ? void 0 : _app$approvalStatus19.approvedByCompany);\n      const isTerminalStatus = [APPLICATION_STATUS.COMPLETED, APPLICATION_STATUS.EXPIRED, APPLICATION_STATUS.CANCELLED, APPLICATION_STATUS.REJECTED].includes(app.status);\n      return hasBothApprovals && !isTerminalStatus && app.status !== APPLICATION_STATUS.POR_DISPERSAR;\n    });\n    if (needStatusUpdate.length > 0) {\n      console.log(`Se encontraron ${needStatusUpdate.length} aplicaciones que necesitan mover a POR_DISPERSAR:`);\n\n      // Actualizar el estado de cada aplicación\n      for (const app of needStatusUpdate) {\n        console.log(`Actualizando aplicación ${app.id} a POR_DISPERSAR (tiene ambas aprobaciones)`);\n        try {\n          await onStatusChange(app, APPLICATION_STATUS.POR_DISPERSAR);\n          // Mostrar notificación de transición automática\n          setAutoTransitionMessage(`La solicitud ${app.id} ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n        } catch (error) {\n          console.error(`Error al actualizar estado de aplicación ${app.id}:`, error);\n        }\n      }\n\n      // Limpiar mensaje después de un tiempo\n      setTimeout(() => setAutoTransitionMessage(null), 3000);\n    } else {\n      console.log(\"No se encontraron aplicaciones que necesiten actualización de estado\");\n    }\n  }, [applications, user, onStatusChange]);\n\n  // Verificar status cuando las aplicaciones cambian\n  useEffect(() => {\n    if ((applications === null || applications === void 0 ? void 0 : applications.length) > 0) {\n      ensureCorrectStatusForDualApprovals();\n    }\n  }, [applications, ensureCorrectStatusForDualApprovals]);\n  if (applications.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-base-200 p-6 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-medium text-center\",\n        children: \"No hay solicitudes para mostrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500 mt-2\",\n        children: \"No se encontraron solicitudes en el sistema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1254,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full overflow-x-auto custom-scrollbar relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: customStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1263,\n      columnNumber: 7\n    }, this), processingAppId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing-toast\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading loading-spinner loading-sm text-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium\",\n        children: \"Actualizando estado...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1267,\n      columnNumber: 9\n    }, this), autoTransitionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-transition-toast\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading loading-spinner loading-sm text-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium\",\n        children: autoTransitionMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1275,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 alert alert-error shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"stroke-current flex-shrink-0 h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: \"2\",\n            d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1285,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-none\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm\",\n          onClick: () => setErrorMessage(null),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1290,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 2xl:grid-cols-6 gap-4 pb-4 kanban-container p-4\",\n      style: {\n        minWidth: '1000px'\n      },\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bg-base-100 rounded-xl shadow-md border-t-4 border-${column.color} border-l border-r border-b flex flex-col h-full kanban-column`,\n        onDragOver: e => {\n          handleDragOver(e, column.id);\n        },\n        onDragLeave: e => {\n          e.currentTarget.classList.remove('drag-over');\n        },\n        onDrop: e => {\n          handleDrop(e, column.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-center py-3 px-4 font-bold rounded-t-lg flex items-center justify-between bg-${column.color} bg-opacity-10`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-${column.color} font-bold text-lg`,\n            children: column.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge badge-${column.color} badge-lg`,\n            children: column.applications.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 space-y-3 min-h-[500px] max-h-[calc(100vh-220px)] overflow-y-auto custom-scrollbar flex-grow\",\n          children: column.applications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center h-full opacity-50 border-2 border-dashed border-base-300 rounded-lg p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-12 w-12 mx-auto text-gray-400\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 1,\n                  d: \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1321,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1320,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-2\",\n                children: \"No hay solicitudes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1319,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1318,\n            columnNumber: 17\n          }, this) : column.applications.map((app, index) => {\n            const isCardDraggable = canDragCard(app) && app.id !== processingAppId;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-tip\": getDragTooltip(app),\n              className: `card shadow hover:shadow-lg transition-all ${getCardColor(app)} border-l-4 border-t border-r border-b hover:border-primary kanban-card relative ${app.id === processingAppId ? 'processing' : ''} ${app.isMoving ? 'opacity-90' : ''} ${getDraggableClasses(app)}`,\n              draggable: isCardDraggable,\n              onDragStart: isCardDraggable ? e => handleDragStart(e, app, index) : undefined,\n              onDragEnd: isCardDraggable ? handleDragEnd : undefined,\n              style: {\n                animation: app.id === processingAppId ? 'processingPulse 1.5s infinite' : ''\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-1 font-semibold\",\n                      children: app.client_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1344,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge badge-${column.color} badge-md text-xs px-2 py-1 whitespace-nowrap`,\n                      children: getProductLabel(app.application_type)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1345,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1343,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1342,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-600 mb-1 flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-4 w-4 mr-1 inline\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1355,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1354,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"truncate max-w-[180px] font-medium\",\n                      children: app.company_name || \"Sin empresa\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1357,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1353,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-4 w-4 mr-1 text-primary\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1365,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1364,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-base font-bold text-primary\",\n                      children: formatCurrency(app.requested_amount || 0)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1367,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1363,\n                    columnNumber: 25\n                  }, this), renderApprovalIndicators(app), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-actions justify-end mt-3\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/applications/${app.id}`,\n                      className: \"btn btn-sm btn-primary w-full\",\n                      children: \"Ver Detalle\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1376,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1375,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1351,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1341,\n                columnNumber: 21\n              }, this)\n            }, app.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1316,\n          columnNumber: 13\n        }, this)]\n      }, column.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1297,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1262,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"sBaOBEwsSL616TXUOgOHoKb1URI=\", false, function () {\n  return [usePermissions, useAuth];\n});\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","useCallback","Link","getApprovalStatus","approveByAdvisor","approveByCompany","APPLICATION_STATUS","STATUS_LABELS","usePermissions","useAuth","jsxDEV","_jsxDEV","escapeSQLString","str","replace","KanbanBoard","applications","onStatusChange","_s","isLoading","setIsLoading","errorMessage","setErrorMessage","appsWithApproval","setAppsWithApproval","processingAppId","setProcessingAppId","shouldFilterByEntity","getEntityFilter","isAdvisor","isCompanyAdmin","user","dragItemRef","dragImageRef","draggedItemIndexRef","draggedItemNewStatusRef","autoTransitionMessage","setAutoTransitionMessage","loadApprovalStatuses","length","appsWithStatus","Promise","all","map","app","status","id","approvalStatus","approvedByAdvisor","approvedByCompany","company_review_status","IN_REVIEW","error","console","newApplications","filter","isNew","createdAt","Date","created_at","now","hoursElapsed","getTime","isRecent","log","updatedApps","forEach","newApp","index","findIndex","NEW","checkForNewApplications","oneDayAgo","setHours","getHours","recentApps","hasChanges","recentApp","push","approved_by_advisor","approved_by_company","a","needsUpdate","newStatus","groupedApplications","statusGroups","Object","values","_app$approvalStatus","_app$approvalStatus2","hasBothApprovals","isTerminalStatus","COMPLETED","EXPIRED","CANCELLED","REJECTED","includes","POR_DISPERSAR","APPROVED","_app$approvalStatus3","_app$approvalStatus4","_app$approvalStatus5","_app$approvalStatus6","_Object$entries$find","entries","find","_","apps","some","columns","_app$approvalStatus7","_app$approvalStatus8","finalStates","_app$approvalStatus9","_app$approvalStatus10","_app$approvalStatus11","PENDING","columnDefinitions","title","color","updateLocalApprovalStatus","applicationId","updates","prev","handleDragStart","e","application","idx","current","currentTarget","dataTransfer","setData","effectAllowed","cloneNode","style","position","top","opacity","transform","width","offsetWidth","document","body","appendChild","rect","getBoundingClientRect","setDragImage","classList","add","handleDragEnd","remove","removeChild","handleDragOver","columnStatus","preventDefault","stopPropagation","dropEffect","contains","querySelectorAll","col","canDragCard","_app$approvalStatus12","_app$approvalStatus13","restrictedStatuses","_app$approvalStatus14","_app$approvalStatus15","handleDrop","getData","oldStatus","allowedTargetStates","appIndex","updatedApp","isMoving","targetStatus","entityId","company_id","then","setTimeout","message","refreshedStatus","undefined","formatCurrency","amount","Intl","NumberFormat","currency","format","renderApprovalIndicators","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getProductLabel","type","labels","getCardColor","toLowerCase","customStyles","getDraggableClasses","isDraggable","getDragTooltip","_app$approvalStatus16","_app$approvalStatus17","ensureCorrectStatusForDualApprovals","needStatusUpdate","_app$approvalStatus18","_app$approvalStatus19","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","minWidth","column","onDragOver","onDragLeave","onDrop","stroke","isCardDraggable","draggable","onDragStart","onDragEnd","animation","client_name","application_type","company_name","requested_amount","to","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Application, getApprovalStatus, approveByAdvisor, approveByCompany } from '../../services/applicationService';\nimport { STATUS_COLORS, APPLICATION_STATUS, STATUS_LABELS } from '../../utils/constants/statuses';\nimport { usePermissions } from '../../contexts/PermissionsContext';\nimport { useAuth } from '../../contexts/AuthContext';\n\n// Función para escapar cadenas de texto para SQL\nfunction escapeSQLString(str: string) {\n  if (!str) return '';\n  return str.replace(/'/g, \"''\");\n}\n\ninterface KanbanBoardProps {\n  applications: Application[];\n  onStatusChange?: (application: Application, newStatus: string) => Promise<void>;\n}\n\n// Interfaz para el estado de aprobación\ninterface ApprovalStatus {\n  approvedByAdvisor: boolean;\n  approvedByCompany: boolean;\n}\n\n// Crear un tipo para aplicaciones con su estado de aprobación\ntype ApplicationWithApproval = Application & {\n  approvalStatus?: ApprovalStatus;\n  isMoving?: boolean;\n  targetStatus?: string;\n  company_review_status?: boolean;\n};\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({ applications, onStatusChange }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  const [appsWithApproval, setAppsWithApproval] = useState<ApplicationWithApproval[]>([]);\n  const [processingAppId, setProcessingAppId] = useState<string | null>(null);\n  const { shouldFilterByEntity, getEntityFilter, isAdvisor, isCompanyAdmin } = usePermissions();\n  const { user } = useAuth();\n  const dragItemRef = useRef<HTMLDivElement | null>(null);\n  const dragImageRef = useRef<HTMLDivElement | null>(null);\n  const draggedItemIndexRef = useRef<number>(-1);\n  const draggedItemNewStatusRef = useRef<string>('');\n  const [autoTransitionMessage, setAutoTransitionMessage] = useState<string | null>(null);\n  \n  // Primero, modificar useEffect para cargar aplicaciones con datos de aprobación\n  useEffect(() => {\n    const loadApprovalStatuses = async () => {\n      if (!applications || applications.length === 0) return;\n      \n      setIsLoading(true);\n      try {\n        const appsWithStatus: ApplicationWithApproval[] = await Promise.all(\n          applications.map(async (app) => {\n            // Obtener el estado de aprobación real de la API\n            const status = await getApprovalStatus(app.id);\n            \n            // Devolver la aplicación con su estado de aprobación\n            return {\n              ...app,\n              approvalStatus: status || { approvedByAdvisor: false, approvedByCompany: false },\n              // Para administradores de empresa, agregar un campo que maneja su \"estado virtual\"\n              company_review_status: isCompanyAdmin() ? \n                // Si la aplicación está en revisión o aprobada por empresa, marcarla\n                (app.status === APPLICATION_STATUS.IN_REVIEW || \n                 (status && status.approvedByCompany)) : false\n            };\n          })\n        );\n        \n        setAppsWithApproval(appsWithStatus);\n      } catch (error) {\n        console.error(\"Error loading approval statuses:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    loadApprovalStatuses();\n  }, [applications]);\n  \n  // Actualizar la lógica para nuevas aplicaciones para incluir todas las nuevas notificaciones\n  useEffect(() => {\n    // Verificar si hay aplicaciones que deberían estar en \"nuevo\" (recién creadas)\n    const newApplications = applications.filter(app => {\n      // Identificar aplicaciones recién creadas (menos de 24 horas)\n      const isNew = !app.status || app.status === 'pending' || app.status === 'solicitud';\n      const createdAt = new Date(app.created_at);\n      const now = new Date();\n      const hoursElapsed = (now.getTime() - createdAt.getTime()) / (1000 * 60 * 60);\n      const isRecent = hoursElapsed < 24;\n      \n      return isRecent && (isNew || app.status === 'new');\n    });\n    \n    // Si hay aplicaciones nuevas sin status o con status pendiente/solicitud, asignarles \"nuevo\"\n    if (newApplications.length > 0) {\n      console.log('Aplicaciones nuevas detectadas:', newApplications);\n      const updatedApps = [...appsWithApproval];\n      newApplications.forEach(newApp => {\n        const index = updatedApps.findIndex(app => app.id === newApp.id);\n        if (index !== -1 && (!updatedApps[index].status || updatedApps[index].status === 'pending' || updatedApps[index].status === 'solicitud')) {\n          updatedApps[index] = {\n            ...updatedApps[index],\n            status: APPLICATION_STATUS.NEW\n          };\n          console.log(`Aplicación ${newApp.id} movida a estado NUEVO`);\n        }\n      });\n      \n      setAppsWithApproval(updatedApps);\n    }\n  }, [applications]); // Usar applications como dependencia en lugar de appsWithApproval\n\n  // Asegurar que nuevas aplicaciones se muestren inmediatamente\n  // añadiendo una función de comprobación en el useEffect principal\n  useEffect(() => {\n    const checkForNewApplications = async () => {\n      // Verificar que tenemos usuario y permisos\n      if (!user?.id) return;\n      \n      try {\n        // Ejecutar esta comprobación solo si somos admin de empresa\n        if (isCompanyAdmin() && applications.length > 0) {\n          // Obtener la fecha de hace 24 horas\n          const oneDayAgo = new Date();\n          oneDayAgo.setHours(oneDayAgo.getHours() - 24);\n          \n          // Buscar aplicaciones creadas en las últimas 24 horas\n          const recentApps = applications.filter(app => {\n            const createdAt = new Date(app.created_at);\n            return createdAt >= oneDayAgo;\n          });\n          \n          // Si hay aplicaciones recientes, asegurarnos de que aparezcan en el tablero\n          if (recentApps.length > 0) {\n            console.log(`Encontradas ${recentApps.length} aplicaciones recientes`);\n            \n            // Asegurar que todas estas aplicaciones están en nuestro estado local\n            // y que tienen el estado correcto (NEW si no tienen un estado específico)\n            const updatedApps = [...appsWithApproval];\n            let hasChanges = false;\n            \n            recentApps.forEach(recentApp => {\n              const index = updatedApps.findIndex(app => app.id === recentApp.id);\n              \n              // Si la aplicación no está en nuestro estado, agregarla\n              if (index === -1) {\n                console.log(`Agregando aplicación nueva ${recentApp.id} al estado`);\n                updatedApps.push({\n                  ...recentApp,\n                  status: recentApp.status || APPLICATION_STATUS.NEW,\n                  approvalStatus: {\n                    approvedByAdvisor: recentApp.approved_by_advisor || false,\n                    approvedByCompany: recentApp.approved_by_company || false\n                  }\n                });\n                hasChanges = true;\n              } \n              // Si no tiene estado o está en estado pendiente/solicitud, asignarle NEW\n              else if (!updatedApps[index].status || updatedApps[index].status === 'pending' || updatedApps[index].status === 'solicitud') {\n                console.log(`Actualizando estado de ${recentApp.id} a NUEVO`);\n                updatedApps[index] = {\n                  ...updatedApps[index],\n                  status: APPLICATION_STATUS.NEW\n                };\n                hasChanges = true;\n              }\n            });\n            \n            // Actualizar el estado solo si hubo cambios\n            if (hasChanges) {\n              setAppsWithApproval(updatedApps);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error verificando nuevas aplicaciones:', error);\n      }\n    };\n    \n    // Ejecutar la función de comprobación\n    checkForNewApplications();\n  }, [applications, user?.id, isCompanyAdmin]);\n  \n  // Modificar la lógica para actualizar todas las aplicaciones con estado \"pending\" o \"solicitud\" a \"new\"\n  useEffect(() => {\n    // Si no hay aplicaciones, no hacer nada\n    if (!applications || applications.length === 0) return;\n    \n    console.log('Verificando estado de aplicaciones:', applications.map(a => ({ id: a.id, status: a.status })));\n    \n    // Actualizar solo las aplicaciones con estado específico a \"new\" sin afectar las demás\n    const updatedApps = [...appsWithApproval];\n    let hasChanges = false;\n    \n    applications.forEach(app => {\n      const index = updatedApps.findIndex(a => a.id === app.id);\n      const needsUpdate = \n        !app.status || \n        app.status === 'pending' || \n        app.status === 'solicitud';\n      \n      // Solo actualizar si el estado necesita cambiar a \"new\"\n      if (index !== -1 && needsUpdate) {\n        console.log(`Actualizando estado de aplicación ${app.id} de \"${app.status}\" a \"new\"`);\n        updatedApps[index] = {\n          ...updatedApps[index],\n          status: APPLICATION_STATUS.NEW\n        };\n        hasChanges = true;\n      } else if (index === -1) {\n        // Si la aplicación no está en el array, agregarla con su estado original\n        // o \"new\" si no tiene estado o es pending/solicitud\n        const newStatus = needsUpdate ? APPLICATION_STATUS.NEW : (app.status as Application['status']);\n        console.log(`Agregando aplicación ${app.id} con estado \"${newStatus}\"`);\n        updatedApps.push({\n          ...app,\n          status: newStatus,\n          approvalStatus: {\n            approvedByAdvisor: app.approved_by_advisor || false,\n            approvedByCompany: app.approved_by_company || false\n          }\n        });\n        hasChanges = true;\n      }\n      // Si existe y no necesita actualización, la dejamos como está\n    });\n    \n    if (hasChanges) {\n      console.log('Actualizando aplicaciones:');\n      updatedApps.forEach(app => console.log(`- ${app.id}: ${app.status}`));\n      setAppsWithApproval(updatedApps);\n    }\n  }, [applications]);\n  \n  // Organizar aplicaciones por estatus\n  const groupedApplications = useMemo(() => {\n    if (!applications || !user) return {};\n\n    console.log(\"Agrupando aplicaciones en el Kanban...\");\n    \n    const statusGroups: Record<string, ApplicationWithApproval[]> = {};\n    \n    // Inicializar grupos de estatus\n    Object.values(APPLICATION_STATUS).forEach(status => {\n      statusGroups[status] = [];\n    });\n    \n    if (isCompanyAdmin()) {\n      // Asegurar que trabajamos con aplicaciones que tienen el campo approvalStatus\n      (applications as ApplicationWithApproval[]).forEach(app => {\n        // Verificar si la aplicación está aprobada por ambos (asesor y empresa)\n        const hasBothApprovals = app.approvalStatus?.approvedByAdvisor && app.approvalStatus?.approvedByCompany;\n        \n        // Si está aprobada por ambos y no está en un estado final, mover a POR_DISPERSAR\n        const isTerminalStatus = [\n          APPLICATION_STATUS.COMPLETED,\n          APPLICATION_STATUS.EXPIRED,\n          APPLICATION_STATUS.CANCELLED,\n          APPLICATION_STATUS.REJECTED\n        ].includes(app.status as APPLICATION_STATUS);\n        \n        // Mover automáticamente a Por Dispersar si tiene ambas aprobaciones y no está en estado terminal\n        if (hasBothApprovals && !isTerminalStatus && app.status !== APPLICATION_STATUS.POR_DISPERSAR) {\n          console.log(`Moviendo aplicación ${app.id} a Por Dispersar (tiene ambas aprobaciones)`);\n          statusGroups[APPLICATION_STATUS.POR_DISPERSAR].push(app);\n          return; // Skip para no agregarlo a otro grupo\n        }\n        \n        // Asignar a grupo según su estado real\n        switch (app.status) {\n          case APPLICATION_STATUS.NEW:\n            statusGroups[APPLICATION_STATUS.NEW].push(app);\n            break;\n          case APPLICATION_STATUS.IN_REVIEW:\n            // Para empresa, si la app está en IN_REVIEW, se muestra ahí\n            statusGroups[APPLICATION_STATUS.IN_REVIEW].push(app);\n            break;\n          case APPLICATION_STATUS.APPROVED:\n            // Si tiene aprobación de ambos y no está en uno de los estados terminales, \n            // mostrar en POR_DISPERSAR (ya revisado arriba)\n            statusGroups[APPLICATION_STATUS.APPROVED].push(app);\n            break;\n          default:\n            // Cualquier otro estado se coloca en su columna correspondiente\n            statusGroups[app.status].push(app);\n            break;\n        }\n      });\n    } else if (isAdvisor()) {\n      // Asegurar que trabajamos con aplicaciones que tienen el campo approvalStatus\n      (applications as ApplicationWithApproval[]).forEach(app => {\n        // Verificar si la aplicación está aprobada por ambos (asesor y empresa)\n        const hasBothApprovals = app.approvalStatus?.approvedByAdvisor && app.approvalStatus?.approvedByCompany;\n        \n        // Si está aprobada por ambos y no está en un estado final, mover a POR_DISPERSAR\n        const isTerminalStatus = [\n          APPLICATION_STATUS.COMPLETED,\n          APPLICATION_STATUS.EXPIRED,\n          APPLICATION_STATUS.CANCELLED,\n          APPLICATION_STATUS.REJECTED\n        ].includes(app.status as APPLICATION_STATUS);\n        \n        // Mover automáticamente a Por Dispersar si tiene ambas aprobaciones y no está en estado terminal\n        if (hasBothApprovals && !isTerminalStatus && app.status !== APPLICATION_STATUS.POR_DISPERSAR) {\n          console.log(`Moviendo aplicación ${app.id} a Por Dispersar (tiene ambas aprobaciones)`);\n          statusGroups[APPLICATION_STATUS.POR_DISPERSAR].push(app);\n          return; // Skip para no agregarlo a otro grupo\n        }\n        \n        // Asignar a grupo según su estado\n        statusGroups[app.status].push(app);\n      });\n    }\n    \n    // Debug: Verificar aplicaciones con ambas aprobaciones para detectar problemas\n    console.log(\"Aplicaciones con ambas aprobaciones:\");\n    (applications as ApplicationWithApproval[]).forEach(app => {\n      if (app.approvalStatus?.approvedByAdvisor && app.approvalStatus?.approvedByCompany) {\n        console.log(`ID: ${app.id}, Status: ${app.status}, En columna: ${\n          Object.entries(statusGroups)\n            .find(([_, apps]) => apps.some(a => a.id === app.id))?.[0] || 'No encontrado'\n        }`);\n      }\n    });\n    \n    return statusGroups;\n  }, [applications, user]);\n  \n  // Modificar la lógica de agrupamiento de aplicaciones para separar flujos\n  // Esta es la parte clave que separa completamente los flujos\n  const columns = useMemo(() => {\n    // Estados estándar del Kanban\n    const statusGroups: Record<string, ApplicationWithApproval[]> = {\n      [APPLICATION_STATUS.NEW]: [],\n      [APPLICATION_STATUS.IN_REVIEW]: [],\n      [APPLICATION_STATUS.APPROVED]: [],\n      [APPLICATION_STATUS.POR_DISPERSAR]: [],\n      [APPLICATION_STATUS.COMPLETED]: [],\n      [APPLICATION_STATUS.EXPIRED]: [],\n      [APPLICATION_STATUS.REJECTED]: [],\n      [APPLICATION_STATUS.CANCELLED]: []\n    };\n    \n    // Agrupar aplicaciones por estado\n    appsWithApproval.forEach(app => {\n      // CRUCIAL FIX: Siempre mover a Por Dispersar si tiene ambas aprobaciones\n      // y no está en un estado terminal (completado, expirado, cancelado, rechazado)\n      if (app.approvalStatus?.approvedByAdvisor && app.approvalStatus?.approvedByCompany) {\n        const finalStates = [\n          APPLICATION_STATUS.COMPLETED,\n          APPLICATION_STATUS.EXPIRED,\n          APPLICATION_STATUS.CANCELLED,\n          APPLICATION_STATUS.REJECTED\n        ];\n        \n        if (!finalStates.includes(app.status as APPLICATION_STATUS)) {\n          console.log(`Aplicación ${app.id} con ambas aprobaciones: moviendo a Por Dispersar`);\n          statusGroups[APPLICATION_STATUS.POR_DISPERSAR].push(app);\n          return; // Importante: salir para no procesar más esta aplicación\n        }\n      }\n      \n      // Lógica específica para administradores de empresa - flujo independiente\n      if (isCompanyAdmin()) {\n        // Para admin de empresa, la lógica es:\n        // 1. Si está aprobada por empresa -> va a \"Aprobado por mi\"\n        if (app.approvalStatus?.approvedByCompany && !app.approvalStatus?.approvedByAdvisor) {\n          statusGroups[APPLICATION_STATUS.APPROVED].push(app);\n        }\n        // 2. Si está en revisión por empresa -> va a \"En Revisión\"\n        else if (app.company_review_status) {\n          statusGroups[APPLICATION_STATUS.IN_REVIEW].push(app);\n        }\n        // 3. Si no está ni en revisión ni aprobada por empresa -> va a \"Nuevo\"\n        else if (app.status === APPLICATION_STATUS.NEW || \n                app.status === APPLICATION_STATUS.PENDING || \n                (!app.company_review_status && !app.approvalStatus?.approvedByCompany)) {\n          statusGroups[APPLICATION_STATUS.NEW].push(app);\n        }\n        // El resto va a su estado correspondiente\n        else if (app.status) {\n          // Todos los demás estados (por_dispersar, completado, etc.) van a su columna normal\n          statusGroups[app.status].push(app);\n        }\n      }\n      // Lógica para asesores - flujo normal basado en estado real\n      else if (isAdvisor()) {\n        if (app.status) {\n          // Usar el estado real de la aplicación para agruparla\n          statusGroups[app.status].push(app);\n      } else {\n          // Si no tiene estado, ponerla en \"Nuevo\"\n          statusGroups[APPLICATION_STATUS.NEW].push(app);\n        }\n      }\n      // Lógica para otros roles\n      else {\n        if (app.status) {\n          statusGroups[app.status].push(app);\n        } else {\n          // Si no tiene estado, ponerla en \"Nuevo\"\n          statusGroups[APPLICATION_STATUS.NEW].push(app);\n        }\n      }\n    });\n    \n    // Definición de colores para cada columna\n    const columnDefinitions = [\n      { id: APPLICATION_STATUS.NEW, title: 'Nuevo', color: 'warning', applications: statusGroups[APPLICATION_STATUS.NEW] },\n      { id: APPLICATION_STATUS.IN_REVIEW, title: 'En Revisión', color: 'info', applications: statusGroups[APPLICATION_STATUS.IN_REVIEW] },\n      { id: APPLICATION_STATUS.APPROVED, title: 'Aprobado por mi', color: 'success', applications: statusGroups[APPLICATION_STATUS.APPROVED] },\n      { id: APPLICATION_STATUS.POR_DISPERSAR, title: 'Por Dispersar', color: 'accent', applications: statusGroups[APPLICATION_STATUS.POR_DISPERSAR] },\n      { id: APPLICATION_STATUS.COMPLETED, title: 'Completado', color: 'primary', applications: statusGroups[APPLICATION_STATUS.COMPLETED] },\n      { id: APPLICATION_STATUS.EXPIRED, title: 'Expirado', color: 'error', applications: statusGroups[APPLICATION_STATUS.EXPIRED] },\n      { id: APPLICATION_STATUS.REJECTED, title: 'Rechazado', color: 'error', applications: statusGroups[APPLICATION_STATUS.REJECTED] },\n      { id: APPLICATION_STATUS.CANCELLED, title: 'Cancelado', color: 'neutral', applications: statusGroups[APPLICATION_STATUS.CANCELLED] }\n    ];\n    \n    return columnDefinitions;\n  }, [appsWithApproval, isAdvisor, isCompanyAdmin]);\n  \n  // Función para actualizar localmente el estado de aprobación de una aplicación\n  const updateLocalApprovalStatus = (applicationId: string, updates: Partial<{ approvedByAdvisor: boolean, approvedByCompany: boolean }>) => {\n    setAppsWithApproval(prev => \n      prev.map(app => \n        app.id === applicationId\n          ? {\n              ...app,\n              approvalStatus: {\n                ...(app.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n                ...updates\n              }\n            }\n          : app\n      )\n    );\n  };\n  \n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>, application: ApplicationWithApproval, idx: number) => {\n    // Guardar la aplicación que estamos arrastrando\n    draggedItemIndexRef.current = idx;\n    \n    // Almacenar el elemento que estamos arrastrando para gestionar mejor el evento\n    dragItemRef.current = e.currentTarget;\n    \n    // Establecer los datos que queremos transferir\n    e.dataTransfer.setData('text/plain', application.id);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // Crear una copia visual para el arrastre\n    if (!dragImageRef.current) {\n      dragImageRef.current = e.currentTarget.cloneNode(true) as HTMLDivElement;\n      dragImageRef.current.style.position = 'absolute';\n      dragImageRef.current.style.top = '-1000px';\n      dragImageRef.current.style.opacity = '0.8';\n      dragImageRef.current.style.transform = 'scale(0.9)';\n      dragImageRef.current.style.width = `${e.currentTarget.offsetWidth}px`;\n      document.body.appendChild(dragImageRef.current);\n    }\n    \n    // Establecer la imagen de arrastre\n    if (dragImageRef.current) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      e.dataTransfer.setDragImage(dragImageRef.current, rect.width / 2, 20);\n    }\n    \n    // Añadir clase CSS para mostrar visualmente que el elemento está siendo arrastrado\n    if (e.currentTarget) {\n      e.currentTarget.classList.add('dragging');\n    }\n  };\n  \n  const handleDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\n    // Eliminar clase CSS de arrastre\n    if (dragItemRef.current) {\n      dragItemRef.current.classList.remove('dragging');\n      dragItemRef.current = null;\n    }\n    \n    if (e.currentTarget) {\n      e.currentTarget.classList.remove('dragging');\n    }\n    \n    // Eliminar el elemento clonado para el arrastre\n    if (dragImageRef.current) {\n      document.body.removeChild(dragImageRef.current);\n      dragImageRef.current = null;\n    }\n    \n    draggedItemIndexRef.current = -1;\n    draggedItemNewStatusRef.current = '';\n  };\n  \n  const handleDragOver = (e: React.DragEvent, columnStatus: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n    \n    // Guardar el nuevo estado para la actualización optimista\n    if (draggedItemNewStatusRef.current !== columnStatus) {\n      draggedItemNewStatusRef.current = columnStatus;\n    }\n    \n    // Añadir clase visual para indicar la columna destino\n    if (e.currentTarget.classList.contains('kanban-column')) {\n      document.querySelectorAll('.kanban-column').forEach(col => {\n        col.classList.remove('drag-over');\n      });\n      e.currentTarget.classList.add('drag-over');\n    }\n  };\n  \n  // Función para determinar si una tarjeta puede ser arrastrada\n  const canDragCard = (app: ApplicationWithApproval): boolean => {\n    // No permitir arrastrar si la tarjeta está en procesamiento\n    if (app.id === processingAppId) {\n      return false;\n    }\n    \n    // Asesores pueden mover cualquier tarjeta excepto las que están procesándose\n    if (isAdvisor()) {\n      // No permitir mover tarjetas con ambas aprobaciones o en estados finales\n      const restrictedStatuses = [\n        APPLICATION_STATUS.POR_DISPERSAR,\n        APPLICATION_STATUS.COMPLETED,\n        APPLICATION_STATUS.EXPIRED,\n        APPLICATION_STATUS.CANCELLED\n      ];\n      \n      if (restrictedStatuses.includes(app.status as APPLICATION_STATUS)) {\n        return false;\n      }\n      \n      // Si tiene ambas aprobaciones y está en estado aprobado, no se debería poder mover\n      if (app.approvalStatus?.approvedByAdvisor && app.approvalStatus?.approvedByCompany && \n          app.status === APPLICATION_STATUS.APPROVED) {\n        return false;\n      }\n      \n      return true;\n    }\n    \n    // Admins de empresa solo pueden mover tarjetas entre Nuevo, En Revisión y Aprobado por mí\n    if (isCompanyAdmin()) {\n      // Estados que nunca pueden moverse por ningún rol\n      const restrictedStatuses = [\n        APPLICATION_STATUS.POR_DISPERSAR,\n        APPLICATION_STATUS.COMPLETED,\n        APPLICATION_STATUS.EXPIRED,\n        APPLICATION_STATUS.CANCELLED,\n        APPLICATION_STATUS.REJECTED\n      ];\n      \n      // No permitir mover tarjetas en estados restringidos\n      if (restrictedStatuses.includes(app.status as APPLICATION_STATUS)) {\n        return false;\n      }\n      \n      // Si ya está aprobada por ambos, no se debería poder mover\n      if (app.approvalStatus?.approvedByAdvisor && app.approvalStatus?.approvedByCompany) {\n        return false;\n      }\n      \n      return true;\n    }\n    \n    // Para otros roles, no permitir arrastrar\n    return false;\n  };\n  \n  // Modificar handleDrop para manejar correctamente el flujo independiente\n  const handleDrop = async (e: React.DragEvent<HTMLDivElement>, newStatus: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    // Eliminar todas las clases de arrastre\n    document.querySelectorAll('.kanban-column').forEach(col => {\n      col.classList.remove('drag-over');\n    });\n    \n    // Recuperar el ID de la aplicación\n    const applicationId = e.dataTransfer.getData('text/plain');\n    if (!applicationId || !user?.id) return;\n    \n    const application = appsWithApproval.find(app => app.id === applicationId);\n    if (!application) return;\n    \n    const oldStatus = application.status;\n    \n    // No hacer nada si el estatus es el mismo\n    if (oldStatus === newStatus) return;\n    \n    console.log(`Intentando mover tarjeta ${applicationId} de ${oldStatus} a ${newStatus}`);\n    \n      // Establecer el ID de la aplicación que se está procesando\n      setProcessingAppId(applicationId);\n      \n    try {\n      // Para administradores de empresa (FLUJO INDEPENDIENTE)\n      if (isCompanyAdmin()) {\n        // El admin de empresa solo puede mover tarjetas entre estos estados\n        const allowedTargetStates = [\n          APPLICATION_STATUS.NEW,\n          APPLICATION_STATUS.IN_REVIEW,\n          APPLICATION_STATUS.APPROVED\n        ];\n        \n        // Si intenta mover a un estado que no está permitido\n        if (!allowedTargetStates.includes(newStatus as APPLICATION_STATUS)) {\n          setErrorMessage(`No puedes mover solicitudes al estado \"${STATUS_LABELS[newStatus as keyof typeof STATUS_LABELS]}\". Solo puedes mover entre Nuevo, En Revisión y Aprobado por mí.`);\n          setProcessingAppId(null);\n          return;\n        }\n        \n        // Estados que nunca pueden ser movidos por un admin de empresa\n        const restrictedStatuses = [\n          APPLICATION_STATUS.POR_DISPERSAR,\n          APPLICATION_STATUS.COMPLETED,\n          APPLICATION_STATUS.EXPIRED,\n          APPLICATION_STATUS.CANCELLED,\n          APPLICATION_STATUS.REJECTED\n        ];\n        \n        // Si la tarjeta está en un estado restringido, no permitir moverla\n        if (restrictedStatuses.includes(oldStatus as APPLICATION_STATUS)) {\n          setErrorMessage(`No puedes mover solicitudes que están en estado \"${STATUS_LABELS[oldStatus as keyof typeof STATUS_LABELS]}\".`);\n          setProcessingAppId(null);\n          return;\n        }\n        \n        // Actualización optimista en UI para mejor fluidez\n      const updatedApps = [...appsWithApproval];\n      const appIndex = updatedApps.findIndex(app => app.id === applicationId);\n      \n      if (appIndex !== -1) {\n          // Crear copia profunda para evitar referencias\n        const updatedApp = { \n          ...updatedApps[appIndex], \n          isMoving: true,\n          targetStatus: newStatus \n        };\n        \n          if (newStatus === APPLICATION_STATUS.NEW) {\n            // Mover a Nuevo\n            updatedApp.company_review_status = false;\n          updatedApp.approvalStatus = {\n            ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n              approvedByCompany: false\n            };\n          } \n          else if (newStatus === APPLICATION_STATUS.IN_REVIEW) {\n            // Mover a En Revisión\n            updatedApp.company_review_status = true;\n          updatedApp.approvalStatus = {\n            ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n              approvedByCompany: false\n            };\n          } \n          else if (newStatus === APPLICATION_STATUS.APPROVED) {\n            // Mover a Aprobado por mí\n            updatedApp.company_review_status = true; // Se considera revisado si está aprobado\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n              approvedByCompany: true\n            };\n            \n            // Llamar a la API para aprobar por empresa\n            if (user?.entityId && application.company_id) {\n              try {\n                await approveByCompany(\n                  applicationId, \n                  \"Aprobado vía Kanban\", \n                  user.entityId, \n                  application.company_id, \n                  null\n                ).then(async () => {\n                  // Verificar si la aplicación ya está aprobada por el asesor\n                  const approvalStatus = await getApprovalStatus(applicationId);\n                  \n                  // Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\n                  if (approvalStatus?.approvedByAdvisor && approvalStatus?.approvedByCompany) {\n                    // Actualizar en memoria el estado de aprobación\n            updatedApp.approvalStatus = {\n                      approvedByAdvisor: true,\n                      approvedByCompany: true\n                    };\n\n                    // Mostrar notificación de transición automática\n                    setAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n                    \n                    // Actualizar el estado objetivo para la animación\n                    updatedApp.targetStatus = APPLICATION_STATUS.POR_DISPERSAR;\n                    \n                    // Cambiar el estado a \"por_dispersar\" después de un breve retraso\n                    setTimeout(() => {\n                      if (onStatusChange) {\n                        onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                      }\n                      // Limpiar el mensaje después de mostrar\n                      setTimeout(() => setAutoTransitionMessage(null), 3000);\n                    }, 500);\n                  }\n                });\n              } catch (error) {\n                console.error(\"Error al aprobar por empresa:\", error);\n                setErrorMessage(`Error al aprobar: ${(error as Error).message}`);\n              }\n            }\n          }\n          \n          // Actualizar la app en el estado\n        updatedApps[appIndex] = updatedApp;\n        setAppsWithApproval(updatedApps);\n          \n          // Refrescar el estado de aprobación después de unos segundos para asegurar sincronización\n          setTimeout(async () => {\n            const refreshedStatus = await getApprovalStatus(applicationId);\n            if (refreshedStatus) {\n              updateLocalApprovalStatus(applicationId, {\n                approvedByAdvisor: refreshedStatus.approvedByAdvisor,\n                approvedByCompany: refreshedStatus.approvedByCompany\n              });\n              \n              // Si tiene ambas aprobaciones, asegurar que se mueva a POR_DISPERSAR\n              if (refreshedStatus.approvedByAdvisor && refreshedStatus.approvedByCompany) {\n                if (onStatusChange) {\n                  onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                }\n              }\n            }\n            setProcessingAppId(null);\n          }, 1000);\n          \n          // Quitar la marca de movimiento después de un breve retraso\n          setTimeout(() => {\n            setAppsWithApproval(prev => \n              prev.map(app => \n                app.id === applicationId\n                  ? { ...app, isMoving: false, targetStatus: undefined }\n                  : app\n              )\n            );\n          }, 500);\n        }\n      }\n      // Para asesores (flujo normal)\n      else if (isAdvisor()) {\n        // Actualización optimista en UI\n        const updatedApps = [...appsWithApproval];\n        const appIndex = updatedApps.findIndex(app => app.id === applicationId);\n        \n        if (appIndex !== -1) {\n          // Crear copia profunda para evitar referencias\n          const updatedApp = { \n            ...updatedApps[appIndex], \n            isMoving: true, \n            targetStatus: newStatus, \n            status: newStatus as Application['status'] // actualizar el estado directamente\n          };\n          \n          // Lógica para manejar aprobaciones de manera optimista\n          if (newStatus === APPLICATION_STATUS.APPROVED) {\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n              approvedByAdvisor: true\n            };\n            \n            // Llamar a la API para aprobar por asesor\n            if (user?.entityId) {\n              try {\n                await approveByAdvisor(\n            applicationId, \n            \"Aprobado vía Kanban\", \n            user.entityId, \n                  null\n                ).then(async () => {\n                  // Verificar si la aplicación ya está aprobada por la empresa\n                  const approvalStatus = await getApprovalStatus(applicationId);\n                  \n                  // Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\n                  if (approvalStatus?.approvedByAdvisor && approvalStatus?.approvedByCompany) {\n                    // Actualizar en memoria el estado de aprobación\n                    updatedApp.approvalStatus = {\n                      approvedByAdvisor: true,\n                      approvedByCompany: true\n                    };\n                    \n                    // Mostrar notificación de transición automática\n                    setAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n                    \n                    // Actualizar el estado objetivo para la animación\n                    updatedApp.targetStatus = APPLICATION_STATUS.POR_DISPERSAR;\n                    \n                    // Cambiar el estado a \"por_dispersar\" después de un breve retraso\n                    setTimeout(() => {\n                      if (onStatusChange) {\n                        onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                      }\n                      // Limpiar el mensaje después de mostrar\n                      setTimeout(() => setAutoTransitionMessage(null), 3000);\n                    }, 500);\n                  }\n                });\n              } catch (error) {\n                console.error(\"Error al aprobar por asesor:\", error);\n                setErrorMessage(`Error al aprobar: ${(error as Error).message}`);\n              }\n            }\n          } \n          // Si el asesor mueve de \"aprobado\" a otro estado, quitar la aprobación del asesor\n          else if (oldStatus === APPLICATION_STATUS.APPROVED) {\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n              approvedByAdvisor: false\n            };\n          }\n          \n          // Actualizar la app en el estado\n          updatedApps[appIndex] = updatedApp;\n          setAppsWithApproval(updatedApps);\n          \n          // Llamar a la API para actualizar el estado\n          if (onStatusChange) {\n            try {\n              await onStatusChange(application, newStatus);\n              \n              // Refrescar el estado de aprobación después de unos segundos para asegurar sincronización\n              setTimeout(async () => {\n                const refreshedStatus = await getApprovalStatus(applicationId);\n                if (refreshedStatus) {\n                  updateLocalApprovalStatus(applicationId, {\n                    approvedByAdvisor: refreshedStatus.approvedByAdvisor,\n                    approvedByCompany: refreshedStatus.approvedByCompany\n                  });\n                  \n                  // Si tiene ambas aprobaciones, asegurar que se mueva a POR_DISPERSAR\n                  if (refreshedStatus.approvedByAdvisor && refreshedStatus.approvedByCompany) {\n                    if (onStatusChange) {\n                      onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                    }\n                  }\n                }\n                setProcessingAppId(null);\n              }, 1000);\n              \n            } catch (error) {\n          console.error(\"Error updating status:\", error);\n              setErrorMessage(`Error al actualizar el estado: ${(error as Error).message}`);\n          \n              // Revertir cambios en caso de error\n          setAppsWithApproval(prev => \n            prev.map(app => \n              app.id === applicationId\n                    ? { ...app, status: oldStatus as Application['status'], isMoving: false, targetStatus: undefined }\n                : app\n            )\n          );\n          setProcessingAppId(null);\n        }\n          }\n          \n          // Quitar la marca de movimiento después de un breve retraso\n          setTimeout(() => {\n      setAppsWithApproval(prev => \n        prev.map(app => \n          app.id === applicationId\n                  ? { ...app, isMoving: false, targetStatus: undefined }\n            : app\n        )\n      );\n          }, 500);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error in handleDrop:\", error);\n      setErrorMessage(`Error al actualizar el estado: ${(error as Error).message}`);\n      setProcessingAppId(null);\n    }\n  };\n  \n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n    }).format(amount);\n  };\n  \n  // Renderizar los indicadores de aprobación con mejor formato y legibilidad\n  const renderApprovalIndicators = (app: ApplicationWithApproval) => {\n    if (!app.approvalStatus) return null;\n    \n    return (\n      <div className=\"flex items-center mt-1 space-x-2\">\n        <div className=\"tooltip tooltip-top flex items-center\" data-tip={app.approvalStatus.approvedByAdvisor ? \"Aprobado por asesor\" : \"Pendiente de aprobación por asesor\"}>\n          <span className=\"text-xs mr-1\">Asesor:</span>\n          <div className={`w-3 h-3 rounded-full ${app.approvalStatus.approvedByAdvisor ? 'bg-success animate-pulse' : 'bg-warning'}`}></div>\n        </div>\n        <div className=\"tooltip tooltip-top flex items-center\" data-tip={app.approvalStatus.approvedByCompany ? \"Aprobado por empresa\" : \"Pendiente de aprobación por empresa\"}>\n          <span className=\"text-xs mr-1\">Empresa:</span>\n          <div className={`w-3 h-3 rounded-full ${app.approvalStatus.approvedByCompany ? 'bg-success animate-pulse' : 'bg-warning'}`}></div>\n        </div>\n        \n        {/* Indicador de doble aprobación */}\n        {app.approvalStatus.approvedByAdvisor && app.approvalStatus.approvedByCompany && (\n          <div className=\"tooltip tooltip-top ml-2\" data-tip=\"Aprobada por ambos\">\n            <div className=\"badge badge-success badge-sm text-xs px-2 py-1\">Aprobado Total</div>\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  // Mejorar el formato de las etiquetas de producto para mayor legibilidad\n  const getProductLabel = (type: string) => {\n    const labels: Record<string, string> = {\n      'selected_plans': 'Crédito a Plazos',\n      'product_simulations': 'Simulación',\n      'auto_loan': 'Crédito Auto',\n      'car_backed_loan': 'Crédito con Garantía',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n    \n    return labels[type] || type;\n  };\n  \n  // Función para obtener el color apropiado para la tarjeta según estado y aprobaciones\n  const getCardColor = (app: ApplicationWithApproval) => {\n    const status = app.status || '';\n    \n    // Colores específicos según el estado\n    switch (status.toLowerCase()) {\n      case APPLICATION_STATUS.REJECTED:\n        return 'border-error bg-red-50';\n      case APPLICATION_STATUS.APPROVED:\n        // Si está aprobado, verificar el estado de las aprobaciones\n        if (app.approvalStatus) {\n          const { approvedByAdvisor, approvedByCompany } = app.approvalStatus;\n          if (approvedByAdvisor && approvedByCompany) {\n            return 'border-success bg-green-100'; // Aprobado por ambos\n          } else if (approvedByAdvisor) {\n            return 'border-success bg-green-50'; // Aprobado solo por asesor\n          } else if (approvedByCompany) {\n            return 'border-info bg-blue-50'; // Aprobado solo por empresa\n          }\n        }\n        return 'border-success bg-green-50';\n      case APPLICATION_STATUS.IN_REVIEW:\n        return 'border-info bg-blue-50';\n      case APPLICATION_STATUS.NEW:\n        return 'border-warning bg-yellow-50';\n      case APPLICATION_STATUS.PENDING:\n        return 'border-warning bg-amber-50';\n      case APPLICATION_STATUS.POR_DISPERSAR:\n        return 'border-accent bg-purple-50';\n      case APPLICATION_STATUS.COMPLETED:\n        return 'border-primary bg-indigo-50';\n      case APPLICATION_STATUS.EXPIRED:\n        return 'border-error bg-red-100';\n      case APPLICATION_STATUS.CANCELLED:\n        return 'border-neutral bg-gray-100';\n      default:\n        // Si el estado no coincide con ninguno de los anteriores, usar el color de la columna\n        return `border-${app.status || 'neutral'}`;\n    }\n  };\n  \n  // Estilos personalizados para mostrar claramente cuáles tarjetas se pueden arrastrar\n  const customStyles = `\n    .custom-scrollbar::-webkit-scrollbar {\n      width: 8px;\n      height: 8px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-track {\n      background: #f1f1f1;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb {\n      background: #888;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n    \n    .kanban-card {\n      transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out, box-shadow 0.3s ease-in-out, border-color 0.3s ease;\n      touch-action: none;\n      user-select: none;\n      will-change: transform, opacity;\n    }\n    \n    .kanban-card-draggable {\n      cursor: grab !important;\n      position: relative;\n    }\n    \n    .kanban-card-draggable:hover {\n      transform: translateY(-4px);\n      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.15);\n      border-color: #a855f7;\n      z-index: 10;\n    }\n    \n    .kanban-card-draggable:active {\n      cursor: grabbing !important;\n    }\n    \n    /* Indicator for draggable cards */\n    .kanban-card-draggable::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 20px;\n      height: 20px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23666'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 11.5V14m0-2.5v-6a1.5 1.5 0 113 0m-3 6a1.5 1.5 0 00-3 0v2a7.5 7.5 0 0015 0v-5a1.5 1.5 0 013 0m-6-3V11m0-5.5v-1a1.5 1.5 0 013 0v1m0 0V11' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n      transition: opacity 0.2s ease;\n    }\n    \n    .kanban-card-draggable:hover::after {\n      opacity: 1;\n    }\n    \n    .kanban-card-locked {\n      position: relative;\n      cursor: not-allowed !important;\n      opacity: 0.8;\n    }\n    \n    .kanban-card-locked::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 20px;\n      height: 20px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23999'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n    }\n    \n    .kanban-card.dragging {\n      opacity: 0.8;\n      transform: scale(1.03);\n      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      z-index: 50;\n    }\n    \n    .kanban-column {\n      transition: all 0.2s ease;\n      border-radius: 0.75rem;\n      will-change: transform, background-color;\n    }\n    \n    .kanban-column.drag-over {\n      background-color: rgba(var(--b2, 217 217 217) / 0.5);\n      transform: scale(1.01);\n      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n      border: 2px dashed #a855f7 !important;\n    }\n\n    .kanban-container {\n      scroll-behavior: smooth;\n    }\n\n    @media (min-width: 768px) {\n      .kanban-card-draggable:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.15);\n      }\n    }\n    \n    /* Animaciones para cambios de estado */\n    @keyframes fadeIn {\n      0% { opacity: 0; }\n      100% { opacity: 1; }\n    }\n    \n    @keyframes slideIn {\n      0% { transform: translateY(10px); opacity: 0; }\n      100% { transform: translateY(0); opacity: 1; }\n    }\n    \n    @keyframes processingPulse {\n      0% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0.4); }\n      70% { box-shadow: 0 0 0 6px rgba(124, 58, 237, 0); }\n      100% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0); }\n    }\n    \n    .kanban-card {\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    .processing-toast {\n      position: fixed;\n      bottom: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    .auto-transition-toast {\n      position: fixed;\n      bottom: 70px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: #dcfce7;\n      border: 1px solid #86efac;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    /* Pop-up tooltip con instrucciones para arrastrar */\n    .drag-instructions {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      padding: 12px 16px;\n      z-index: 1000;\n      max-width: 300px;\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    /* Mejoras para vista mobile */\n    @media (max-width: 640px) {\n      .kanban-column {\n        min-height: 300px;\n      }\n    }\n  `;\n  \n  // Función para obtener clases draggable\n  const getDraggableClasses = (app: ApplicationWithApproval): string => {\n    // Usar la función canDragCard que está definida en el ámbito superior\n    const isDraggable = canDragCard(app) && app.id !== processingAppId;\n    return isDraggable \n      ? 'cursor-grab kanban-card-draggable' \n      : 'cursor-not-allowed opacity-80 kanban-card-locked';\n  };\n\n  // Función para definir los tooltips con información clara y precisa\n  const getDragTooltip = (app: ApplicationWithApproval): string => {\n    if (app.id === processingAppId) {\n      return \"Esta tarjeta está siendo procesada\";\n    }\n    \n    // Si la tarjeta se puede arrastrar, mostrar mensaje informativo\n    if (canDragCard(app)) {\n      return \"Arrastra para cambiar el estado\";\n    }\n    \n    // Mensajes específicos para casos donde no se puede arrastrar\n    if (app.approvalStatus?.approvedByAdvisor && app.approvalStatus?.approvedByCompany) {\n      return \"Esta solicitud ya está completamente aprobada y no puede ser movida\";\n    }\n    \n    // Mensajes específicos según el rol y estado\n    if (isCompanyAdmin()) {\n      if (app.status === APPLICATION_STATUS.REJECTED) {\n        return \"Las solicitudes rechazadas solo pueden ser movidas por asesores\";\n      } else if (app.status === APPLICATION_STATUS.POR_DISPERSAR) {\n        return \"Esta solicitud ya está lista para dispersión y no puede regresar a estados anteriores\";\n      } else if (app.status === APPLICATION_STATUS.COMPLETED) {\n        return \"Esta solicitud ya está completada y no puede cambiar de estado\";\n      } else if (app.status === APPLICATION_STATUS.EXPIRED) {\n        return \"Esta solicitud ha expirado y no puede cambiar de estado\";\n      } else if (app.status === APPLICATION_STATUS.CANCELLED) {\n        return \"Esta solicitud fue cancelada y no puede cambiar de estado\";\n      }\n    }\n    \n    return \"No puedes mover esta tarjeta en este momento\";\n  };\n\n  // Utilidad para asegurar que las aplicaciones con ambas aprobaciones se muevan a POR_DISPERSAR\n  const ensureCorrectStatusForDualApprovals = useCallback(async () => {\n    if (!applications || !user || !onStatusChange) return;\n    \n    console.log(\"Verificando aplicaciones con aprobación dual...\");\n    \n    // Identificar aplicaciones que tienen ambas aprobaciones pero no están en POR_DISPERSAR\n    const needStatusUpdate = (applications as ApplicationWithApproval[])\n      .filter(app => {\n        const hasBothApprovals = app.approvalStatus?.approvedByAdvisor && app.approvalStatus?.approvedByCompany;\n        \n        const isTerminalStatus = [\n          APPLICATION_STATUS.COMPLETED,\n          APPLICATION_STATUS.EXPIRED,\n          APPLICATION_STATUS.CANCELLED,\n          APPLICATION_STATUS.REJECTED\n        ].includes(app.status as APPLICATION_STATUS);\n        \n        return hasBothApprovals && !isTerminalStatus && app.status !== APPLICATION_STATUS.POR_DISPERSAR;\n      });\n    \n    if (needStatusUpdate.length > 0) {\n      console.log(`Se encontraron ${needStatusUpdate.length} aplicaciones que necesitan mover a POR_DISPERSAR:`);\n      \n      // Actualizar el estado de cada aplicación\n      for (const app of needStatusUpdate) {\n        console.log(`Actualizando aplicación ${app.id} a POR_DISPERSAR (tiene ambas aprobaciones)`);\n        try {\n          await onStatusChange(app, APPLICATION_STATUS.POR_DISPERSAR);\n          // Mostrar notificación de transición automática\n          setAutoTransitionMessage(`La solicitud ${app.id} ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n        } catch (error) {\n          console.error(`Error al actualizar estado de aplicación ${app.id}:`, error);\n        }\n      }\n      \n      // Limpiar mensaje después de un tiempo\n      setTimeout(() => setAutoTransitionMessage(null), 3000);\n    } else {\n      console.log(\"No se encontraron aplicaciones que necesiten actualización de estado\");\n    }\n  }, [applications, user, onStatusChange]);\n\n  // Verificar status cuando las aplicaciones cambian\n  useEffect(() => {\n    if (applications?.length > 0) {\n      ensureCorrectStatusForDualApprovals();\n    }\n  }, [applications, ensureCorrectStatusForDualApprovals]);\n\n  if (applications.length === 0) {\n    return (\n      <div className=\"bg-base-200 p-6 rounded-lg\">\n        <h3 className=\"text-xl font-medium text-center\">No hay solicitudes para mostrar</h3>\n        <p className=\"text-center text-gray-500 mt-2\">No se encontraron solicitudes en el sistema</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"w-full overflow-x-auto custom-scrollbar relative\">\n      <style>{customStyles}</style>\n      \n      {/* Reemplazar el overlay de carga con una notificación flotante más sutil */}\n      {processingAppId && (\n        <div className=\"processing-toast\">\n          <span className=\"loading loading-spinner loading-sm text-primary\"></span>\n          <p className=\"font-medium\">Actualizando estado...</p>\n        </div>\n      )}\n      \n      {/* Notificación para transiciones automáticas */}\n      {autoTransitionMessage && (\n        <div className=\"auto-transition-toast\">\n          <span className=\"loading loading-spinner loading-sm text-success\"></span>\n          <p className=\"font-medium\">{autoTransitionMessage}</p>\n        </div>\n      )}\n      \n      {errorMessage && (\n        <div className=\"mb-4 alert alert-error shadow-lg\">\n          <div>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"stroke-current flex-shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span>{errorMessage}</span>\n          </div>\n          <div className=\"flex-none\">\n            <button className=\"btn btn-sm\" onClick={() => setErrorMessage(null)}>Cerrar</button>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 2xl:grid-cols-6 gap-4 pb-4 kanban-container p-4\" style={{ minWidth: '1000px' }}>\n        {columns.map(column => (\n          <div \n            key={column.id}\n            className={`bg-base-100 rounded-xl shadow-md border-t-4 border-${column.color} border-l border-r border-b flex flex-col h-full kanban-column`}\n            onDragOver={(e) => {\n              handleDragOver(e, column.id);\n            }}\n            onDragLeave={(e) => {\n              e.currentTarget.classList.remove('drag-over');\n            }}\n            onDrop={(e) => {\n              handleDrop(e, column.id);\n            }}\n          >\n            {/* Cabecera de columna con indicador de color */}\n            <div className={`text-center py-3 px-4 font-bold rounded-t-lg flex items-center justify-between bg-${column.color} bg-opacity-10`}>\n              <span className={`text-${column.color} font-bold text-lg`}>{column.title}</span>\n              <span className={`badge badge-${column.color} badge-lg`}>{column.applications.length}</span>\n            </div>\n            \n            <div className=\"p-3 space-y-3 min-h-[500px] max-h-[calc(100vh-220px)] overflow-y-auto custom-scrollbar flex-grow\">\n              {column.applications.length === 0 ? (\n                <div className=\"flex items-center justify-center h-full opacity-50 border-2 border-dashed border-base-300 rounded-lg p-6\">\n                  <div className=\"text-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 mx-auto text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    <p className=\"text-sm mt-2\">No hay solicitudes</p>\n                  </div>\n                </div>\n              ) : (\n                column.applications.map((app, index) => {\n                  const isCardDraggable = canDragCard(app) && app.id !== processingAppId;\n                  return (\n                  <div\n                    key={app.id}\n                      data-tip={getDragTooltip(app)}\n                      className={`card shadow hover:shadow-lg transition-all ${getCardColor(app)} border-l-4 border-t border-r border-b hover:border-primary kanban-card relative ${app.id === processingAppId ? 'processing' : ''} ${app.isMoving ? 'opacity-90' : ''} ${getDraggableClasses(app)}`}\n                      draggable={isCardDraggable}\n                      onDragStart={isCardDraggable ? (e) => handleDragStart(e, app, index) : undefined}\n                      onDragEnd={isCardDraggable ? handleDragEnd : undefined}\n                    style={{\n                      animation: app.id === processingAppId ? 'processingPulse 1.5s infinite' : ''\n                    }}\n                  >\n                    <div className=\"card-body p-4\">\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"flex-1 font-semibold\">{app.client_name}</div>\n                          <span className={`badge badge-${column.color} badge-md text-xs px-2 py-1 whitespace-nowrap`}>\n                            {getProductLabel(app.application_type)}\n                          </span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"mt-2\">\n                        {/* Info de la empresa */}\n                        <div className=\"text-sm text-gray-600 mb-1 flex items-center\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 inline\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                          </svg>\n                          <span className=\"truncate max-w-[180px] font-medium\">\n                            {app.company_name || \"Sin empresa\"}\n                          </span>\n                        </div>\n                        \n                        {/* Monto */}\n                        <div className=\"flex items-center mb-2\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 text-primary\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                          </svg>\n                          <span className=\"text-base font-bold text-primary\">\n                              {formatCurrency(app.requested_amount || 0)}\n                          </span>\n                        </div>\n                        \n                        {/* Indicadores de estado de aprobación */}\n                        {renderApprovalIndicators(app)}\n                        \n                        <div className=\"card-actions justify-end mt-3\">\n                          <Link to={`/applications/${app.id}`} className=\"btn btn-sm btn-primary w-full\">\n                            Ver Detalle\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  );\n                })\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default KanbanBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}