{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';// Registrar componentes necesarios de Chart.js\nimport{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const AmountRangeChart=_ref=>{let{data,title='Distribución por Monto',height=300,className=''}=_ref;const[chartData,setChartData]=useState({labels:[],datasets:[{label:'Solicitudes',data:[],backgroundColor:'rgba(255, 159, 64, 0.8)',borderColor:'rgba(255, 159, 64, 1)',borderWidth:1}]});// Procesar los datos para el gráfico\nuseEffect(()=>{if(!data||data.length===0)return;// Ordenar los rangos por valor\nconst sortedData=[...data].sort((a,b)=>{// Extraer el valor mínimo de cada rango para ordenar\nconst getMinValue=range=>{const match=range.match(/(\\d+)/);return match?parseInt(match[1],10):0;};return getMinValue(a.range)-getMinValue(b.range);});const labels=sortedData.map(item=>item.range);const counts=sortedData.map(item=>item.count);// Generar colores con gradiente según el monto\nconst colors=sortedData.map((_,index)=>{const value=index/(sortedData.length-1||1);const r=Math.round(255-value*100);const g=Math.round(120+value*60);const b=Math.round(50+value*100);return`rgba(${r}, ${g}, ${b}, 0.8)`;});setChartData({labels,datasets:[{label:'Solicitudes',data:counts,backgroundColor:colors,borderColor:colors.map(color=>color.replace('0.8','1')),borderWidth:1}]});},[data]);const options={indexAxis:'y',responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false},title:{display:!!title,text:title,font:{size:16}},tooltip:{callbacks:{label:context=>{return`Solicitudes: ${context.parsed.x}`;}}}},scales:{x:{beginAtZero:true,ticks:{precision:0}},y:{grid:{display:false}}}};return/*#__PURE__*/_jsx(\"div\",{className:`chart-container ${className}`,style:{height:`${height}px`},children:data&&data.length>0?/*#__PURE__*/_jsx(Bar,{data:chartData,options:options}):/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full bg-base-200 rounded-lg\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Sin datos disponibles\"})})});};export default AmountRangeChart;","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","register","AmountRangeChart","_ref","data","title","height","className","chartData","setChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","length","sortedData","sort","a","b","getMinValue","range","match","parseInt","map","item","counts","count","colors","_","index","value","r","Math","round","g","color","replace","options","indexAxis","responsive","maintainAspectRatio","plugins","legend","display","text","font","size","tooltip","callbacks","context","parsed","x","scales","beginAtZero","ticks","precision","y","grid","style","children"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/charts/AmountRangeChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\n// Registrar componentes necesarios de Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface AmountRange {\n  range: string;\n  count: number;\n}\n\ninterface AmountRangeChartProps {\n  data: AmountRange[];\n  title?: string;\n  height?: number;\n  className?: string;\n}\n\nconst AmountRangeChart: React.FC<AmountRangeChartProps> = ({\n  data,\n  title = 'Distribución por Monto',\n  height = 300,\n  className = '',\n}) => {\n  const [chartData, setChartData] = useState<any>({\n    labels: [],\n    datasets: [\n      {\n        label: 'Solicitudes',\n        data: [],\n        backgroundColor: 'rgba(255, 159, 64, 0.8)',\n        borderColor: 'rgba(255, 159, 64, 1)',\n        borderWidth: 1,\n      },\n    ],\n  });\n\n  // Procesar los datos para el gráfico\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Ordenar los rangos por valor\n    const sortedData = [...data].sort((a, b) => {\n      // Extraer el valor mínimo de cada rango para ordenar\n      const getMinValue = (range: string) => {\n        const match = range.match(/(\\d+)/);\n        return match ? parseInt(match[1], 10) : 0;\n      };\n      \n      return getMinValue(a.range) - getMinValue(b.range);\n    });\n\n    const labels = sortedData.map(item => item.range);\n    const counts = sortedData.map(item => item.count);\n\n    // Generar colores con gradiente según el monto\n    const colors = sortedData.map((_, index) => {\n      const value = index / (sortedData.length - 1 || 1);\n      const r = Math.round(255 - (value * 100));\n      const g = Math.round(120 + (value * 60));\n      const b = Math.round(50 + (value * 100));\n      return `rgba(${r}, ${g}, ${b}, 0.8)`;\n    });\n\n    setChartData({\n      labels,\n      datasets: [\n        {\n          label: 'Solicitudes',\n          data: counts,\n          backgroundColor: colors,\n          borderColor: colors.map(color => color.replace('0.8', '1')),\n          borderWidth: 1,\n        },\n      ],\n    });\n  }, [data]);\n\n  const options = {\n    indexAxis: 'y' as const,\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (context: any) => {\n            return `Solicitudes: ${context.parsed.x}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        beginAtZero: true,\n        ticks: {\n          precision: 0,\n        },\n      },\n      y: {\n        grid: {\n          display: false,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className={`chart-container ${className}`} style={{ height: `${height}px` }}>\n      {data && data.length > 0 ? (\n        <Bar data={chartData} options={options} />\n      ) : (\n        <div className=\"flex items-center justify-center h-full bg-base-200 rounded-lg\">\n          <p className=\"text-sm text-gray-500\">Sin datos disponibles</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AmountRangeChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}