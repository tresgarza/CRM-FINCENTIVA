{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, queryAll, prevById, nextById, indexOfId, dispatchInputValueEvent, dataAttr, ariaAttr, getNativeEvent, isComposingEvent, getEventKey, contains, trackFormControl, raf } from '@zag-js/dom-query';\nimport { autoResizeInput } from '@zag-js/auto-resize';\nimport { createMachine, guards } from '@zag-js/core';\nimport { trackInteractOutside } from '@zag-js/interact-outside';\nimport { createLiveRegion } from '@zag-js/live-region';\nimport { createSplitProps, compact, removeAt, warn, uniq, isEqual } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/tags-input.anatomy.ts\nvar anatomy = createAnatomy(\"tagsInput\").parts(\"root\", \"label\", \"control\", \"input\", \"clearTrigger\", \"item\", \"itemPreview\", \"itemInput\", \"itemText\", \"itemDeleteTrigger\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `tags-input:${ctx.id}`,\n  getInputId: ctx => ctx.ids?.input ?? `tags-input:${ctx.id}:input`,\n  getClearTriggerId: ctx => ctx.ids?.clearBtn ?? `tags-input:${ctx.id}:clear-btn`,\n  getHiddenInputId: ctx => ctx.ids?.hiddenInput ?? `tags-input:${ctx.id}:hidden-input`,\n  getLabelId: ctx => ctx.ids?.label ?? `tags-input:${ctx.id}:label`,\n  getControlId: ctx => ctx.ids?.control ?? `tags-input:${ctx.id}:control`,\n  getItemId: (ctx, opt) => ctx.ids?.item?.(opt) ?? `tags-input:${ctx.id}:tag:${opt.value}:${opt.index}`,\n  getItemDeleteTriggerId: (ctx, opt) => ctx.ids?.itemDeleteTrigger?.(opt) ?? `${dom.getItemId(ctx, opt)}:delete-btn`,\n  getItemInputId: (ctx, opt) => ctx.ids?.itemInput?.(opt) ?? `${dom.getItemId(ctx, opt)}:input`,\n  getEditInputId: ctx => `${ctx.editedTagId}:input`,\n  getTagInputEl: (ctx, opt) => dom.getById(ctx, dom.getItemInputId(ctx, opt)),\n  getRootEl: ctx => dom.getById(ctx, dom.getRootId(ctx)),\n  getInputEl: ctx => dom.getById(ctx, dom.getInputId(ctx)),\n  getHiddenInputEl: ctx => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  getEditInputEl: ctx => dom.getById(ctx, dom.getEditInputId(ctx)),\n  getTagElements: ctx => queryAll(dom.getRootEl(ctx), `[data-part=item-preview]:not([data-disabled])`),\n  getFirstEl: ctx => dom.getTagElements(ctx)[0],\n  getLastEl: ctx => dom.getTagElements(ctx)[dom.getTagElements(ctx).length - 1],\n  getPrevEl: (ctx, id) => prevById(dom.getTagElements(ctx), id, false),\n  getNextEl: (ctx, id) => nextById(dom.getTagElements(ctx), id, false),\n  getTagElAtIndex: (ctx, index) => dom.getTagElements(ctx)[index],\n  getIndexOfId: (ctx, id) => indexOfId(dom.getTagElements(ctx), id),\n  isInputFocused: ctx => dom.getDoc(ctx).activeElement === dom.getInputEl(ctx),\n  getHighlightedTagValue: ctx => {\n    if (!ctx.highlightedTagId) return null;\n    const tagEl = dom.getById(ctx, ctx.highlightedTagId);\n    return tagEl?.dataset.value ?? null;\n  },\n  setHoverIntent: el => {\n    const tagEl = el.closest(\"[data-part=item-preview]\");\n    if (!tagEl) return;\n    tagEl.dataset.deleteIntent = \"\";\n  },\n  clearHoverIntent: el => {\n    const tagEl = el.closest(\"[data-part=item-preview]\");\n    if (!tagEl) return;\n    delete tagEl.dataset.deleteIntent;\n  },\n  dispatchInputEvent(ctx) {\n    const inputEl = dom.getHiddenInputEl(ctx);\n    if (!inputEl) return;\n    dispatchInputValueEvent(inputEl, {\n      value: ctx.valueAsString\n    });\n  }\n});\n\n// src/tags-input.connect.ts\nfunction connect(state, send, normalize) {\n  const interactive = state.context.isInteractive;\n  const disabled = state.context.disabled;\n  const readOnly = state.context.readOnly;\n  const invalid = state.context.invalid || state.context.isOverflowing;\n  const translations = state.context.translations;\n  const focused = state.hasTag(\"focused\");\n  const editingTag = state.matches(\"editing:tag\");\n  const empty = state.context.count === 0;\n  function getItemState(options) {\n    const id = dom.getItemId(state.context, options);\n    return {\n      id,\n      editing: editingTag && state.context.editedTagId === id,\n      highlighted: id === state.context.highlightedTagId,\n      disabled: Boolean(options.disabled || disabled)\n    };\n  }\n  return {\n    empty,\n    inputValue: state.context.trimmedInputValue,\n    value: state.context.value,\n    valueAsString: state.context.valueAsString,\n    count: state.context.count,\n    atMax: state.context.isAtMax,\n    setValue(value) {\n      send({\n        type: \"SET_VALUE\",\n        value\n      });\n    },\n    clearValue(id) {\n      if (id) {\n        send({\n          type: \"CLEAR_TAG\",\n          id\n        });\n      } else {\n        send(\"CLEAR_VALUE\");\n      }\n    },\n    addValue(value) {\n      send({\n        type: \"ADD_TAG\",\n        value\n      });\n    },\n    setValueAtIndex(index, value) {\n      send({\n        type: \"SET_VALUE_AT_INDEX\",\n        index,\n        value\n      });\n    },\n    setInputValue(value) {\n      send({\n        type: \"SET_INPUT_VALUE\",\n        value\n      });\n    },\n    clearInputValue() {\n      send({\n        type: \"SET_INPUT_VALUE\",\n        value: \"\"\n      });\n    },\n    focus() {\n      dom.getInputEl(state.context)?.focus();\n    },\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.root.attrs,\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-empty\": dataAttr(empty),\n        id: dom.getRootId(state.context),\n        onPointerDown() {\n          if (!interactive) return;\n          send(\"POINTER_DOWN\");\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n        id: dom.getLabelId(state.context),\n        dir: state.context.dir,\n        htmlFor: dom.getInputId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: dom.getControlId(state.context),\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        tabIndex: readOnly ? 0 : void 0,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-readonly\": dataAttr(readOnly),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        \"data-invalid\": dataAttr(invalid),\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n        maxLength: state.context.maxLength,\n        id: dom.getInputId(state.context),\n        defaultValue: state.context.inputValue,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        autoCapitalize: \"none\",\n        disabled: disabled || readOnly,\n        onInput(event) {\n          const evt = getNativeEvent(event);\n          const value = event.currentTarget.value;\n          if (evt.inputType === \"insertFromPaste\") {\n            send({\n              type: \"PASTE\",\n              value\n            });\n            return;\n          }\n          if (endsWith(value, state.context.delimiter)) {\n            send(\"DELIMITER_KEY\");\n            return;\n          }\n          send({\n            type: \"TYPE\",\n            value,\n            key: evt.inputType\n          });\n        },\n        onFocus() {\n          send(\"FOCUS\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (isComposingEvent(event)) return;\n          const target = event.currentTarget;\n          const isCombobox = target.getAttribute(\"role\") === \"combobox\";\n          const isExpanded = target.ariaExpanded === \"true\";\n          const keyMap = {\n            ArrowDown() {\n              send(\"ARROW_DOWN\");\n            },\n            ArrowLeft() {\n              if (isCombobox && isExpanded) return;\n              send(\"ARROW_LEFT\");\n            },\n            ArrowRight(event2) {\n              if (state.context.highlightedTagId) {\n                event2.preventDefault();\n              }\n              if (isCombobox && isExpanded) return;\n              send(\"ARROW_RIGHT\");\n            },\n            Escape(event2) {\n              event2.preventDefault();\n              send(\"ESCAPE\");\n            },\n            Backspace() {\n              send(\"BACKSPACE\");\n            },\n            Delete() {\n              send(\"DELETE\");\n            },\n            Enter(event2) {\n              if (isCombobox && isExpanded) return;\n              send(\"ENTER\");\n              event2.preventDefault();\n            }\n          };\n          const key = getEventKey(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            return;\n          }\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        type: \"text\",\n        hidden: true,\n        name: state.context.name,\n        form: state.context.form,\n        disabled,\n        readOnly,\n        required: state.context.required,\n        id: dom.getHiddenInputId(state.context),\n        defaultValue: state.context.valueAsString\n      });\n    },\n    getItemProps(props2) {\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        \"data-value\": props2.value,\n        \"data-disabled\": dataAttr(disabled)\n      });\n    },\n    getItemPreviewProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemPreview.attrs,\n        id: itemState.id,\n        dir: state.context.dir,\n        hidden: itemState.editing,\n        \"data-value\": props2.value,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n        onPointerDown(event) {\n          if (!interactive || itemState.disabled) return;\n          event.preventDefault();\n          send({\n            type: \"POINTER_DOWN_TAG\",\n            id: itemState.id\n          });\n        },\n        onDoubleClick() {\n          if (!interactive || itemState.disabled) return;\n          send({\n            type: \"DOUBLE_CLICK_TAG\",\n            id: itemState.id\n          });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-highlighted\": dataAttr(itemState.highlighted)\n      });\n    },\n    getItemInputProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.input({\n        ...parts.itemInput.attrs,\n        dir: state.context.dir,\n        \"aria-label\": translations.tagEdited(props2.value),\n        \"aria-hidden\": true,\n        disabled,\n        id: dom.getItemInputId(state.context, props2),\n        tabIndex: -1,\n        hidden: !itemState.editing,\n        defaultValue: itemState.editing ? state.context.editedTagValue : \"\",\n        onInput(event) {\n          send({\n            type: \"TAG_INPUT_TYPE\",\n            value: event.currentTarget.value\n          });\n        },\n        onBlur(event) {\n          send({\n            type: \"TAG_INPUT_BLUR\",\n            target: event.relatedTarget,\n            id: itemState.id\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (isComposingEvent(event)) return;\n          const keyMap = {\n            Enter() {\n              send(\"TAG_INPUT_ENTER\");\n            },\n            Escape() {\n              send(\"TAG_INPUT_ESCAPE\");\n            }\n          };\n          const exec = keyMap[event.key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        }\n      });\n    },\n    getItemDeleteTriggerProps(props2) {\n      const id = dom.getItemId(state.context, props2);\n      return normalize.button({\n        ...parts.itemDeleteTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getItemDeleteTriggerId(state.context, props2),\n        type: \"button\",\n        disabled,\n        \"aria-label\": translations.deleteTagTriggerLabel(props2.value),\n        tabIndex: -1,\n        onPointerDown(event) {\n          if (!interactive) {\n            event.preventDefault();\n          }\n        },\n        onPointerMove(event) {\n          if (!interactive) return;\n          dom.setHoverIntent(event.currentTarget);\n        },\n        onPointerLeave(event) {\n          if (!interactive) return;\n          dom.clearHoverIntent(event.currentTarget);\n        },\n        onClick() {\n          if (!interactive) return;\n          send({\n            type: \"CLICK_DELETE_TAG\",\n            id\n          });\n        }\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getClearTriggerId(state.context),\n        type: \"button\",\n        \"data-readonly\": dataAttr(readOnly),\n        disabled,\n        \"aria-label\": translations.clearTriggerLabel,\n        hidden: empty,\n        onClick() {\n          if (!interactive) return;\n          send(\"CLEAR_VALUE\");\n        }\n      });\n    }\n  };\n}\nfunction endsWith(str, del) {\n  if (!del) return false;\n  if (typeof del === \"string\") return str.endsWith(del);\n  return new RegExp(`${del.source}$`).test(str);\n}\nvar {\n  and,\n  not,\n  or\n} = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"tags-input\",\n    initial: ctx.autoFocus ? \"focused:input\" : \"idle\",\n    context: {\n      inputValue: \"\",\n      editedTagValue: \"\",\n      editedTagId: null,\n      highlightedTagId: null,\n      value: [],\n      dir: \"ltr\",\n      max: Infinity,\n      blurBehavior: void 0,\n      addOnPaste: false,\n      editable: true,\n      validate: () => true,\n      delimiter: \",\",\n      disabled: false,\n      readOnly: false,\n      ...ctx,\n      liveRegion: null,\n      log: {\n        current: null,\n        prev: null\n      },\n      fieldsetDisabled: false,\n      translations: {\n        clearTriggerLabel: \"Clear all tags\",\n        deleteTagTriggerLabel: value => `Delete tag ${value}`,\n        tagAdded: value => `Added tag ${value}`,\n        tagsPasted: values => `Pasted ${values.length} tags`,\n        tagEdited: value => `Editing tag ${value}. Press enter to save or escape to cancel.`,\n        tagUpdated: value => `Tag update to ${value}`,\n        tagDeleted: value => `Tag ${value} deleted`,\n        tagSelected: value => `Tag ${value} selected. Press enter to edit, delete or backspace to remove.`,\n        ...ctx.translations\n      }\n    },\n    computed: {\n      count: ctx2 => ctx2.value.length,\n      valueAsString: ctx2 => JSON.stringify(ctx2.value),\n      trimmedInputValue: ctx2 => ctx2.inputValue.trim(),\n      isDisabled: ctx2 => !!ctx2.disabled || ctx2.fieldsetDisabled,\n      isInteractive: ctx2 => !(ctx2.readOnly || ctx2.isDisabled),\n      isAtMax: ctx2 => ctx2.count === ctx2.max,\n      isOverflowing: ctx2 => ctx2.count > ctx2.max\n    },\n    watch: {\n      highlightedTagId: \"logHighlightedTag\",\n      isOverflowing: \"invokeOnInvalid\",\n      log: \"announceLog\",\n      inputValue: \"syncInputValue\",\n      editedTagValue: \"syncEditedTagInputValue\"\n    },\n    activities: [\"trackLiveRegion\", \"trackFormControlState\"],\n    exit: [\"clearLog\"],\n    on: {\n      DOUBLE_CLICK_TAG: {\n        internal: true,\n        guard: \"isTagEditable\",\n        target: \"editing:tag\",\n        actions: [\"setEditedId\", \"initializeEditedTagValue\"]\n      },\n      POINTER_DOWN_TAG: {\n        internal: true,\n        target: \"navigating:tag\",\n        actions: [\"highlightTag\", \"focusInput\"]\n      },\n      CLICK_DELETE_TAG: {\n        target: \"focused:input\",\n        actions: [\"deleteTag\"]\n      },\n      SET_INPUT_VALUE: {\n        actions: [\"setInputValue\"]\n      },\n      SET_VALUE: {\n        actions: [\"setValue\"]\n      },\n      CLEAR_TAG: {\n        actions: [\"deleteTag\"]\n      },\n      SET_VALUE_AT_INDEX: {\n        actions: [\"setValueAtIndex\"]\n      },\n      CLEAR_VALUE: {\n        actions: [\"clearTags\", \"clearInputValue\", \"focusInput\"]\n      },\n      ADD_TAG: {\n        actions: [\"addTag\"]\n      },\n      INSERT_TAG: {\n        // (!isAtMax || allowOverflow) && !inputValueIsEmpty\n        guard: and(or(not(\"isAtMax\"), \"allowOverflow\"), not(\"isInputValueEmpty\")),\n        actions: [\"addTag\", \"clearInputValue\"]\n      },\n      EXTERNAL_BLUR: [{\n        guard: \"addOnBlur\",\n        actions: \"raiseInsertTagEvent\"\n      }, {\n        guard: \"clearOnBlur\",\n        actions: \"clearInputValue\"\n      }]\n    },\n    states: {\n      idle: {\n        on: {\n          FOCUS: \"focused:input\",\n          POINTER_DOWN: {\n            guard: not(\"hasHighlightedTag\"),\n            target: \"focused:input\"\n          }\n        }\n      },\n      \"focused:input\": {\n        tags: [\"focused\"],\n        entry: [\"focusInput\", \"clearHighlightedId\"],\n        activities: [\"trackInteractOutside\"],\n        on: {\n          TYPE: {\n            actions: \"setInputValue\"\n          },\n          BLUR: [{\n            guard: \"addOnBlur\",\n            target: \"idle\",\n            actions: \"raiseInsertTagEvent\"\n          }, {\n            guard: \"clearOnBlur\",\n            target: \"idle\",\n            actions: \"clearInputValue\"\n          }, {\n            target: \"idle\"\n          }],\n          ENTER: {\n            actions: [\"raiseInsertTagEvent\"]\n          },\n          DELIMITER_KEY: {\n            actions: [\"raiseInsertTagEvent\"]\n          },\n          ARROW_LEFT: {\n            guard: and(\"hasTags\", \"isInputCaretAtStart\"),\n            target: \"navigating:tag\",\n            actions: \"highlightLastTag\"\n          },\n          BACKSPACE: {\n            target: \"navigating:tag\",\n            guard: and(\"hasTags\", \"isInputCaretAtStart\"),\n            actions: \"highlightLastTag\"\n          },\n          DELETE: {\n            guard: \"hasHighlightedTag\",\n            actions: [\"deleteHighlightedTag\", \"highlightTagAtIndex\"]\n          },\n          PASTE: [{\n            guard: \"addOnPaste\",\n            actions: [\"setInputValue\", \"addTagFromPaste\"]\n          }, {\n            actions: \"setInputValue\"\n          }]\n        }\n      },\n      \"navigating:tag\": {\n        tags: [\"focused\"],\n        activities: [\"trackInteractOutside\"],\n        on: {\n          ARROW_RIGHT: [{\n            guard: and(\"hasTags\", \"isInputCaretAtStart\", not(\"isLastTagHighlighted\")),\n            actions: \"highlightNextTag\"\n          }, {\n            target: \"focused:input\"\n          }],\n          ARROW_LEFT: {\n            actions: \"highlightPrevTag\"\n          },\n          BLUR: {\n            target: \"idle\",\n            actions: \"clearHighlightedId\"\n          },\n          ENTER: {\n            guard: and(\"isTagEditable\", \"hasHighlightedTag\"),\n            target: \"editing:tag\",\n            actions: [\"setEditedId\", \"initializeEditedTagValue\", \"focusEditedTagInput\"]\n          },\n          ARROW_DOWN: \"focused:input\",\n          ESCAPE: \"focused:input\",\n          TYPE: {\n            target: \"focused:input\",\n            actions: \"setInputValue\"\n          },\n          BACKSPACE: [{\n            guard: \"isFirstTagHighlighted\",\n            actions: [\"deleteHighlightedTag\", \"highlightFirstTag\"]\n          }, {\n            guard: \"hasHighlightedTag\",\n            actions: [\"deleteHighlightedTag\", \"highlightPrevTag\"]\n          }, {\n            actions: [\"highlightLastTag\"]\n          }],\n          DELETE: {\n            target: \"focused:input\",\n            actions: [\"deleteHighlightedTag\", \"highlightTagAtIndex\"]\n          },\n          PASTE: [{\n            guard: \"addOnPaste\",\n            target: \"focused:input\",\n            actions: [\"setInputValue\", \"addTagFromPaste\"]\n          }, {\n            target: \"focused:input\",\n            actions: \"setInputValue\"\n          }]\n        }\n      },\n      \"editing:tag\": {\n        tags: [\"editing\", \"focused\"],\n        entry: \"focusEditedTagInput\",\n        activities: [\"autoResize\"],\n        on: {\n          TAG_INPUT_TYPE: {\n            actions: \"setEditedTagValue\"\n          },\n          TAG_INPUT_ESCAPE: {\n            target: \"navigating:tag\",\n            actions: [\"clearEditedTagValue\", \"focusInput\", \"clearEditedId\", \"highlightTagAtIndex\"]\n          },\n          TAG_INPUT_BLUR: [{\n            guard: \"isInputRelatedTarget\",\n            target: \"navigating:tag\",\n            actions: [\"clearEditedTagValue\", \"clearHighlightedId\", \"clearEditedId\"]\n          }, {\n            target: \"idle\",\n            actions: [\"clearEditedTagValue\", \"clearHighlightedId\", \"clearEditedId\", \"raiseExternalBlurEvent\"]\n          }],\n          TAG_INPUT_ENTER: [{\n            guard: \"isEditedTagEmpty\",\n            target: \"navigating:tag\",\n            actions: [\"deleteHighlightedTag\", \"focusInput\", \"clearEditedId\", \"highlightTagAtIndex\"]\n          }, {\n            target: \"navigating:tag\",\n            actions: [\"submitEditedTagValue\", \"focusInput\", \"clearEditedId\", \"highlightTagAtIndex\"]\n          }]\n        }\n      }\n    }\n  }, {\n    guards: {\n      isInputRelatedTarget: (ctx2, evt) => evt.relatedTarget === dom.getInputEl(ctx2),\n      isAtMax: ctx2 => ctx2.isAtMax,\n      hasHighlightedTag: ctx2 => ctx2.highlightedTagId !== null,\n      isFirstTagHighlighted: ctx2 => {\n        const firstItemId = dom.getItemId(ctx2, {\n          value: ctx2.value[0],\n          index: 0\n        });\n        return firstItemId === ctx2.highlightedTagId;\n      },\n      isEditedTagEmpty: ctx2 => ctx2.editedTagValue.trim() === \"\",\n      isLastTagHighlighted: ctx2 => {\n        const lastIndex = ctx2.value.length - 1;\n        const lastItemId = dom.getItemId(ctx2, {\n          value: ctx2.value[lastIndex],\n          index: lastIndex\n        });\n        return lastItemId === ctx2.highlightedTagId;\n      },\n      isInputValueEmpty: ctx2 => ctx2.trimmedInputValue.length === 0,\n      hasTags: ctx2 => ctx2.value.length > 0,\n      allowOverflow: ctx2 => !!ctx2.allowOverflow,\n      autoFocus: ctx2 => !!ctx2.autoFocus,\n      addOnBlur: ctx2 => ctx2.blurBehavior === \"add\",\n      clearOnBlur: ctx2 => ctx2.blurBehavior === \"clear\",\n      addOnPaste: ctx2 => !!ctx2.addOnPaste,\n      isTagEditable: ctx2 => !!ctx2.editable,\n      isInputCaretAtStart(ctx2) {\n        const input = dom.getInputEl(ctx2);\n        if (!input) return false;\n        try {\n          return input.selectionStart === 0 && input.selectionEnd === 0;\n        } catch {\n          return input.value === \"\";\n        }\n      }\n    },\n    activities: {\n      trackInteractOutside(ctx2, _evt, {\n        send\n      }) {\n        return trackInteractOutside(dom.getInputEl(ctx2), {\n          exclude(target) {\n            return contains(dom.getRootEl(ctx2), target);\n          },\n          onFocusOutside: ctx2.onFocusOutside,\n          onPointerDownOutside: ctx2.onPointerDownOutside,\n          onInteractOutside(event) {\n            ctx2.onInteractOutside?.(event);\n            if (event.defaultPrevented) return;\n            send({\n              type: \"BLUR\",\n              src: \"interact-outside\"\n            });\n          }\n        });\n      },\n      trackFormControlState(ctx2, _evt, {\n        send,\n        initialContext\n      }) {\n        return trackFormControl(dom.getHiddenInputEl(ctx2), {\n          onFieldsetDisabledChange(disabled) {\n            ctx2.fieldsetDisabled = disabled;\n          },\n          onFormReset() {\n            send({\n              type: \"SET_VALUE\",\n              value: initialContext.value,\n              src: \"form-reset\"\n            });\n          }\n        });\n      },\n      autoResize(ctx2) {\n        if (!ctx2.editedTagValue || ctx2.idx == null || !ctx2.editable) return;\n        const input = dom.getTagInputEl(ctx2, {\n          value: ctx2.editedTagValue,\n          index: ctx2.idx\n        });\n        return autoResizeInput(input);\n      },\n      trackLiveRegion(ctx2) {\n        ctx2.liveRegion = createLiveRegion({\n          level: \"assertive\",\n          document: dom.getDoc(ctx2)\n        });\n        return () => ctx2.liveRegion?.destroy();\n      }\n    },\n    actions: {\n      raiseInsertTagEvent(_, __, {\n        self\n      }) {\n        self.send(\"INSERT_TAG\");\n      },\n      raiseExternalBlurEvent(_, evt, {\n        self\n      }) {\n        self.send({\n          type: \"EXTERNAL_BLUR\",\n          id: evt.id\n        });\n      },\n      dispatchChangeEvent(ctx2) {\n        dom.dispatchInputEvent(ctx2);\n      },\n      highlightNextTag(ctx2) {\n        if (ctx2.highlightedTagId == null) return;\n        const next = dom.getNextEl(ctx2, ctx2.highlightedTagId);\n        set.highlightedId(ctx2, next?.id ?? null);\n      },\n      highlightFirstTag(ctx2) {\n        raf(() => {\n          const first = dom.getFirstEl(ctx2);\n          set.highlightedId(ctx2, first?.id ?? null);\n        });\n      },\n      highlightLastTag(ctx2) {\n        const last = dom.getLastEl(ctx2);\n        set.highlightedId(ctx2, last?.id ?? null);\n      },\n      highlightPrevTag(ctx2) {\n        if (ctx2.highlightedTagId == null) return;\n        const prev = dom.getPrevEl(ctx2, ctx2.highlightedTagId);\n        set.highlightedId(ctx2, prev?.id ?? null);\n      },\n      highlightTag(ctx2, evt) {\n        set.highlightedId(ctx2, evt.id);\n      },\n      highlightTagAtIndex(ctx2) {\n        raf(() => {\n          if (ctx2.idx == null) return;\n          const tagEl = dom.getTagElAtIndex(ctx2, ctx2.idx);\n          if (tagEl == null) return;\n          set.highlightedId(ctx2, tagEl.id);\n          ctx2.idx = void 0;\n        });\n      },\n      deleteTag(ctx2, evt) {\n        const index = dom.getIndexOfId(ctx2, evt.id);\n        const value = ctx2.value[index];\n        ctx2.log.prev = ctx2.log.current;\n        ctx2.log.current = {\n          type: \"delete\",\n          value\n        };\n        set.value(ctx2, removeAt(ctx2.value, index));\n      },\n      deleteHighlightedTag(ctx2) {\n        if (ctx2.highlightedTagId == null) return;\n        const index = dom.getIndexOfId(ctx2, ctx2.highlightedTagId);\n        ctx2.idx = index;\n        const value = ctx2.value[index];\n        ctx2.log.prev = ctx2.log.current;\n        ctx2.log.current = {\n          type: \"delete\",\n          value\n        };\n        set.value(ctx2, removeAt(ctx2.value, index));\n      },\n      setEditedId(ctx2, evt) {\n        ctx2.editedTagId = evt.id ?? ctx2.highlightedTagId;\n        ctx2.idx = dom.getIndexOfId(ctx2, ctx2.editedTagId);\n      },\n      clearEditedId(ctx2) {\n        ctx2.editedTagId = null;\n      },\n      clearEditedTagValue(ctx2) {\n        ctx2.editedTagValue = \"\";\n      },\n      setEditedTagValue(ctx2, evt) {\n        ctx2.editedTagValue = evt.value;\n      },\n      submitEditedTagValue(ctx2) {\n        if (!ctx2.editedTagId) return;\n        const index = dom.getIndexOfId(ctx2, ctx2.editedTagId);\n        set.valueAtIndex(ctx2, index, ctx2.editedTagValue ?? \"\");\n        ctx2.log.prev = ctx2.log.current;\n        ctx2.log.current = {\n          type: \"update\",\n          value: ctx2.editedTagValue\n        };\n      },\n      setValueAtIndex(ctx2, evt) {\n        if (evt.value) {\n          ctx2.value[evt.index] = evt.value;\n          ctx2.log.prev = ctx2.log.current;\n          ctx2.log.current = {\n            type: \"update\",\n            value: evt.value\n          };\n        } else {\n          warn(\"You need to provide a value for the tag\");\n        }\n      },\n      initializeEditedTagValue(ctx2) {\n        if (!ctx2.editedTagId) return;\n        const index = dom.getIndexOfId(ctx2, ctx2.editedTagId);\n        ctx2.editedTagValue = ctx2.value[index];\n      },\n      focusEditedTagInput(ctx2) {\n        raf(() => {\n          dom.getEditInputEl(ctx2)?.select();\n        });\n      },\n      setInputValue(ctx2, evt) {\n        set.inputValue(ctx2, evt.value);\n      },\n      clearHighlightedId(ctx2) {\n        ctx2.highlightedTagId = null;\n      },\n      focusInput(ctx2) {\n        raf(() => {\n          dom.getInputEl(ctx2)?.focus();\n        });\n      },\n      clearInputValue(ctx2) {\n        raf(() => {\n          set.inputValue(ctx2, \"\");\n        });\n      },\n      syncInputValue(ctx2) {\n        const inputEl = dom.getInputEl(ctx2);\n        dom.setValue(inputEl, ctx2.inputValue);\n      },\n      syncEditedTagInputValue(ctx2, evt) {\n        const id = ctx2.editedTagId || ctx2.highlightedTagId || evt.id;\n        if (id == null) return;\n        const editTagInputEl = dom.getById(ctx2, `${id}:input`);\n        dom.setValue(editTagInputEl, ctx2.editedTagValue);\n      },\n      addTag(ctx2, evt) {\n        const value = evt.value ?? ctx2.trimmedInputValue;\n        const guard = ctx2.validate?.({\n          inputValue: value,\n          value: Array.from(ctx2.value)\n        });\n        if (guard) {\n          const nextValue = uniq(ctx2.value.concat(value));\n          set.value(ctx2, nextValue);\n          ctx2.log.prev = ctx2.log.current;\n          ctx2.log.current = {\n            type: \"add\",\n            value\n          };\n        } else {\n          ctx2.onValueInvalid?.({\n            reason: \"invalidTag\"\n          });\n        }\n      },\n      addTagFromPaste(ctx2) {\n        raf(() => {\n          const value = ctx2.trimmedInputValue;\n          const guard = ctx2.validate?.({\n            inputValue: value,\n            value: Array.from(ctx2.value)\n          });\n          if (guard) {\n            const trimmedValue = ctx2.delimiter ? value.split(ctx2.delimiter).map(v => v.trim()) : [value];\n            const nextValue = uniq(ctx2.value.concat(...trimmedValue));\n            set.value(ctx2, nextValue);\n            ctx2.log.prev = ctx2.log.current;\n            ctx2.log.current = {\n              type: \"paste\",\n              values: trimmedValue\n            };\n          } else {\n            ctx2.onValueInvalid?.({\n              reason: \"invalidTag\"\n            });\n          }\n          set.inputValue(ctx2, \"\");\n        });\n      },\n      clearTags(ctx2) {\n        set.value(ctx2, []);\n        ctx2.log.prev = ctx2.log.current;\n        ctx2.log.current = {\n          type: \"clear\"\n        };\n      },\n      setValue(ctx2, evt) {\n        set.value(ctx2, evt.value);\n      },\n      invokeOnInvalid(ctx2) {\n        if (ctx2.isOverflowing) {\n          ctx2.onValueInvalid?.({\n            reason: \"rangeOverflow\"\n          });\n        }\n      },\n      clearLog(ctx2) {\n        ctx2.log = {\n          prev: null,\n          current: null\n        };\n      },\n      logHighlightedTag(ctx2) {\n        if (ctx2.highlightedTagId == null) return;\n        const index = dom.getIndexOfId(ctx2, ctx2.highlightedTagId);\n        ctx2.log.prev = ctx2.log.current;\n        ctx2.log.current = {\n          type: \"select\",\n          value: ctx2.value[index]\n        };\n      },\n      // queue logs with screen reader and get it announced\n      announceLog(ctx2) {\n        if (!ctx2.log.current || ctx2.liveRegion == null) return;\n        const region = ctx2.liveRegion;\n        const {\n          current,\n          prev\n        } = ctx2.log;\n        let msg;\n        switch (current.type) {\n          case \"add\":\n            msg = ctx2.translations.tagAdded(current.value);\n            break;\n          case \"delete\":\n            msg = ctx2.translations.tagDeleted(current.value);\n            break;\n          case \"update\":\n            msg = ctx2.translations.tagUpdated(current.value);\n            break;\n          case \"paste\":\n            msg = ctx2.translations.tagsPasted(current.values);\n            break;\n          case \"select\":\n            msg = ctx2.translations.tagSelected(current.value);\n            if (prev?.type === \"delete\") {\n              msg = `${ctx2.translations.tagDeleted(prev.value)}. ${msg}`;\n            } else if (prev?.type === \"update\") {\n              msg = `${ctx2.translations.tagUpdated(prev.value)}. ${msg}`;\n            }\n            break;\n        }\n        if (msg) region.announce(msg);\n      }\n    }\n  });\n}\nvar invoke = {\n  change: ctx => {\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value)\n    });\n    dom.dispatchInputEvent(ctx);\n  },\n  highlightChange: ctx => {\n    const highlightedValue = dom.getHighlightedTagValue(ctx);\n    ctx.onHighlightChange?.({\n      highlightedValue\n    });\n  },\n  valueChange: ctx => {\n    ctx.onInputValueChange?.({\n      inputValue: ctx.inputValue\n    });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  valueAtIndex: (ctx, index, value) => {\n    if (isEqual(ctx.value[index], value)) return;\n    ctx.value[index] = value;\n    invoke.change(ctx);\n  },\n  highlightedId: (ctx, id) => {\n    if (isEqual(ctx.highlightedTagId, id)) return;\n    ctx.highlightedTagId = id;\n    invoke.highlightChange(ctx);\n  },\n  inputValue: (ctx, value) => {\n    if (isEqual(ctx.inputValue, value)) return;\n    ctx.inputValue = value;\n    invoke.valueChange(ctx);\n  }\n};\nvar props = createProps()([\"addOnPaste\", \"allowOverflow\", \"autoFocus\", \"blurBehavior\", \"delimiter\", \"dir\", \"disabled\", \"editable\", \"form\", \"getRootNode\", \"id\", \"ids\", \"inputValue\", \"invalid\", \"max\", \"maxLength\", \"name\", \"onFocusOutside\", \"onHighlightChange\", \"onInputValueChange\", \"onInteractOutside\", \"onPointerDownOutside\", \"onValueChange\", \"onValueInvalid\", \"required\", \"readOnly\", \"translations\", \"validate\", \"value\"]);\nvar splitProps = createSplitProps(props);\nvar itemProps = createProps()([\"index\", \"disabled\", \"value\"]);\nvar splitItemProps = createSplitProps(itemProps);\nexport { anatomy, connect, itemProps, machine, props, splitItemProps, splitProps };","map":{"version":3,"names":["createAnatomy","createScope","queryAll","prevById","nextById","indexOfId","dispatchInputValueEvent","dataAttr","ariaAttr","getNativeEvent","isComposingEvent","getEventKey","contains","trackFormControl","raf","autoResizeInput","createMachine","guards","trackInteractOutside","createLiveRegion","createSplitProps","compact","removeAt","warn","uniq","isEqual","createProps","anatomy","parts","build","dom","getRootId","ctx","ids","root","id","getInputId","input","getClearTriggerId","clearBtn","getHiddenInputId","hiddenInput","getLabelId","label","getControlId","control","getItemId","opt","item","value","index","getItemDeleteTriggerId","itemDeleteTrigger","getItemInputId","itemInput","getEditInputId","editedTagId","getTagInputEl","getById","getRootEl","getInputEl","getHiddenInputEl","getEditInputEl","getTagElements","getFirstEl","getLastEl","length","getPrevEl","getNextEl","getTagElAtIndex","getIndexOfId","isInputFocused","getDoc","activeElement","getHighlightedTagValue","highlightedTagId","tagEl","dataset","setHoverIntent","el","closest","deleteIntent","clearHoverIntent","dispatchInputEvent","inputEl","valueAsString","connect","state","send","normalize","interactive","context","isInteractive","disabled","readOnly","invalid","isOverflowing","translations","focused","hasTag","editingTag","matches","empty","count","getItemState","options","editing","highlighted","Boolean","inputValue","trimmedInputValue","atMax","isAtMax","setValue","type","clearValue","addValue","setValueAtIndex","setInputValue","clearInputValue","focus","getRootProps","element","dir","attrs","onPointerDown","getLabelProps","htmlFor","getControlProps","tabIndex","getInputProps","maxLength","defaultValue","autoComplete","autoCorrect","autoCapitalize","onInput","event","evt","currentTarget","inputType","endsWith","delimiter","key","onFocus","onKeyDown","defaultPrevented","target","isCombobox","getAttribute","isExpanded","ariaExpanded","keyMap","ArrowDown","ArrowLeft","ArrowRight","event2","preventDefault","Escape","Backspace","Delete","Enter","exec","getHiddenInputProps","hidden","name","form","required","getItemProps","props2","getItemPreviewProps","itemState","itemPreview","onDoubleClick","getItemTextProps","itemText","getItemInputProps","tagEdited","editedTagValue","onBlur","relatedTarget","getItemDeleteTriggerProps","button","deleteTagTriggerLabel","onPointerMove","onPointerLeave","onClick","getClearTriggerProps","clearTrigger","clearTriggerLabel","str","del","RegExp","source","test","and","not","or","machine","userContext","initial","autoFocus","max","Infinity","blurBehavior","addOnPaste","editable","validate","liveRegion","log","current","prev","fieldsetDisabled","tagAdded","tagsPasted","values","tagUpdated","tagDeleted","tagSelected","computed","ctx2","JSON","stringify","trim","isDisabled","watch","activities","exit","on","DOUBLE_CLICK_TAG","internal","guard","actions","POINTER_DOWN_TAG","CLICK_DELETE_TAG","SET_INPUT_VALUE","SET_VALUE","CLEAR_TAG","SET_VALUE_AT_INDEX","CLEAR_VALUE","ADD_TAG","INSERT_TAG","EXTERNAL_BLUR","states","idle","FOCUS","POINTER_DOWN","tags","entry","TYPE","BLUR","ENTER","DELIMITER_KEY","ARROW_LEFT","BACKSPACE","DELETE","PASTE","ARROW_RIGHT","ARROW_DOWN","ESCAPE","TAG_INPUT_TYPE","TAG_INPUT_ESCAPE","TAG_INPUT_BLUR","TAG_INPUT_ENTER","isInputRelatedTarget","hasHighlightedTag","isFirstTagHighlighted","firstItemId","isEditedTagEmpty","isLastTagHighlighted","lastIndex","lastItemId","isInputValueEmpty","hasTags","allowOverflow","addOnBlur","clearOnBlur","isTagEditable","isInputCaretAtStart","selectionStart","selectionEnd","_evt","exclude","onFocusOutside","onPointerDownOutside","onInteractOutside","src","trackFormControlState","initialContext","onFieldsetDisabledChange","onFormReset","autoResize","idx","trackLiveRegion","level","document","destroy","raiseInsertTagEvent","_","__","self","raiseExternalBlurEvent","dispatchChangeEvent","highlightNextTag","next","set","highlightedId","highlightFirstTag","first","highlightLastTag","last","highlightPrevTag","highlightTag","highlightTagAtIndex","deleteTag","deleteHighlightedTag","setEditedId","clearEditedId","clearEditedTagValue","setEditedTagValue","submitEditedTagValue","valueAtIndex","initializeEditedTagValue","focusEditedTagInput","select","clearHighlightedId","focusInput","syncInputValue","syncEditedTagInputValue","editTagInputEl","addTag","Array","from","nextValue","concat","onValueInvalid","reason","addTagFromPaste","trimmedValue","split","map","v","clearTags","invokeOnInvalid","clearLog","logHighlightedTag","announceLog","region","msg","announce","invoke","change","onValueChange","highlightChange","highlightedValue","onHighlightChange","valueChange","onInputValueChange","props","splitProps","itemProps","splitItemProps"],"sources":["/Users/diegogg98/NEW CRM MAR18/node_modules/@zag-js/tags-input/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { createScope, queryAll, prevById, nextById, indexOfId, dispatchInputValueEvent, dataAttr, ariaAttr, getNativeEvent, isComposingEvent, getEventKey, contains, trackFormControl, raf } from '@zag-js/dom-query';\nimport { autoResizeInput } from '@zag-js/auto-resize';\nimport { createMachine, guards } from '@zag-js/core';\nimport { trackInteractOutside } from '@zag-js/interact-outside';\nimport { createLiveRegion } from '@zag-js/live-region';\nimport { createSplitProps, compact, removeAt, warn, uniq, isEqual } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/tags-input.anatomy.ts\nvar anatomy = createAnatomy(\"tagsInput\").parts(\n  \"root\",\n  \"label\",\n  \"control\",\n  \"input\",\n  \"clearTrigger\",\n  \"item\",\n  \"itemPreview\",\n  \"itemInput\",\n  \"itemText\",\n  \"itemDeleteTrigger\"\n);\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `tags-input:${ctx.id}`,\n  getInputId: (ctx) => ctx.ids?.input ?? `tags-input:${ctx.id}:input`,\n  getClearTriggerId: (ctx) => ctx.ids?.clearBtn ?? `tags-input:${ctx.id}:clear-btn`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `tags-input:${ctx.id}:hidden-input`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `tags-input:${ctx.id}:label`,\n  getControlId: (ctx) => ctx.ids?.control ?? `tags-input:${ctx.id}:control`,\n  getItemId: (ctx, opt) => ctx.ids?.item?.(opt) ?? `tags-input:${ctx.id}:tag:${opt.value}:${opt.index}`,\n  getItemDeleteTriggerId: (ctx, opt) => ctx.ids?.itemDeleteTrigger?.(opt) ?? `${dom.getItemId(ctx, opt)}:delete-btn`,\n  getItemInputId: (ctx, opt) => ctx.ids?.itemInput?.(opt) ?? `${dom.getItemId(ctx, opt)}:input`,\n  getEditInputId: (ctx) => `${ctx.editedTagId}:input`,\n  getTagInputEl: (ctx, opt) => dom.getById(ctx, dom.getItemInputId(ctx, opt)),\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getInputEl: (ctx) => dom.getById(ctx, dom.getInputId(ctx)),\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  getEditInputEl: (ctx) => dom.getById(ctx, dom.getEditInputId(ctx)),\n  getTagElements: (ctx) => queryAll(dom.getRootEl(ctx), `[data-part=item-preview]:not([data-disabled])`),\n  getFirstEl: (ctx) => dom.getTagElements(ctx)[0],\n  getLastEl: (ctx) => dom.getTagElements(ctx)[dom.getTagElements(ctx).length - 1],\n  getPrevEl: (ctx, id) => prevById(dom.getTagElements(ctx), id, false),\n  getNextEl: (ctx, id) => nextById(dom.getTagElements(ctx), id, false),\n  getTagElAtIndex: (ctx, index) => dom.getTagElements(ctx)[index],\n  getIndexOfId: (ctx, id) => indexOfId(dom.getTagElements(ctx), id),\n  isInputFocused: (ctx) => dom.getDoc(ctx).activeElement === dom.getInputEl(ctx),\n  getHighlightedTagValue: (ctx) => {\n    if (!ctx.highlightedTagId) return null;\n    const tagEl = dom.getById(ctx, ctx.highlightedTagId);\n    return tagEl?.dataset.value ?? null;\n  },\n  setHoverIntent: (el) => {\n    const tagEl = el.closest(\"[data-part=item-preview]\");\n    if (!tagEl) return;\n    tagEl.dataset.deleteIntent = \"\";\n  },\n  clearHoverIntent: (el) => {\n    const tagEl = el.closest(\"[data-part=item-preview]\");\n    if (!tagEl) return;\n    delete tagEl.dataset.deleteIntent;\n  },\n  dispatchInputEvent(ctx) {\n    const inputEl = dom.getHiddenInputEl(ctx);\n    if (!inputEl) return;\n    dispatchInputValueEvent(inputEl, { value: ctx.valueAsString });\n  }\n});\n\n// src/tags-input.connect.ts\nfunction connect(state, send, normalize) {\n  const interactive = state.context.isInteractive;\n  const disabled = state.context.disabled;\n  const readOnly = state.context.readOnly;\n  const invalid = state.context.invalid || state.context.isOverflowing;\n  const translations = state.context.translations;\n  const focused = state.hasTag(\"focused\");\n  const editingTag = state.matches(\"editing:tag\");\n  const empty = state.context.count === 0;\n  function getItemState(options) {\n    const id = dom.getItemId(state.context, options);\n    return {\n      id,\n      editing: editingTag && state.context.editedTagId === id,\n      highlighted: id === state.context.highlightedTagId,\n      disabled: Boolean(options.disabled || disabled)\n    };\n  }\n  return {\n    empty,\n    inputValue: state.context.trimmedInputValue,\n    value: state.context.value,\n    valueAsString: state.context.valueAsString,\n    count: state.context.count,\n    atMax: state.context.isAtMax,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value });\n    },\n    clearValue(id) {\n      if (id) {\n        send({ type: \"CLEAR_TAG\", id });\n      } else {\n        send(\"CLEAR_VALUE\");\n      }\n    },\n    addValue(value) {\n      send({ type: \"ADD_TAG\", value });\n    },\n    setValueAtIndex(index, value) {\n      send({ type: \"SET_VALUE_AT_INDEX\", index, value });\n    },\n    setInputValue(value) {\n      send({ type: \"SET_INPUT_VALUE\", value });\n    },\n    clearInputValue() {\n      send({ type: \"SET_INPUT_VALUE\", value: \"\" });\n    },\n    focus() {\n      dom.getInputEl(state.context)?.focus();\n    },\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.root.attrs,\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-empty\": dataAttr(empty),\n        id: dom.getRootId(state.context),\n        onPointerDown() {\n          if (!interactive) return;\n          send(\"POINTER_DOWN\");\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n        id: dom.getLabelId(state.context),\n        dir: state.context.dir,\n        htmlFor: dom.getInputId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: dom.getControlId(state.context),\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        tabIndex: readOnly ? 0 : void 0,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-readonly\": dataAttr(readOnly),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        \"data-invalid\": dataAttr(invalid),\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-readonly\": dataAttr(readOnly),\n        maxLength: state.context.maxLength,\n        id: dom.getInputId(state.context),\n        defaultValue: state.context.inputValue,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        autoCapitalize: \"none\",\n        disabled: disabled || readOnly,\n        onInput(event) {\n          const evt = getNativeEvent(event);\n          const value = event.currentTarget.value;\n          if (evt.inputType === \"insertFromPaste\") {\n            send({ type: \"PASTE\", value });\n            return;\n          }\n          if (endsWith(value, state.context.delimiter)) {\n            send(\"DELIMITER_KEY\");\n            return;\n          }\n          send({ type: \"TYPE\", value, key: evt.inputType });\n        },\n        onFocus() {\n          send(\"FOCUS\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (isComposingEvent(event)) return;\n          const target = event.currentTarget;\n          const isCombobox = target.getAttribute(\"role\") === \"combobox\";\n          const isExpanded = target.ariaExpanded === \"true\";\n          const keyMap = {\n            ArrowDown() {\n              send(\"ARROW_DOWN\");\n            },\n            ArrowLeft() {\n              if (isCombobox && isExpanded) return;\n              send(\"ARROW_LEFT\");\n            },\n            ArrowRight(event2) {\n              if (state.context.highlightedTagId) {\n                event2.preventDefault();\n              }\n              if (isCombobox && isExpanded) return;\n              send(\"ARROW_RIGHT\");\n            },\n            Escape(event2) {\n              event2.preventDefault();\n              send(\"ESCAPE\");\n            },\n            Backspace() {\n              send(\"BACKSPACE\");\n            },\n            Delete() {\n              send(\"DELETE\");\n            },\n            Enter(event2) {\n              if (isCombobox && isExpanded) return;\n              send(\"ENTER\");\n              event2.preventDefault();\n            }\n          };\n          const key = getEventKey(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            return;\n          }\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        type: \"text\",\n        hidden: true,\n        name: state.context.name,\n        form: state.context.form,\n        disabled,\n        readOnly,\n        required: state.context.required,\n        id: dom.getHiddenInputId(state.context),\n        defaultValue: state.context.valueAsString\n      });\n    },\n    getItemProps(props2) {\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        \"data-value\": props2.value,\n        \"data-disabled\": dataAttr(disabled)\n      });\n    },\n    getItemPreviewProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemPreview.attrs,\n        id: itemState.id,\n        dir: state.context.dir,\n        hidden: itemState.editing,\n        \"data-value\": props2.value,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n        onPointerDown(event) {\n          if (!interactive || itemState.disabled) return;\n          event.preventDefault();\n          send({ type: \"POINTER_DOWN_TAG\", id: itemState.id });\n        },\n        onDoubleClick() {\n          if (!interactive || itemState.disabled) return;\n          send({ type: \"DOUBLE_CLICK_TAG\", id: itemState.id });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-highlighted\": dataAttr(itemState.highlighted)\n      });\n    },\n    getItemInputProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.input({\n        ...parts.itemInput.attrs,\n        dir: state.context.dir,\n        \"aria-label\": translations.tagEdited(props2.value),\n        \"aria-hidden\": true,\n        disabled,\n        id: dom.getItemInputId(state.context, props2),\n        tabIndex: -1,\n        hidden: !itemState.editing,\n        defaultValue: itemState.editing ? state.context.editedTagValue : \"\",\n        onInput(event) {\n          send({ type: \"TAG_INPUT_TYPE\", value: event.currentTarget.value });\n        },\n        onBlur(event) {\n          send({ type: \"TAG_INPUT_BLUR\", target: event.relatedTarget, id: itemState.id });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (isComposingEvent(event)) return;\n          const keyMap = {\n            Enter() {\n              send(\"TAG_INPUT_ENTER\");\n            },\n            Escape() {\n              send(\"TAG_INPUT_ESCAPE\");\n            }\n          };\n          const exec = keyMap[event.key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        }\n      });\n    },\n    getItemDeleteTriggerProps(props2) {\n      const id = dom.getItemId(state.context, props2);\n      return normalize.button({\n        ...parts.itemDeleteTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getItemDeleteTriggerId(state.context, props2),\n        type: \"button\",\n        disabled,\n        \"aria-label\": translations.deleteTagTriggerLabel(props2.value),\n        tabIndex: -1,\n        onPointerDown(event) {\n          if (!interactive) {\n            event.preventDefault();\n          }\n        },\n        onPointerMove(event) {\n          if (!interactive) return;\n          dom.setHoverIntent(event.currentTarget);\n        },\n        onPointerLeave(event) {\n          if (!interactive) return;\n          dom.clearHoverIntent(event.currentTarget);\n        },\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"CLICK_DELETE_TAG\", id });\n        }\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getClearTriggerId(state.context),\n        type: \"button\",\n        \"data-readonly\": dataAttr(readOnly),\n        disabled,\n        \"aria-label\": translations.clearTriggerLabel,\n        hidden: empty,\n        onClick() {\n          if (!interactive) return;\n          send(\"CLEAR_VALUE\");\n        }\n      });\n    }\n  };\n}\nfunction endsWith(str, del) {\n  if (!del) return false;\n  if (typeof del === \"string\") return str.endsWith(del);\n  return new RegExp(`${del.source}$`).test(str);\n}\nvar { and, not, or } = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"tags-input\",\n      initial: ctx.autoFocus ? \"focused:input\" : \"idle\",\n      context: {\n        inputValue: \"\",\n        editedTagValue: \"\",\n        editedTagId: null,\n        highlightedTagId: null,\n        value: [],\n        dir: \"ltr\",\n        max: Infinity,\n        blurBehavior: void 0,\n        addOnPaste: false,\n        editable: true,\n        validate: () => true,\n        delimiter: \",\",\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        liveRegion: null,\n        log: { current: null, prev: null },\n        fieldsetDisabled: false,\n        translations: {\n          clearTriggerLabel: \"Clear all tags\",\n          deleteTagTriggerLabel: (value) => `Delete tag ${value}`,\n          tagAdded: (value) => `Added tag ${value}`,\n          tagsPasted: (values) => `Pasted ${values.length} tags`,\n          tagEdited: (value) => `Editing tag ${value}. Press enter to save or escape to cancel.`,\n          tagUpdated: (value) => `Tag update to ${value}`,\n          tagDeleted: (value) => `Tag ${value} deleted`,\n          tagSelected: (value) => `Tag ${value} selected. Press enter to edit, delete or backspace to remove.`,\n          ...ctx.translations\n        }\n      },\n      computed: {\n        count: (ctx2) => ctx2.value.length,\n        valueAsString: (ctx2) => JSON.stringify(ctx2.value),\n        trimmedInputValue: (ctx2) => ctx2.inputValue.trim(),\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        isInteractive: (ctx2) => !(ctx2.readOnly || ctx2.isDisabled),\n        isAtMax: (ctx2) => ctx2.count === ctx2.max,\n        isOverflowing: (ctx2) => ctx2.count > ctx2.max\n      },\n      watch: {\n        highlightedTagId: \"logHighlightedTag\",\n        isOverflowing: \"invokeOnInvalid\",\n        log: \"announceLog\",\n        inputValue: \"syncInputValue\",\n        editedTagValue: \"syncEditedTagInputValue\"\n      },\n      activities: [\"trackLiveRegion\", \"trackFormControlState\"],\n      exit: [\"clearLog\"],\n      on: {\n        DOUBLE_CLICK_TAG: {\n          internal: true,\n          guard: \"isTagEditable\",\n          target: \"editing:tag\",\n          actions: [\"setEditedId\", \"initializeEditedTagValue\"]\n        },\n        POINTER_DOWN_TAG: {\n          internal: true,\n          target: \"navigating:tag\",\n          actions: [\"highlightTag\", \"focusInput\"]\n        },\n        CLICK_DELETE_TAG: {\n          target: \"focused:input\",\n          actions: [\"deleteTag\"]\n        },\n        SET_INPUT_VALUE: {\n          actions: [\"setInputValue\"]\n        },\n        SET_VALUE: {\n          actions: [\"setValue\"]\n        },\n        CLEAR_TAG: {\n          actions: [\"deleteTag\"]\n        },\n        SET_VALUE_AT_INDEX: {\n          actions: [\"setValueAtIndex\"]\n        },\n        CLEAR_VALUE: {\n          actions: [\"clearTags\", \"clearInputValue\", \"focusInput\"]\n        },\n        ADD_TAG: {\n          actions: [\"addTag\"]\n        },\n        INSERT_TAG: {\n          // (!isAtMax || allowOverflow) && !inputValueIsEmpty\n          guard: and(or(not(\"isAtMax\"), \"allowOverflow\"), not(\"isInputValueEmpty\")),\n          actions: [\"addTag\", \"clearInputValue\"]\n        },\n        EXTERNAL_BLUR: [\n          { guard: \"addOnBlur\", actions: \"raiseInsertTagEvent\" },\n          { guard: \"clearOnBlur\", actions: \"clearInputValue\" }\n        ]\n      },\n      states: {\n        idle: {\n          on: {\n            FOCUS: \"focused:input\",\n            POINTER_DOWN: {\n              guard: not(\"hasHighlightedTag\"),\n              target: \"focused:input\"\n            }\n          }\n        },\n        \"focused:input\": {\n          tags: [\"focused\"],\n          entry: [\"focusInput\", \"clearHighlightedId\"],\n          activities: [\"trackInteractOutside\"],\n          on: {\n            TYPE: {\n              actions: \"setInputValue\"\n            },\n            BLUR: [\n              {\n                guard: \"addOnBlur\",\n                target: \"idle\",\n                actions: \"raiseInsertTagEvent\"\n              },\n              {\n                guard: \"clearOnBlur\",\n                target: \"idle\",\n                actions: \"clearInputValue\"\n              },\n              { target: \"idle\" }\n            ],\n            ENTER: {\n              actions: [\"raiseInsertTagEvent\"]\n            },\n            DELIMITER_KEY: {\n              actions: [\"raiseInsertTagEvent\"]\n            },\n            ARROW_LEFT: {\n              guard: and(\"hasTags\", \"isInputCaretAtStart\"),\n              target: \"navigating:tag\",\n              actions: \"highlightLastTag\"\n            },\n            BACKSPACE: {\n              target: \"navigating:tag\",\n              guard: and(\"hasTags\", \"isInputCaretAtStart\"),\n              actions: \"highlightLastTag\"\n            },\n            DELETE: {\n              guard: \"hasHighlightedTag\",\n              actions: [\"deleteHighlightedTag\", \"highlightTagAtIndex\"]\n            },\n            PASTE: [\n              {\n                guard: \"addOnPaste\",\n                actions: [\"setInputValue\", \"addTagFromPaste\"]\n              },\n              {\n                actions: \"setInputValue\"\n              }\n            ]\n          }\n        },\n        \"navigating:tag\": {\n          tags: [\"focused\"],\n          activities: [\"trackInteractOutside\"],\n          on: {\n            ARROW_RIGHT: [\n              {\n                guard: and(\"hasTags\", \"isInputCaretAtStart\", not(\"isLastTagHighlighted\")),\n                actions: \"highlightNextTag\"\n              },\n              { target: \"focused:input\" }\n            ],\n            ARROW_LEFT: {\n              actions: \"highlightPrevTag\"\n            },\n            BLUR: {\n              target: \"idle\",\n              actions: \"clearHighlightedId\"\n            },\n            ENTER: {\n              guard: and(\"isTagEditable\", \"hasHighlightedTag\"),\n              target: \"editing:tag\",\n              actions: [\"setEditedId\", \"initializeEditedTagValue\", \"focusEditedTagInput\"]\n            },\n            ARROW_DOWN: \"focused:input\",\n            ESCAPE: \"focused:input\",\n            TYPE: {\n              target: \"focused:input\",\n              actions: \"setInputValue\"\n            },\n            BACKSPACE: [\n              {\n                guard: \"isFirstTagHighlighted\",\n                actions: [\"deleteHighlightedTag\", \"highlightFirstTag\"]\n              },\n              {\n                guard: \"hasHighlightedTag\",\n                actions: [\"deleteHighlightedTag\", \"highlightPrevTag\"]\n              },\n              {\n                actions: [\"highlightLastTag\"]\n              }\n            ],\n            DELETE: {\n              target: \"focused:input\",\n              actions: [\"deleteHighlightedTag\", \"highlightTagAtIndex\"]\n            },\n            PASTE: [\n              {\n                guard: \"addOnPaste\",\n                target: \"focused:input\",\n                actions: [\"setInputValue\", \"addTagFromPaste\"]\n              },\n              {\n                target: \"focused:input\",\n                actions: \"setInputValue\"\n              }\n            ]\n          }\n        },\n        \"editing:tag\": {\n          tags: [\"editing\", \"focused\"],\n          entry: \"focusEditedTagInput\",\n          activities: [\"autoResize\"],\n          on: {\n            TAG_INPUT_TYPE: {\n              actions: \"setEditedTagValue\"\n            },\n            TAG_INPUT_ESCAPE: {\n              target: \"navigating:tag\",\n              actions: [\"clearEditedTagValue\", \"focusInput\", \"clearEditedId\", \"highlightTagAtIndex\"]\n            },\n            TAG_INPUT_BLUR: [\n              {\n                guard: \"isInputRelatedTarget\",\n                target: \"navigating:tag\",\n                actions: [\"clearEditedTagValue\", \"clearHighlightedId\", \"clearEditedId\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"clearEditedTagValue\", \"clearHighlightedId\", \"clearEditedId\", \"raiseExternalBlurEvent\"]\n              }\n            ],\n            TAG_INPUT_ENTER: [\n              {\n                guard: \"isEditedTagEmpty\",\n                target: \"navigating:tag\",\n                actions: [\"deleteHighlightedTag\", \"focusInput\", \"clearEditedId\", \"highlightTagAtIndex\"]\n              },\n              {\n                target: \"navigating:tag\",\n                actions: [\"submitEditedTagValue\", \"focusInput\", \"clearEditedId\", \"highlightTagAtIndex\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isInputRelatedTarget: (ctx2, evt) => evt.relatedTarget === dom.getInputEl(ctx2),\n        isAtMax: (ctx2) => ctx2.isAtMax,\n        hasHighlightedTag: (ctx2) => ctx2.highlightedTagId !== null,\n        isFirstTagHighlighted: (ctx2) => {\n          const firstItemId = dom.getItemId(ctx2, { value: ctx2.value[0], index: 0 });\n          return firstItemId === ctx2.highlightedTagId;\n        },\n        isEditedTagEmpty: (ctx2) => ctx2.editedTagValue.trim() === \"\",\n        isLastTagHighlighted: (ctx2) => {\n          const lastIndex = ctx2.value.length - 1;\n          const lastItemId = dom.getItemId(ctx2, { value: ctx2.value[lastIndex], index: lastIndex });\n          return lastItemId === ctx2.highlightedTagId;\n        },\n        isInputValueEmpty: (ctx2) => ctx2.trimmedInputValue.length === 0,\n        hasTags: (ctx2) => ctx2.value.length > 0,\n        allowOverflow: (ctx2) => !!ctx2.allowOverflow,\n        autoFocus: (ctx2) => !!ctx2.autoFocus,\n        addOnBlur: (ctx2) => ctx2.blurBehavior === \"add\",\n        clearOnBlur: (ctx2) => ctx2.blurBehavior === \"clear\",\n        addOnPaste: (ctx2) => !!ctx2.addOnPaste,\n        isTagEditable: (ctx2) => !!ctx2.editable,\n        isInputCaretAtStart(ctx2) {\n          const input = dom.getInputEl(ctx2);\n          if (!input) return false;\n          try {\n            return input.selectionStart === 0 && input.selectionEnd === 0;\n          } catch {\n            return input.value === \"\";\n          }\n        }\n      },\n      activities: {\n        trackInteractOutside(ctx2, _evt, { send }) {\n          return trackInteractOutside(dom.getInputEl(ctx2), {\n            exclude(target) {\n              return contains(dom.getRootEl(ctx2), target);\n            },\n            onFocusOutside: ctx2.onFocusOutside,\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              if (event.defaultPrevented) return;\n              send({ type: \"BLUR\", src: \"interact-outside\" });\n            }\n          });\n        },\n        trackFormControlState(ctx2, _evt, { send, initialContext }) {\n          return trackFormControl(dom.getHiddenInputEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              send({ type: \"SET_VALUE\", value: initialContext.value, src: \"form-reset\" });\n            }\n          });\n        },\n        autoResize(ctx2) {\n          if (!ctx2.editedTagValue || ctx2.idx == null || !ctx2.editable) return;\n          const input = dom.getTagInputEl(ctx2, { value: ctx2.editedTagValue, index: ctx2.idx });\n          return autoResizeInput(input);\n        },\n        trackLiveRegion(ctx2) {\n          ctx2.liveRegion = createLiveRegion({\n            level: \"assertive\",\n            document: dom.getDoc(ctx2)\n          });\n          return () => ctx2.liveRegion?.destroy();\n        }\n      },\n      actions: {\n        raiseInsertTagEvent(_, __, { self }) {\n          self.send(\"INSERT_TAG\");\n        },\n        raiseExternalBlurEvent(_, evt, { self }) {\n          self.send({ type: \"EXTERNAL_BLUR\", id: evt.id });\n        },\n        dispatchChangeEvent(ctx2) {\n          dom.dispatchInputEvent(ctx2);\n        },\n        highlightNextTag(ctx2) {\n          if (ctx2.highlightedTagId == null) return;\n          const next = dom.getNextEl(ctx2, ctx2.highlightedTagId);\n          set.highlightedId(ctx2, next?.id ?? null);\n        },\n        highlightFirstTag(ctx2) {\n          raf(() => {\n            const first = dom.getFirstEl(ctx2);\n            set.highlightedId(ctx2, first?.id ?? null);\n          });\n        },\n        highlightLastTag(ctx2) {\n          const last = dom.getLastEl(ctx2);\n          set.highlightedId(ctx2, last?.id ?? null);\n        },\n        highlightPrevTag(ctx2) {\n          if (ctx2.highlightedTagId == null) return;\n          const prev = dom.getPrevEl(ctx2, ctx2.highlightedTagId);\n          set.highlightedId(ctx2, prev?.id ?? null);\n        },\n        highlightTag(ctx2, evt) {\n          set.highlightedId(ctx2, evt.id);\n        },\n        highlightTagAtIndex(ctx2) {\n          raf(() => {\n            if (ctx2.idx == null) return;\n            const tagEl = dom.getTagElAtIndex(ctx2, ctx2.idx);\n            if (tagEl == null) return;\n            set.highlightedId(ctx2, tagEl.id);\n            ctx2.idx = void 0;\n          });\n        },\n        deleteTag(ctx2, evt) {\n          const index = dom.getIndexOfId(ctx2, evt.id);\n          const value = ctx2.value[index];\n          ctx2.log.prev = ctx2.log.current;\n          ctx2.log.current = { type: \"delete\", value };\n          set.value(ctx2, removeAt(ctx2.value, index));\n        },\n        deleteHighlightedTag(ctx2) {\n          if (ctx2.highlightedTagId == null) return;\n          const index = dom.getIndexOfId(ctx2, ctx2.highlightedTagId);\n          ctx2.idx = index;\n          const value = ctx2.value[index];\n          ctx2.log.prev = ctx2.log.current;\n          ctx2.log.current = { type: \"delete\", value };\n          set.value(ctx2, removeAt(ctx2.value, index));\n        },\n        setEditedId(ctx2, evt) {\n          ctx2.editedTagId = evt.id ?? ctx2.highlightedTagId;\n          ctx2.idx = dom.getIndexOfId(ctx2, ctx2.editedTagId);\n        },\n        clearEditedId(ctx2) {\n          ctx2.editedTagId = null;\n        },\n        clearEditedTagValue(ctx2) {\n          ctx2.editedTagValue = \"\";\n        },\n        setEditedTagValue(ctx2, evt) {\n          ctx2.editedTagValue = evt.value;\n        },\n        submitEditedTagValue(ctx2) {\n          if (!ctx2.editedTagId) return;\n          const index = dom.getIndexOfId(ctx2, ctx2.editedTagId);\n          set.valueAtIndex(ctx2, index, ctx2.editedTagValue ?? \"\");\n          ctx2.log.prev = ctx2.log.current;\n          ctx2.log.current = { type: \"update\", value: ctx2.editedTagValue };\n        },\n        setValueAtIndex(ctx2, evt) {\n          if (evt.value) {\n            ctx2.value[evt.index] = evt.value;\n            ctx2.log.prev = ctx2.log.current;\n            ctx2.log.current = { type: \"update\", value: evt.value };\n          } else {\n            warn(\"You need to provide a value for the tag\");\n          }\n        },\n        initializeEditedTagValue(ctx2) {\n          if (!ctx2.editedTagId) return;\n          const index = dom.getIndexOfId(ctx2, ctx2.editedTagId);\n          ctx2.editedTagValue = ctx2.value[index];\n        },\n        focusEditedTagInput(ctx2) {\n          raf(() => {\n            dom.getEditInputEl(ctx2)?.select();\n          });\n        },\n        setInputValue(ctx2, evt) {\n          set.inputValue(ctx2, evt.value);\n        },\n        clearHighlightedId(ctx2) {\n          ctx2.highlightedTagId = null;\n        },\n        focusInput(ctx2) {\n          raf(() => {\n            dom.getInputEl(ctx2)?.focus();\n          });\n        },\n        clearInputValue(ctx2) {\n          raf(() => {\n            set.inputValue(ctx2, \"\");\n          });\n        },\n        syncInputValue(ctx2) {\n          const inputEl = dom.getInputEl(ctx2);\n          dom.setValue(inputEl, ctx2.inputValue);\n        },\n        syncEditedTagInputValue(ctx2, evt) {\n          const id = ctx2.editedTagId || ctx2.highlightedTagId || evt.id;\n          if (id == null) return;\n          const editTagInputEl = dom.getById(ctx2, `${id}:input`);\n          dom.setValue(editTagInputEl, ctx2.editedTagValue);\n        },\n        addTag(ctx2, evt) {\n          const value = evt.value ?? ctx2.trimmedInputValue;\n          const guard = ctx2.validate?.({ inputValue: value, value: Array.from(ctx2.value) });\n          if (guard) {\n            const nextValue = uniq(ctx2.value.concat(value));\n            set.value(ctx2, nextValue);\n            ctx2.log.prev = ctx2.log.current;\n            ctx2.log.current = { type: \"add\", value };\n          } else {\n            ctx2.onValueInvalid?.({ reason: \"invalidTag\" });\n          }\n        },\n        addTagFromPaste(ctx2) {\n          raf(() => {\n            const value = ctx2.trimmedInputValue;\n            const guard = ctx2.validate?.({ inputValue: value, value: Array.from(ctx2.value) });\n            if (guard) {\n              const trimmedValue = ctx2.delimiter ? value.split(ctx2.delimiter).map((v) => v.trim()) : [value];\n              const nextValue = uniq(ctx2.value.concat(...trimmedValue));\n              set.value(ctx2, nextValue);\n              ctx2.log.prev = ctx2.log.current;\n              ctx2.log.current = { type: \"paste\", values: trimmedValue };\n            } else {\n              ctx2.onValueInvalid?.({ reason: \"invalidTag\" });\n            }\n            set.inputValue(ctx2, \"\");\n          });\n        },\n        clearTags(ctx2) {\n          set.value(ctx2, []);\n          ctx2.log.prev = ctx2.log.current;\n          ctx2.log.current = { type: \"clear\" };\n        },\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        invokeOnInvalid(ctx2) {\n          if (ctx2.isOverflowing) {\n            ctx2.onValueInvalid?.({ reason: \"rangeOverflow\" });\n          }\n        },\n        clearLog(ctx2) {\n          ctx2.log = { prev: null, current: null };\n        },\n        logHighlightedTag(ctx2) {\n          if (ctx2.highlightedTagId == null) return;\n          const index = dom.getIndexOfId(ctx2, ctx2.highlightedTagId);\n          ctx2.log.prev = ctx2.log.current;\n          ctx2.log.current = { type: \"select\", value: ctx2.value[index] };\n        },\n        // queue logs with screen reader and get it announced\n        announceLog(ctx2) {\n          if (!ctx2.log.current || ctx2.liveRegion == null) return;\n          const region = ctx2.liveRegion;\n          const { current, prev } = ctx2.log;\n          let msg;\n          switch (current.type) {\n            case \"add\":\n              msg = ctx2.translations.tagAdded(current.value);\n              break;\n            case \"delete\":\n              msg = ctx2.translations.tagDeleted(current.value);\n              break;\n            case \"update\":\n              msg = ctx2.translations.tagUpdated(current.value);\n              break;\n            case \"paste\":\n              msg = ctx2.translations.tagsPasted(current.values);\n              break;\n            case \"select\":\n              msg = ctx2.translations.tagSelected(current.value);\n              if (prev?.type === \"delete\") {\n                msg = `${ctx2.translations.tagDeleted(prev.value)}. ${msg}`;\n              } else if (prev?.type === \"update\") {\n                msg = `${ctx2.translations.tagUpdated(prev.value)}. ${msg}`;\n              }\n              break;\n          }\n          if (msg) region.announce(msg);\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    ctx.onValueChange?.({ value: Array.from(ctx.value) });\n    dom.dispatchInputEvent(ctx);\n  },\n  highlightChange: (ctx) => {\n    const highlightedValue = dom.getHighlightedTagValue(ctx);\n    ctx.onHighlightChange?.({ highlightedValue });\n  },\n  valueChange: (ctx) => {\n    ctx.onInputValueChange?.({ inputValue: ctx.inputValue });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  valueAtIndex: (ctx, index, value) => {\n    if (isEqual(ctx.value[index], value)) return;\n    ctx.value[index] = value;\n    invoke.change(ctx);\n  },\n  highlightedId: (ctx, id) => {\n    if (isEqual(ctx.highlightedTagId, id)) return;\n    ctx.highlightedTagId = id;\n    invoke.highlightChange(ctx);\n  },\n  inputValue: (ctx, value) => {\n    if (isEqual(ctx.inputValue, value)) return;\n    ctx.inputValue = value;\n    invoke.valueChange(ctx);\n  }\n};\nvar props = createProps()([\n  \"addOnPaste\",\n  \"allowOverflow\",\n  \"autoFocus\",\n  \"blurBehavior\",\n  \"delimiter\",\n  \"dir\",\n  \"disabled\",\n  \"editable\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"inputValue\",\n  \"invalid\",\n  \"max\",\n  \"maxLength\",\n  \"name\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInputValueChange\",\n  \"onInteractOutside\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"onValueInvalid\",\n  \"required\",\n  \"readOnly\",\n  \"translations\",\n  \"validate\",\n  \"value\"\n]);\nvar splitProps = createSplitProps(props);\nvar itemProps = createProps()([\"index\", \"disabled\", \"value\"]);\nvar splitItemProps = createSplitProps(itemProps);\n\nexport { anatomy, connect, itemProps, machine, props, splitItemProps, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}