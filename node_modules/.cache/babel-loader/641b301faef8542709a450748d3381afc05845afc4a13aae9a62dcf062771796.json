{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Link}from'react-router-dom';import{getApprovalStatus,approveByAdvisor,approveByCompany}from'../../services/applicationService';import{STATUS_COLORS,APPLICATION_STATUS,STATUS_LABELS}from'../../utils/constants/statuses';import{usePermissions}from'../../contexts/PermissionsContext';import{useAuth}from'../../contexts/AuthContext';// Función para escapar cadenas de texto para SQL\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function escapeSQLString(str){if(!str)return'';return str.replace(/'/g,\"''\");}// Interfaz para el estado de aprobación\n// Crear un tipo para aplicaciones con su estado de aprobación\nconst KanbanBoard=_ref=>{let{applications,onStatusChange}=_ref;const[isLoading,setIsLoading]=useState(false);const[errorMessage,setErrorMessage]=useState(null);const[appsWithApproval,setAppsWithApproval]=useState([]);const[processingAppId,setProcessingAppId]=useState(null);const{shouldFilterByEntity,getEntityFilter,isAdvisor,isCompanyAdmin}=usePermissions();const{user}=useAuth();const dragItemRef=useRef(null);const dragImageRef=useRef(null);const draggedItemIndexRef=useRef(-1);const draggedItemNewStatusRef=useRef('');const[autoTransitionMessage,setAutoTransitionMessage]=useState(null);// Cargar los estados de aprobación para cada aplicación\nuseEffect(()=>{const loadApprovalStatuses=async()=>{if(!applications||applications.length===0){setAppsWithApproval([]);return;}const entityFilter=shouldFilterByEntity()?getEntityFilter():null;try{const updatedApps=await Promise.all(applications.map(async app=>{try{const approvalStatus=await getApprovalStatus(app.id,entityFilter);return{...app,approvalStatus};}catch(error){console.error(`Error loading approval status for app ${app.id}:`,error);return app;}}));setAppsWithApproval(updatedApps);}catch(error){console.error(\"Error cargando estados de aprobación:\",error);setAppsWithApproval(applications.map(app=>({...app})));}};loadApprovalStatuses();},[applications,shouldFilterByEntity,getEntityFilter]);// Actualizar la lógica para nuevas aplicaciones para incluir todas las nuevas notificaciones\nuseEffect(()=>{// Verificar si hay aplicaciones que deberían estar en \"nuevo\" (recién creadas)\nconst newApplications=applications.filter(app=>{// Identificar aplicaciones recién creadas (menos de 24 horas)\nconst isNew=!app.status||app.status==='pending'||app.status==='solicitud';const createdAt=new Date(app.created_at);const now=new Date();const hoursElapsed=(now.getTime()-createdAt.getTime())/(1000*60*60);const isRecent=hoursElapsed<24;return isRecent&&(isNew||app.status==='new');});// Si hay aplicaciones nuevas sin status o con status pendiente/solicitud, asignarles \"nuevo\"\nif(newApplications.length>0){console.log('Aplicaciones nuevas detectadas:',newApplications);const updatedApps=[...appsWithApproval];newApplications.forEach(newApp=>{const index=updatedApps.findIndex(app=>app.id===newApp.id);if(index!==-1&&(!updatedApps[index].status||updatedApps[index].status==='pending'||updatedApps[index].status==='solicitud')){updatedApps[index]={...updatedApps[index],status:APPLICATION_STATUS.NEW};console.log(`Aplicación ${newApp.id} movida a estado NUEVO`);}});setAppsWithApproval(updatedApps);}},[applications]);// Usar applications como dependencia en lugar de appsWithApproval\n// Asegurar que nuevas aplicaciones se muestren inmediatamente\n// añadiendo una función de comprobación en el useEffect principal\nuseEffect(()=>{const checkForNewApplications=async()=>{// Verificar que tenemos usuario y permisos\nif(!(user!==null&&user!==void 0&&user.id))return;try{// Ejecutar esta comprobación solo si somos admin de empresa\nif(isCompanyAdmin()&&applications.length>0){// Obtener la fecha de hace 24 horas\nconst oneDayAgo=new Date();oneDayAgo.setHours(oneDayAgo.getHours()-24);// Buscar aplicaciones creadas en las últimas 24 horas\nconst recentApps=applications.filter(app=>{const createdAt=new Date(app.created_at);return createdAt>=oneDayAgo;});// Si hay aplicaciones recientes, asegurarnos de que aparezcan en el tablero\nif(recentApps.length>0){console.log(`Encontradas ${recentApps.length} aplicaciones recientes`);// Asegurar que todas estas aplicaciones están en nuestro estado local\n// y que tienen el estado correcto (NEW si no tienen un estado específico)\nconst updatedApps=[...appsWithApproval];let hasChanges=false;recentApps.forEach(recentApp=>{const index=updatedApps.findIndex(app=>app.id===recentApp.id);// Si la aplicación no está en nuestro estado, agregarla\nif(index===-1){console.log(`Agregando aplicación nueva ${recentApp.id} al estado`);updatedApps.push({...recentApp,status:recentApp.status||APPLICATION_STATUS.NEW,approvalStatus:{approvedByAdvisor:recentApp.approved_by_advisor||false,approvedByCompany:recentApp.approved_by_company||false}});hasChanges=true;}// Si no tiene estado o está en estado pendiente/solicitud, asignarle NEW\nelse if(!updatedApps[index].status||updatedApps[index].status==='pending'||updatedApps[index].status==='solicitud'){console.log(`Actualizando estado de ${recentApp.id} a NUEVO`);updatedApps[index]={...updatedApps[index],status:APPLICATION_STATUS.NEW};hasChanges=true;}});// Actualizar el estado solo si hubo cambios\nif(hasChanges){setAppsWithApproval(updatedApps);}}}}catch(error){console.error('Error verificando nuevas aplicaciones:',error);}};// Ejecutar la función de comprobación\ncheckForNewApplications();},[applications,user===null||user===void 0?void 0:user.id,isCompanyAdmin]);// Modificar la lógica para actualizar todas las aplicaciones con estado \"pending\" o \"solicitud\" a \"new\"\nuseEffect(()=>{// Si no hay aplicaciones, no hacer nada\nif(!applications||applications.length===0)return;console.log('Verificando estado de aplicaciones:',applications.map(a=>({id:a.id,status:a.status})));// Actualizar solo las aplicaciones con estado específico a \"new\" sin afectar las demás\nconst updatedApps=[...appsWithApproval];let hasChanges=false;applications.forEach(app=>{const index=updatedApps.findIndex(a=>a.id===app.id);const needsUpdate=!app.status||app.status==='pending'||app.status==='solicitud';// Solo actualizar si el estado necesita cambiar a \"new\"\nif(index!==-1&&needsUpdate){console.log(`Actualizando estado de aplicación ${app.id} de \"${app.status}\" a \"new\"`);updatedApps[index]={...updatedApps[index],status:APPLICATION_STATUS.NEW};hasChanges=true;}else if(index===-1){// Si la aplicación no está en el array, agregarla con su estado original\n// o \"new\" si no tiene estado o es pending/solicitud\nconst newStatus=needsUpdate?APPLICATION_STATUS.NEW:app.status;console.log(`Agregando aplicación ${app.id} con estado \"${newStatus}\"`);updatedApps.push({...app,status:newStatus,approvalStatus:{approvedByAdvisor:app.approved_by_advisor||false,approvedByCompany:app.approved_by_company||false}});hasChanges=true;}// Si existe y no necesita actualización, la dejamos como está\n});if(hasChanges){console.log('Actualizando aplicaciones:');updatedApps.forEach(app=>console.log(`- ${app.id}: ${app.status}`));setAppsWithApproval(updatedApps);}},[applications]);// Modificar la forma en que agrupamos las aplicaciones por estado para los administradores de empresa\n// para crear un flujo de trabajo independiente\nconst groupedApplications=React.useMemo(()=>{// Crear un objeto con todos los estados posibles como claves y arrays vacíos como valores\nconst initialGroups=Object.values(APPLICATION_STATUS).reduce((acc,status)=>{acc[status]=[];return acc;},{});// Para los administradores de empresa, usaremos un agrupamiento virtual basado en las aprobaciones\nif(isCompanyAdmin()){return appsWithApproval.reduce((acc,app)=>{// Si está en movimiento, respetar el estado de destino\nif(app.isMoving&&app.targetStatus){acc[app.targetStatus].push(app);return acc;}// Normalizar estados \"pending\" y \"solicitud\" a \"new\"\nif(!app.status||app.status==='pending'||app.status==='solicitud'){acc[APPLICATION_STATUS.NEW].push(app);return acc;}// Estados compartidos que siempre se muestran igual para todos los usuarios\nconst sharedStatuses=[APPLICATION_STATUS.POR_DISPERSAR,APPLICATION_STATUS.COMPLETED,APPLICATION_STATUS.EXPIRED,APPLICATION_STATUS.CANCELLED,APPLICATION_STATUS.REJECTED];if(sharedStatuses.includes(app.status)){acc[app.status].push(app);return acc;}// Para los estados independientes, usar la lógica personalizada para admin de empresa\nif(app.status===APPLICATION_STATUS.APPROVED){var _app$approvalStatus,_app$approvalStatus2,_app$approvalStatus3;// Si está aprobada por la empresa pero no por el asesor, mostrarla en \"aprobado por mi\" \nif((_app$approvalStatus=app.approvalStatus)!==null&&_app$approvalStatus!==void 0&&_app$approvalStatus.approvedByCompany&&!app.approvalStatus.approvedByAdvisor){acc[APPLICATION_STATUS.APPROVED].push(app);return acc;}// Si está aprobada por ambos, y el estado real es aprobado, mostrarla en aprobado\nif((_app$approvalStatus2=app.approvalStatus)!==null&&_app$approvalStatus2!==void 0&&_app$approvalStatus2.approvedByCompany&&(_app$approvalStatus3=app.approvalStatus)!==null&&_app$approvalStatus3!==void 0&&_app$approvalStatus3.approvedByAdvisor){acc[APPLICATION_STATUS.APPROVED].push(app);return acc;}// En otros casos, mostrarla en el estado que tenga según otras reglas\n}// Si está en revisión según la empresa\nif(app.status===APPLICATION_STATUS.IN_REVIEW){var _app$approvalStatus4;// Si no está aprobada por la empresa, mostrarla en \"en revisión\"\nif(!((_app$approvalStatus4=app.approvalStatus)!==null&&_app$approvalStatus4!==void 0&&_app$approvalStatus4.approvedByCompany)){acc[APPLICATION_STATUS.IN_REVIEW].push(app);return acc;}// Si está aprobada por la empresa, mostrarla en \"aprobado por mi\"\nacc[APPLICATION_STATUS.APPROVED].push(app);return acc;}// Para nuevas aplicaciones sin aprobación\nif(app.status===APPLICATION_STATUS.NEW){var _app$approvalStatus5;// Si está aprobada por la empresa, mostrarla en \"aprobado por mi\"\nif((_app$approvalStatus5=app.approvalStatus)!==null&&_app$approvalStatus5!==void 0&&_app$approvalStatus5.approvedByCompany){acc[APPLICATION_STATUS.APPROVED].push(app);return acc;}// Si está en revisión por la empresa\nif(app.company_review_status===true){acc[APPLICATION_STATUS.IN_REVIEW].push(app);return acc;}// Si no tiene marca especial, mostrarla como nueva\nacc[APPLICATION_STATUS.NEW].push(app);return acc;}// Para cualquier otro caso, usar el estado real\nacc[app.status].push(app);return acc;},initialGroups);}// Para asesores y otros roles, usamos el agrupamiento normal basado en estado\nreturn appsWithApproval.reduce((acc,app)=>{if(app.isMoving&&app.targetStatus){// Si está en movimiento, colocarla en la columna de destino\nacc[app.targetStatus].push(app);}else{// Si no, usar el estado normal, normalizando \"pending\" y \"solicitud\" a \"new\"\nlet status=app.status||'new';// Normalizar estados \"pending\" y \"solicitud\" a \"new\"\nif(status==='pending'||status==='solicitud'){status=APPLICATION_STATUS.NEW;}acc[status].push(app);}return acc;},initialGroups);},[appsWithApproval,isCompanyAdmin,isAdvisor]);// Corregir la generación de columnas para asegurar visualización correcta\nconst columns=React.useMemo(()=>{// Diferentes configuraciones de columnas según el rol\nif(isCompanyAdmin()){var _groupedApplications$,_groupedApplications$2;// Configuración especial para los administradores de empresa\nconst companyAdminColumns=[{id:APPLICATION_STATUS.NEW,title:STATUS_LABELS[APPLICATION_STATUS.NEW],color:STATUS_COLORS[APPLICATION_STATUS.NEW]||'neutral',applications:[...(groupedApplications[APPLICATION_STATUS.NEW]||[]),...(groupedApplications[APPLICATION_STATUS.PENDING]||[]),...(groupedApplications[APPLICATION_STATUS.SOLICITUD]||[])]},{id:APPLICATION_STATUS.IN_REVIEW,title:STATUS_LABELS[APPLICATION_STATUS.IN_REVIEW],color:STATUS_COLORS[APPLICATION_STATUS.IN_REVIEW]||'neutral',applications:groupedApplications[APPLICATION_STATUS.IN_REVIEW]||[]},{id:APPLICATION_STATUS.APPROVED,title:'Aprobado por mi',color:STATUS_COLORS[APPLICATION_STATUS.APPROVED]||'neutral',applications:groupedApplications[APPLICATION_STATUS.APPROVED]||[]},{id:APPLICATION_STATUS.POR_DISPERSAR,title:STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR],color:STATUS_COLORS[APPLICATION_STATUS.POR_DISPERSAR]||'neutral',applications:groupedApplications[APPLICATION_STATUS.POR_DISPERSAR]||[]},{id:APPLICATION_STATUS.COMPLETED,title:STATUS_LABELS[APPLICATION_STATUS.COMPLETED],color:STATUS_COLORS[APPLICATION_STATUS.COMPLETED]||'neutral',applications:groupedApplications[APPLICATION_STATUS.COMPLETED]||[]},{id:APPLICATION_STATUS.EXPIRED,title:STATUS_LABELS[APPLICATION_STATUS.EXPIRED],color:STATUS_COLORS[APPLICATION_STATUS.EXPIRED]||'neutral',applications:groupedApplications[APPLICATION_STATUS.EXPIRED]||[]}];// Si hay aplicaciones rechazadas, añadir esa columna también\nif(((_groupedApplications$=groupedApplications[APPLICATION_STATUS.REJECTED])===null||_groupedApplications$===void 0?void 0:_groupedApplications$.length)>0){companyAdminColumns.splice(5,0,{id:APPLICATION_STATUS.REJECTED,title:STATUS_LABELS[APPLICATION_STATUS.REJECTED],color:STATUS_COLORS[APPLICATION_STATUS.REJECTED]||'neutral',applications:groupedApplications[APPLICATION_STATUS.REJECTED]||[]});}// Añadir columna CANCELLED si hay aplicaciones\nif(((_groupedApplications$2=groupedApplications[APPLICATION_STATUS.CANCELLED])===null||_groupedApplications$2===void 0?void 0:_groupedApplications$2.length)>0){companyAdminColumns.push({id:APPLICATION_STATUS.CANCELLED,title:STATUS_LABELS[APPLICATION_STATUS.CANCELLED],color:STATUS_COLORS[APPLICATION_STATUS.CANCELLED]||'neutral',applications:groupedApplications[APPLICATION_STATUS.CANCELLED]||[]});}return companyAdminColumns;}// Para asesores, mostrar todas las columnas con PENDING y SOLICITUD integradas en NEW\nconst columnsForAdvisors=Object.values(APPLICATION_STATUS).map(status=>{if(status===APPLICATION_STATUS.NEW){return{id:status,title:STATUS_LABELS[status],color:STATUS_COLORS[status]||'neutral',applications:[...(groupedApplications[status]||[]),...(groupedApplications[APPLICATION_STATUS.PENDING]||[]),...(groupedApplications[APPLICATION_STATUS.SOLICITUD]||[])]};}else if(status===APPLICATION_STATUS.PENDING||status===APPLICATION_STATUS.SOLICITUD){// No mostrar estas columnas ya que sus aplicaciones se muestran en NEW\nreturn{id:status,title:STATUS_LABELS[status],color:STATUS_COLORS[status]||'neutral',applications:[]};}else{return{id:status,title:STATUS_LABELS[status],color:STATUS_COLORS[status]||'neutral',applications:groupedApplications[status]||[]};}});// Filtrar columnas vacías para mantener la interfaz limpia\nreturn columnsForAdvisors.filter(col=>!(col.id===APPLICATION_STATUS.PENDING||col.id===APPLICATION_STATUS.SOLICITUD));},[groupedApplications,isCompanyAdmin,isAdvisor]);// Función para actualizar localmente el estado de aprobación de una aplicación\nconst updateLocalApprovalStatus=(applicationId,updates)=>{setAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,approvalStatus:{...(app.approvalStatus||{approvedByAdvisor:false,approvedByCompany:false}),...updates}}:app));};const handleDragStart=(e,application,idx)=>{// Guardar la aplicación que estamos arrastrando\ndraggedItemIndexRef.current=idx;// Almacenar el elemento que estamos arrastrando para gestionar mejor el evento\ndragItemRef.current=e.currentTarget;// Establecer los datos que queremos transferir\ne.dataTransfer.setData('text/plain',application.id);e.dataTransfer.effectAllowed='move';// Crear una copia visual para el arrastre\nif(!dragImageRef.current){dragImageRef.current=e.currentTarget.cloneNode(true);dragImageRef.current.style.position='absolute';dragImageRef.current.style.top='-1000px';dragImageRef.current.style.opacity='0.8';dragImageRef.current.style.transform='scale(0.9)';dragImageRef.current.style.width=`${e.currentTarget.offsetWidth}px`;document.body.appendChild(dragImageRef.current);}// Establecer la imagen de arrastre\nif(dragImageRef.current){const rect=e.currentTarget.getBoundingClientRect();e.dataTransfer.setDragImage(dragImageRef.current,rect.width/2,20);}// Añadir clase CSS para mostrar visualmente que el elemento está siendo arrastrado\nif(e.currentTarget){e.currentTarget.classList.add('dragging');}};const handleDragEnd=e=>{// Eliminar clase CSS de arrastre\nif(dragItemRef.current){dragItemRef.current.classList.remove('dragging');dragItemRef.current=null;}if(e.currentTarget){e.currentTarget.classList.remove('dragging');}// Eliminar el elemento clonado para el arrastre\nif(dragImageRef.current){document.body.removeChild(dragImageRef.current);dragImageRef.current=null;}draggedItemIndexRef.current=-1;draggedItemNewStatusRef.current='';};const handleDragOver=(e,columnStatus)=>{e.preventDefault();e.stopPropagation();e.dataTransfer.dropEffect='move';// Guardar el nuevo estado para la actualización optimista\nif(draggedItemNewStatusRef.current!==columnStatus){draggedItemNewStatusRef.current=columnStatus;}// Añadir clase visual para indicar la columna destino\nif(e.currentTarget.classList.contains('kanban-column')){document.querySelectorAll('.kanban-column').forEach(col=>{col.classList.remove('drag-over');});e.currentTarget.classList.add('drag-over');}};// Ajustar la función canDragCard para permitir que los administradores de empresa\n// puedan mover tarjetas entre los estados permitidos\nconst canDragCard=app=>{// Si es asesor, puede mover todas las tarjetas excepto las rechazadas\nif(isAdvisor()){return app.status!==APPLICATION_STATUS.REJECTED;}// Si es administrador de empresa, puede mover tarjetas entre ciertos estados\nif(isCompanyAdmin()){// Estados restringidos que el admin de empresa nunca puede mover\nconst restrictedStatuses=[APPLICATION_STATUS.POR_DISPERSAR,APPLICATION_STATUS.COMPLETED,APPLICATION_STATUS.EXPIRED,APPLICATION_STATUS.CANCELLED,APPLICATION_STATUS.REJECTED];// Si la tarjeta está en un estado restringido, no se puede mover\nif(restrictedStatuses.includes(app.status)){return false;}// En cualquier otro caso, el admin de empresa puede mover la tarjeta\nreturn true;}// Para otros roles, no permitir arrastrar por defecto\nreturn false;};const handleDrop=async(e,newStatus)=>{e.preventDefault();e.stopPropagation();// Eliminar todas las clases de arrastre\ndocument.querySelectorAll('.kanban-column').forEach(col=>{col.classList.remove('drag-over');});// Recuperar el ID de la aplicación\nconst applicationId=e.dataTransfer.getData('text/plain');if(!applicationId||!onStatusChange||!(user!==null&&user!==void 0&&user.id))return;const application=appsWithApproval.find(app=>app.id===applicationId);if(!application)return;const oldStatus=application.status;// No hacer nada si el estatus es el mismo\nif(oldStatus===newStatus)return;console.log(`Intentando mover tarjeta ${applicationId} de ${oldStatus} a ${newStatus}`);// Verificar si el movimiento está permitido según el rol\nif(isCompanyAdmin()){// El admin de empresa solo puede mover tarjetas entre estos estados\nconst allowedStates=[APPLICATION_STATUS.NEW,APPLICATION_STATUS.IN_REVIEW,APPLICATION_STATUS.APPROVED];// Si intenta mover a un estado que no está permitido\nif(!allowedStates.includes(newStatus)){setErrorMessage(`No puedes mover solicitudes al estado \"${STATUS_LABELS[newStatus]}\". Solo puedes mover entre Nuevo, En Revisión y Aprobado por mi.`);return;}// Estados que nunca pueden ser movidos por un admin de empresa\nconst restrictedStatuses=[APPLICATION_STATUS.POR_DISPERSAR,APPLICATION_STATUS.COMPLETED,APPLICATION_STATUS.EXPIRED,APPLICATION_STATUS.CANCELLED,APPLICATION_STATUS.REJECTED];// Si la tarjeta está en un estado restringido, no permitir moverla\nif(restrictedStatuses.includes(oldStatus)){setErrorMessage(`No puedes mover solicitudes que están en estado \"${STATUS_LABELS[oldStatus]}\".`);return;}}try{// Establecer el ID de la aplicación que se está procesando\nsetProcessingAppId(applicationId);// Actualización optimista en UI para mejor fluidez\nconst updatedApps=[...appsWithApproval];const appIndex=updatedApps.findIndex(app=>app.id===applicationId);if(appIndex!==-1){console.log(\"App encontrada, realizando actualización optimista\");// Crear copia profunda de la aplicación para evitar referencias\nconst updatedApp={...updatedApps[appIndex],isMoving:true,targetStatus:newStatus,company_review_status:newStatus===APPLICATION_STATUS.IN_REVIEW&&isCompanyAdmin()?true:updatedApps[appIndex].company_review_status};// Lógica para manejar aprobaciones de manera optimista\nconst isMovingToApproved=newStatus===APPLICATION_STATUS.APPROVED;const isMovingFromApproved=oldStatus===APPLICATION_STATUS.APPROVED&&newStatus!==APPLICATION_STATUS.APPROVED;// Si se mueve a aprobado y el usuario es asesor, marcar como aprobado por asesor\nif(isMovingToApproved&&isAdvisor()&&user!==null&&user!==void 0&&user.entityId){updatedApp.approvalStatus={...(updatedApp.approvalStatus||{approvedByAdvisor:false,approvedByCompany:false}),approvedByAdvisor:true};}// Si se mueve a aprobado y el usuario es admin de empresa, marcar como aprobado por empresa\nif(isMovingToApproved&&isCompanyAdmin()&&user!==null&&user!==void 0&&user.entityId){updatedApp.approvalStatus={...(updatedApp.approvalStatus||{approvedByAdvisor:false,approvedByCompany:false}),approvedByCompany:true};}// Si se mueve desde aprobado, resetear los estados de aprobación según el rol\nif(isMovingFromApproved){if(isAdvisor()){updatedApp.approvalStatus={...(updatedApp.approvalStatus||{approvedByAdvisor:false,approvedByCompany:false}),approvedByAdvisor:false};}else if(isCompanyAdmin()){updatedApp.approvalStatus={...(updatedApp.approvalStatus||{approvedByAdvisor:false,approvedByCompany:false}),approvedByCompany:false};}}updatedApps[appIndex]=updatedApp;setAppsWithApproval(updatedApps);}// Procesar en el servidor en paralelo\nconst entityFilter=shouldFilterByEntity()?getEntityFilter():null;const isMovingToApproved=newStatus===APPLICATION_STATUS.APPROVED;// Crear un array de promesas para manejar todas las operaciones del servidor\nconst serverOperations=[];// Para administradores de empresa\nif(isCompanyAdmin()){const allowedStates=[APPLICATION_STATUS.NEW,APPLICATION_STATUS.IN_REVIEW,APPLICATION_STATUS.APPROVED];// Si está moviendo entre estados permitidos (flujo de empresa)\nif(allowedStates.includes(newStatus)&&allowedStates.includes(oldStatus)){console.log(\"Movimiento entre estados permitidos para admin de empresa\");// Si mueve a \"aprobado\", actualizar la aprobación de la empresa\nif(isMovingToApproved&&user!==null&&user!==void 0&&user.entityId&&application.company_id){serverOperations.push(approveByCompany(applicationId,\"Aprobado vía Kanban\",user.entityId,application.company_id,entityFilter||null).then(async result=>{// Verificar si la aplicación ya está aprobada por el asesor\nconst approvalStatus=await getApprovalStatus(applicationId);// Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\nif(approvalStatus!==null&&approvalStatus!==void 0&&approvalStatus.approvedByAdvisor&&approvalStatus!==null&&approvalStatus!==void 0&&approvalStatus.approvedByCompany){// Mostrar notificación de transición automática\nsetAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);// Actualizar el estado objetivo para la animación\nsetAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,targetStatus:APPLICATION_STATUS.POR_DISPERSAR,isMoving:true}:app));// Cambiar el estado a \"por_dispersar\"\nsetTimeout(()=>{if(onStatusChange){onStatusChange(application,APPLICATION_STATUS.POR_DISPERSAR);}// Limpiar el mensaje después de mostrar\nsetTimeout(()=>setAutoTransitionMessage(null),3000);},500);}else{// IMPORTANTE: Si no está aprobada por ambos, actualizar su estado visual para admin de empresa\nsetTimeout(()=>{setAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,approvalStatus:{...(app.approvalStatus||{approvedByAdvisor:false,approvedByCompany:false}),approvedByCompany:true},isMoving:false,targetStatus:undefined}:app));setProcessingAppId(null);},300);}return result;}).catch(error=>{console.error(\"Error al aprobar por empresa:\",error);}));}// Si mueve a \"en_revision\", actualizar el estado virtual para admin de empresa\nelse if(newStatus===APPLICATION_STATUS.IN_REVIEW){console.log(\"Moviendo a EN_REVISION\");// Aquí podríamos hacer una llamada API para actualizar company_review_status a true\n// pero por ahora lo manejaremos solo en el frontend\n// Actualizar localmente\nsetTimeout(()=>{setAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,company_review_status:true,status:oldStatus,// Mantener el estado real\nisMoving:false,targetStatus:undefined}:app));setProcessingAppId(null);},300);// No añadimos ninguna operación de servidor para cambiar el estado real\nreturn;}// Si mueve a \"nuevo\" desde \"en_revision\" o \"aprobado\", quitar las marcas\nelse if(newStatus===APPLICATION_STATUS.NEW){var _application$approval;console.log(\"Moviendo a NUEVO\");// Actualizar localmente\nsetTimeout(()=>{setAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,company_review_status:false,approvalStatus:{...(app.approvalStatus||{approvedByAdvisor:false,approvedByCompany:false}),approvedByCompany:false},status:oldStatus,// Mantener el estado real\nisMoving:false,targetStatus:undefined}:app));setProcessingAppId(null);},300);// Si estaba aprobado, tenemos que quitar la aprobación mediante la API\nif((_application$approval=application.approvalStatus)!==null&&_application$approval!==void 0&&_application$approval.approvedByCompany&&user!==null&&user!==void 0&&user.entityId&&application.company_id){// Utilizamos una API ficticia para quitar la aprobación - esto realmente debe implementarse en el backend\n// Por ahora, vamos a simular una actualización optimista en el frontend\nconsole.log(\"Quitando aprobación de empresa\");// En producción, esto debería ser una operación real del servidor\nsetTimeout(()=>{setAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,approvalStatus:{...(app.approvalStatus||{approvedByAdvisor:false,approvedByCompany:false}),approvedByCompany:false}}:app));},500);}return;}}}// Si se mueve a aprobado y el usuario es asesor, marcar como aprobado por asesor\nif(isMovingToApproved&&isAdvisor()&&user!==null&&user!==void 0&&user.entityId){serverOperations.push(approveByAdvisor(applicationId,\"Aprobado vía Kanban\",user.entityId,entityFilter||null).then(async result=>{// Verificar si la aplicación ya está aprobada por la empresa\nconst approvalStatus=await getApprovalStatus(applicationId);// Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\nif(approvalStatus!==null&&approvalStatus!==void 0&&approvalStatus.approvedByAdvisor&&approvalStatus!==null&&approvalStatus!==void 0&&approvalStatus.approvedByCompany){// Mostrar notificación de transición automática\nsetAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);// Actualizar el estado objetivo para la animación\nsetAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,targetStatus:APPLICATION_STATUS.POR_DISPERSAR,isMoving:true}:app));// Cambiar el estado a \"por_dispersar\"\nsetTimeout(()=>{if(onStatusChange){onStatusChange(application,APPLICATION_STATUS.POR_DISPERSAR);}// Limpiar el mensaje después de mostrar\nsetTimeout(()=>setAutoTransitionMessage(null),3000);},500);}return result;}).catch(error=>{console.error(\"Error al aprobar por asesor:\",error);}));}// Para asesor o para estados compartidos, siempre añadir la operación de cambio de estado\n// Para admin de empresa solo añadir para estados compartidos\nif(isAdvisor()||![APPLICATION_STATUS.NEW,APPLICATION_STATUS.IN_REVIEW,APPLICATION_STATUS.APPROVED].includes(newStatus)||![APPLICATION_STATUS.NEW,APPLICATION_STATUS.IN_REVIEW,APPLICATION_STATUS.APPROVED].includes(oldStatus)){if(onStatusChange){serverOperations.push(onStatusChange(application,newStatus));}}// Si no hay operaciones, terminar el procesamiento optimista\nif(serverOperations.length===0){setTimeout(()=>{console.log(\"No hay operaciones de servidor, finalizando optimista\");setAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,isMoving:false,targetStatus:undefined,// Para admins de empresa en su flujo, mantener la apariencia visual del cambio\n...(isCompanyAdmin()&&[APPLICATION_STATUS.NEW,APPLICATION_STATUS.IN_REVIEW,APPLICATION_STATUS.APPROVED].includes(newStatus)?{company_review_status:newStatus===APPLICATION_STATUS.IN_REVIEW}:{})}:app));setProcessingAppId(null);},300);return;}// Ejecutar todas las operaciones en paralelo después de un pequeño retraso para permitir la animación\nsetTimeout(async()=>{try{await Promise.all(serverOperations);console.log(\"Operaciones de servidor completadas con éxito\");// Actualizar el estado final en la UI\nsetAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,status:isCompanyAdmin()&&[APPLICATION_STATUS.NEW,APPLICATION_STATUS.IN_REVIEW,APPLICATION_STATUS.APPROVED].includes(newStatus)&&[APPLICATION_STATUS.NEW,APPLICATION_STATUS.IN_REVIEW,APPLICATION_STATUS.APPROVED].includes(oldStatus)?oldStatus// Mantener el estado real para admin de empresa en su flujo independiente\n:newStatus,isMoving:false,targetStatus:undefined}:app));}catch(error){setErrorMessage(`Error al actualizar el estatus: ${error.message}`);console.error(\"Error updating status:\",error);// Revertir el cambio optimista si falla\nsetAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,status:oldStatus,isMoving:false,targetStatus:undefined}:app));}finally{setProcessingAppId(null);}},300);// Retraso para permitir que la animación se muestre\n}catch(error){setErrorMessage(`Error al actualizar el estatus: ${error.message}`);console.error(\"Error updating status:\",error);// Revertir el cambio optimista si falla\nsetAppsWithApproval(prev=>prev.map(app=>app.id===applicationId?{...app,status:oldStatus,isMoving:false,targetStatus:undefined}:app));setProcessingAppId(null);}};const formatCurrency=amount=>{return new Intl.NumberFormat('es-MX',{style:'currency',currency:'MXN'}).format(amount);};// Renderizar los indicadores de aprobación\nconst renderApprovalIndicators=app=>{if(!app.approvalStatus)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mt-1 space-x-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tooltip tooltip-top flex items-center\",\"data-tip\":app.approvalStatus.approvedByAdvisor?\"Aprobado por asesor\":\"Pendiente de aprobación por asesor\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs mr-1\",children:\"Asesor:\"}),/*#__PURE__*/_jsx(\"div\",{className:`w-3 h-3 rounded-full ${app.approvalStatus.approvedByAdvisor?'bg-success animate-pulse':'bg-warning'}`})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tooltip tooltip-top flex items-center\",\"data-tip\":app.approvalStatus.approvedByCompany?\"Aprobado por empresa\":\"Pendiente de aprobación por empresa\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs mr-1\",children:\"Empresa:\"}),/*#__PURE__*/_jsx(\"div\",{className:`w-3 h-3 rounded-full ${app.approvalStatus.approvedByCompany?'bg-success animate-pulse':'bg-warning'}`})]}),app.approvalStatus.approvedByAdvisor&&app.approvalStatus.approvedByCompany&&/*#__PURE__*/_jsx(\"div\",{className:\"tooltip tooltip-top ml-2\",\"data-tip\":\"Aprobada por ambos\",children:/*#__PURE__*/_jsx(\"div\",{className:\"badge badge-success badge-sm\",children:\"Aprobado Total\"})})]});};const getProductLabel=type=>{const labels={'selected_plans':'Crédito a Plazos','product_simulations':'Simulación','auto_loan':'Crédito Auto','car_backed_loan':'Crédito con Garantía','personal_loan':'Préstamo Personal','cash_advance':'Adelanto de Efectivo'};return labels[type]||type;};// Función para obtener el color apropiado para la tarjeta según estado y aprobaciones\nconst getCardColor=app=>{const status=app.status||'';// Colores específicos según el estado\nswitch(status.toLowerCase()){case APPLICATION_STATUS.REJECTED:return'border-error bg-red-50';case APPLICATION_STATUS.APPROVED:// Si está aprobado, verificar el estado de las aprobaciones\nif(app.approvalStatus){const{approvedByAdvisor,approvedByCompany}=app.approvalStatus;if(approvedByAdvisor&&approvedByCompany){return'border-success bg-green-100';// Aprobado por ambos\n}else if(approvedByAdvisor){return'border-success bg-green-50';// Aprobado solo por asesor\n}else if(approvedByCompany){return'border-info bg-blue-50';// Aprobado solo por empresa\n}}return'border-success bg-green-50';case APPLICATION_STATUS.IN_REVIEW:return'border-info bg-blue-50';case APPLICATION_STATUS.NEW:return'border-warning bg-yellow-50';case APPLICATION_STATUS.PENDING:return'border-warning bg-amber-50';case APPLICATION_STATUS.POR_DISPERSAR:return'border-accent bg-purple-50';case APPLICATION_STATUS.COMPLETED:return'border-primary bg-indigo-50';case APPLICATION_STATUS.EXPIRED:return'border-error bg-red-100';case APPLICATION_STATUS.CANCELLED:return'border-neutral bg-gray-100';default:// Si el estado no coincide con ninguno de los anteriores, usar el color de la columna\nreturn`border-${app.status||'neutral'}`;}};// Estilos personalizados para mostrar claramente cuáles tarjetas se pueden arrastrar\nconst customStyles=`\n    .custom-scrollbar::-webkit-scrollbar {\n      width: 8px;\n      height: 8px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-track {\n      background: #f1f1f1;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb {\n      background: #888;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n    \n    .kanban-card {\n      transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out, box-shadow 0.3s ease-in-out, border-color 0.3s ease;\n      touch-action: none;\n      user-select: none;\n      will-change: transform, opacity;\n    }\n    \n    .kanban-card-draggable {\n      cursor: grab !important;\n      position: relative;\n    }\n    \n    .kanban-card-draggable:hover {\n      transform: translateY(-4px);\n      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.15);\n      border-color: #a855f7;\n      z-index: 10;\n    }\n    \n    .kanban-card-draggable:active {\n      cursor: grabbing !important;\n    }\n    \n    /* Indicator for draggable cards */\n    .kanban-card-draggable::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 20px;\n      height: 20px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23666'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 11.5V14m0-2.5v-6a1.5 1.5 0 113 0m-3 6a1.5 1.5 0 00-3 0v2a7.5 7.5 0 0015 0v-5a1.5 1.5 0 013 0m-6-3V11m0-5.5v-1a1.5 1.5 0 013 0v1m0 0V11' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n      transition: opacity 0.2s ease;\n    }\n    \n    .kanban-card-draggable:hover::after {\n      opacity: 1;\n    }\n    \n    .kanban-card-locked {\n      position: relative;\n      cursor: not-allowed !important;\n      opacity: 0.8;\n    }\n    \n    .kanban-card-locked::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 20px;\n      height: 20px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23999'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n    }\n    \n    .kanban-card.dragging {\n      opacity: 0.8;\n      transform: scale(1.03);\n      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      z-index: 50;\n    }\n    \n    .kanban-column {\n      transition: all 0.2s ease;\n      border-radius: 0.75rem;\n      will-change: transform, background-color;\n    }\n    \n    .kanban-column.drag-over {\n      background-color: rgba(var(--b2, 217 217 217) / 0.5);\n      transform: scale(1.01);\n      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n      border: 2px dashed #a855f7 !important;\n    }\n\n    .kanban-container {\n      scroll-behavior: smooth;\n    }\n    \n    @media (min-width: 768px) {\n      .kanban-card-draggable:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.15);\n      }\n    }\n    \n    /* Animaciones para cambios de estado */\n    @keyframes fadeIn {\n      0% { opacity: 0; }\n      100% { opacity: 1; }\n    }\n    \n    @keyframes slideIn {\n      0% { transform: translateY(10px); opacity: 0; }\n      100% { transform: translateY(0); opacity: 1; }\n    }\n    \n    @keyframes processingPulse {\n      0% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0.4); }\n      70% { box-shadow: 0 0 0 6px rgba(124, 58, 237, 0); }\n      100% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0); }\n    }\n    \n    .kanban-card {\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    .processing-toast {\n      position: fixed;\n      bottom: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    .auto-transition-toast {\n      position: fixed;\n      bottom: 70px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: #dcfce7;\n      border: 1px solid #86efac;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    /* Pop-up tooltip con instrucciones para arrastrar */\n    .drag-instructions {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      padding: 12px 16px;\n      z-index: 1000;\n      max-width: 300px;\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    /* Mejoras para vista mobile */\n    @media (max-width: 640px) {\n      .kanban-column {\n        min-height: 300px;\n      }\n    }\n  `;// Actualizar la función getDraggableClasses para mantener las clases visuales\nconst getDraggableClasses=app=>{// Definición de canDragCard directamente dentro de esta función para evitar error de variable indefinida\nconst isDraggable=canDragCard(app)&&app.id!==processingAppId;return isDraggable?'cursor-grab kanban-card-draggable':'cursor-not-allowed opacity-80 kanban-card-locked';};// Tooltips informativos para tarjetas que no se pueden arrastrar\nconst getDragTooltip=app=>{if(app.id===processingAppId){return\"Esta tarjeta está siendo procesada\";}// Si la tarjeta se puede arrastrar, mostrar mensaje informativo\nif(canDragCard(app)){return\"Arrastra para cambiar el estado\";}// Mensajes específicos según el rol y estado\nif(isCompanyAdmin&&isCompanyAdmin()){if(app.status===APPLICATION_STATUS.REJECTED){return\"Las solicitudes rechazadas solo pueden ser movidas por asesores\";}else if(app.status===APPLICATION_STATUS.POR_DISPERSAR){return\"Esta solicitud ya está lista para dispersión\";}else if(app.status===APPLICATION_STATUS.COMPLETED){return\"Esta solicitud ya está completada\";}else if(app.status===APPLICATION_STATUS.EXPIRED){return\"Esta solicitud ha expirado\";}else if(app.status===APPLICATION_STATUS.CANCELLED){return\"Esta solicitud fue cancelada\";}}return\"No tienes permiso para mover esta tarjeta\";};if(applications.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-base-200 p-6 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-medium text-center\",children:\"No hay solicitudes para mostrar\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-gray-500 mt-2\",children:\"No se encontraron solicitudes en el sistema\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full overflow-x-auto custom-scrollbar relative\",children:[/*#__PURE__*/_jsx(\"style\",{children:customStyles}),processingAppId&&/*#__PURE__*/_jsxs(\"div\",{className:\"processing-toast\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading loading-spinner loading-sm text-primary\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-medium\",children:\"Actualizando estado...\"})]}),autoTransitionMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"auto-transition-toast\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading loading-spinner loading-sm text-success\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-medium\",children:autoTransitionMessage})]}),errorMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 alert alert-error shadow-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"stroke-current flex-shrink-0 h-6 w-6\",fill:\"none\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"})}),/*#__PURE__*/_jsx(\"span\",{children:errorMessage})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-none\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm\",onClick:()=>setErrorMessage(null),children:\"Cerrar\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 2xl:grid-cols-6 gap-4 pb-4 kanban-container p-4\",style:{minWidth:'1000px'},children:columns.map(column=>/*#__PURE__*/_jsxs(\"div\",{className:`bg-base-100 rounded-xl shadow-md border-t-4 border-${column.color} border-l border-r border-b flex flex-col h-full kanban-column`,onDragOver:e=>{handleDragOver(e,column.id);},onDragLeave:e=>{e.currentTarget.classList.remove('drag-over');},onDrop:e=>{handleDrop(e,column.id);},children:[/*#__PURE__*/_jsxs(\"div\",{className:`text-center py-3 px-4 font-bold rounded-t-lg flex items-center justify-between bg-${column.color} bg-opacity-10`,children:[/*#__PURE__*/_jsx(\"span\",{className:`text-${column.color} font-bold text-lg`,children:column.title}),/*#__PURE__*/_jsx(\"span\",{className:`badge badge-${column.color} badge-lg`,children:column.applications.length})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 space-y-3 min-h-[500px] max-h-[calc(100vh-220px)] overflow-y-auto custom-scrollbar flex-grow\",children:column.applications.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full opacity-50 border-2 border-dashed border-base-300 rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-12 w-12 mx-auto text-gray-400\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:1,d:\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-2\",children:\"No hay solicitudes\"})]})}):column.applications.map((app,index)=>{const isCardDraggable=canDragCard(app)&&app.id!==processingAppId;return/*#__PURE__*/_jsx(\"div\",{\"data-tip\":getDragTooltip(app),className:`card shadow hover:shadow-lg transition-all ${getCardColor(app)} border-l-4 border-t border-r border-b hover:border-primary kanban-card relative ${app.id===processingAppId?'processing':''} ${app.isMoving?'opacity-90':''} ${getDraggableClasses(app)}`,draggable:isCardDraggable,onDragStart:isCardDraggable?e=>handleDragStart(e,app,index):undefined,onDragEnd:isCardDraggable?handleDragEnd:undefined,style:{animation:app.id===processingAppId?'processingPulse 1.5s infinite':''},children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 font-semibold\",children:app.client_name}),/*#__PURE__*/_jsx(\"span\",{className:`badge badge-${column.color} badge-md`,children:getProductLabel(app.application_type)})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600 mb-1 flex items-center\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-4 w-4 mr-1 inline\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"truncate max-w-[180px] font-medium\",children:app.company_name||\"Sin empresa\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-2\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-4 w-4 mr-1 text-primary\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-base font-bold text-primary\",children:formatCurrency(app.requested_amount||0)})]}),renderApprovalIndicators(app),/*#__PURE__*/_jsx(\"div\",{className:\"card-actions justify-end mt-3\",children:/*#__PURE__*/_jsx(Link,{to:`/applications/${app.id}`,className:\"btn btn-sm btn-primary w-full\",children:\"Ver Detalle\"})})]})]})},app.id);})})]},column.id))})]});};export default KanbanBoard;","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","getApprovalStatus","approveByAdvisor","approveByCompany","STATUS_COLORS","APPLICATION_STATUS","STATUS_LABELS","usePermissions","useAuth","jsx","_jsx","jsxs","_jsxs","escapeSQLString","str","replace","KanbanBoard","_ref","applications","onStatusChange","isLoading","setIsLoading","errorMessage","setErrorMessage","appsWithApproval","setAppsWithApproval","processingAppId","setProcessingAppId","shouldFilterByEntity","getEntityFilter","isAdvisor","isCompanyAdmin","user","dragItemRef","dragImageRef","draggedItemIndexRef","draggedItemNewStatusRef","autoTransitionMessage","setAutoTransitionMessage","loadApprovalStatuses","length","entityFilter","updatedApps","Promise","all","map","app","approvalStatus","id","error","console","newApplications","filter","isNew","status","createdAt","Date","created_at","now","hoursElapsed","getTime","isRecent","log","forEach","newApp","index","findIndex","NEW","checkForNewApplications","oneDayAgo","setHours","getHours","recentApps","hasChanges","recentApp","push","approvedByAdvisor","approved_by_advisor","approvedByCompany","approved_by_company","a","needsUpdate","newStatus","groupedApplications","useMemo","initialGroups","Object","values","reduce","acc","isMoving","targetStatus","sharedStatuses","POR_DISPERSAR","COMPLETED","EXPIRED","CANCELLED","REJECTED","includes","APPROVED","_app$approvalStatus","_app$approvalStatus2","_app$approvalStatus3","IN_REVIEW","_app$approvalStatus4","_app$approvalStatus5","company_review_status","columns","_groupedApplications$","_groupedApplications$2","companyAdminColumns","title","color","PENDING","SOLICITUD","splice","columnsForAdvisors","col","updateLocalApprovalStatus","applicationId","updates","prev","handleDragStart","e","application","idx","current","currentTarget","dataTransfer","setData","effectAllowed","cloneNode","style","position","top","opacity","transform","width","offsetWidth","document","body","appendChild","rect","getBoundingClientRect","setDragImage","classList","add","handleDragEnd","remove","removeChild","handleDragOver","columnStatus","preventDefault","stopPropagation","dropEffect","contains","querySelectorAll","canDragCard","restrictedStatuses","handleDrop","getData","find","oldStatus","allowedStates","appIndex","updatedApp","isMovingToApproved","isMovingFromApproved","entityId","serverOperations","company_id","then","result","setTimeout","undefined","catch","_application$approval","message","formatCurrency","amount","Intl","NumberFormat","currency","format","renderApprovalIndicators","className","children","getProductLabel","type","labels","getCardColor","toLowerCase","customStyles","getDraggableClasses","isDraggable","getDragTooltip","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","minWidth","column","onDragOver","onDragLeave","onDrop","stroke","isCardDraggable","draggable","onDragStart","onDragEnd","animation","client_name","application_type","company_name","requested_amount","to"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Application, getApprovalStatus, approveByAdvisor, approveByCompany } from '../../services/applicationService';\nimport { STATUS_COLORS, APPLICATION_STATUS, STATUS_LABELS } from '../../utils/constants/statuses';\nimport { usePermissions } from '../../contexts/PermissionsContext';\nimport { useAuth } from '../../contexts/AuthContext';\n\n// Función para escapar cadenas de texto para SQL\nfunction escapeSQLString(str: string) {\n  if (!str) return '';\n  return str.replace(/'/g, \"''\");\n}\n\ninterface KanbanBoardProps {\n  applications: Application[];\n  onStatusChange?: (application: Application, newStatus: string) => Promise<void>;\n}\n\n// Interfaz para el estado de aprobación\ninterface ApprovalStatus {\n  approvedByAdvisor: boolean;\n  approvedByCompany: boolean;\n}\n\n// Crear un tipo para aplicaciones con su estado de aprobación\ntype ApplicationWithApproval = Application & {\n  approvalStatus?: ApprovalStatus;\n  isMoving?: boolean;\n  targetStatus?: string;\n  company_review_status?: boolean;\n};\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({ applications, onStatusChange }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  const [appsWithApproval, setAppsWithApproval] = useState<ApplicationWithApproval[]>([]);\n  const [processingAppId, setProcessingAppId] = useState<string | null>(null);\n  const { shouldFilterByEntity, getEntityFilter, isAdvisor, isCompanyAdmin } = usePermissions();\n  const { user } = useAuth();\n  const dragItemRef = useRef<HTMLDivElement | null>(null);\n  const dragImageRef = useRef<HTMLDivElement | null>(null);\n  const draggedItemIndexRef = useRef<number>(-1);\n  const draggedItemNewStatusRef = useRef<string>('');\n  const [autoTransitionMessage, setAutoTransitionMessage] = useState<string | null>(null);\n  \n  // Cargar los estados de aprobación para cada aplicación\n  useEffect(() => {\n    const loadApprovalStatuses = async () => {\n      if (!applications || applications.length === 0) {\n        setAppsWithApproval([]);\n        return;\n      }\n      \n      const entityFilter = shouldFilterByEntity() ? getEntityFilter() : null;\n      \n      try {\n        const updatedApps = await Promise.all(\n          applications.map(async (app) => {\n            try {\n              const approvalStatus = await getApprovalStatus(app.id, entityFilter);\n              return { ...app, approvalStatus };\n            } catch (error) {\n              console.error(`Error loading approval status for app ${app.id}:`, error);\n              return app;\n            }\n          })\n        );\n        \n        setAppsWithApproval(updatedApps);\n      } catch (error) {\n        console.error(\"Error cargando estados de aprobación:\", error);\n        setAppsWithApproval(applications.map(app => ({ ...app })));\n      }\n    };\n    \n    loadApprovalStatuses();\n  }, [applications, shouldFilterByEntity, getEntityFilter]);\n  \n  // Actualizar la lógica para nuevas aplicaciones para incluir todas las nuevas notificaciones\n  useEffect(() => {\n    // Verificar si hay aplicaciones que deberían estar en \"nuevo\" (recién creadas)\n    const newApplications = applications.filter(app => {\n      // Identificar aplicaciones recién creadas (menos de 24 horas)\n      const isNew = !app.status || app.status === 'pending' || app.status === 'solicitud';\n      const createdAt = new Date(app.created_at);\n      const now = new Date();\n      const hoursElapsed = (now.getTime() - createdAt.getTime()) / (1000 * 60 * 60);\n      const isRecent = hoursElapsed < 24;\n      \n      return isRecent && (isNew || app.status === 'new');\n    });\n    \n    // Si hay aplicaciones nuevas sin status o con status pendiente/solicitud, asignarles \"nuevo\"\n    if (newApplications.length > 0) {\n      console.log('Aplicaciones nuevas detectadas:', newApplications);\n      const updatedApps = [...appsWithApproval];\n      newApplications.forEach(newApp => {\n        const index = updatedApps.findIndex(app => app.id === newApp.id);\n        if (index !== -1 && (!updatedApps[index].status || updatedApps[index].status === 'pending' || updatedApps[index].status === 'solicitud')) {\n          updatedApps[index] = {\n            ...updatedApps[index],\n            status: APPLICATION_STATUS.NEW\n          };\n          console.log(`Aplicación ${newApp.id} movida a estado NUEVO`);\n        }\n      });\n      \n      setAppsWithApproval(updatedApps);\n    }\n  }, [applications]); // Usar applications como dependencia en lugar de appsWithApproval\n\n  // Asegurar que nuevas aplicaciones se muestren inmediatamente\n  // añadiendo una función de comprobación en el useEffect principal\n  useEffect(() => {\n    const checkForNewApplications = async () => {\n      // Verificar que tenemos usuario y permisos\n      if (!user?.id) return;\n      \n      try {\n        // Ejecutar esta comprobación solo si somos admin de empresa\n        if (isCompanyAdmin() && applications.length > 0) {\n          // Obtener la fecha de hace 24 horas\n          const oneDayAgo = new Date();\n          oneDayAgo.setHours(oneDayAgo.getHours() - 24);\n          \n          // Buscar aplicaciones creadas en las últimas 24 horas\n          const recentApps = applications.filter(app => {\n            const createdAt = new Date(app.created_at);\n            return createdAt >= oneDayAgo;\n          });\n          \n          // Si hay aplicaciones recientes, asegurarnos de que aparezcan en el tablero\n          if (recentApps.length > 0) {\n            console.log(`Encontradas ${recentApps.length} aplicaciones recientes`);\n            \n            // Asegurar que todas estas aplicaciones están en nuestro estado local\n            // y que tienen el estado correcto (NEW si no tienen un estado específico)\n            const updatedApps = [...appsWithApproval];\n            let hasChanges = false;\n            \n            recentApps.forEach(recentApp => {\n              const index = updatedApps.findIndex(app => app.id === recentApp.id);\n              \n              // Si la aplicación no está en nuestro estado, agregarla\n              if (index === -1) {\n                console.log(`Agregando aplicación nueva ${recentApp.id} al estado`);\n                updatedApps.push({\n                  ...recentApp,\n                  status: recentApp.status || APPLICATION_STATUS.NEW,\n                  approvalStatus: {\n                    approvedByAdvisor: recentApp.approved_by_advisor || false,\n                    approvedByCompany: recentApp.approved_by_company || false\n                  }\n                });\n                hasChanges = true;\n              } \n              // Si no tiene estado o está en estado pendiente/solicitud, asignarle NEW\n              else if (!updatedApps[index].status || updatedApps[index].status === 'pending' || updatedApps[index].status === 'solicitud') {\n                console.log(`Actualizando estado de ${recentApp.id} a NUEVO`);\n                updatedApps[index] = {\n                  ...updatedApps[index],\n                  status: APPLICATION_STATUS.NEW\n                };\n                hasChanges = true;\n              }\n            });\n            \n            // Actualizar el estado solo si hubo cambios\n            if (hasChanges) {\n              setAppsWithApproval(updatedApps);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error verificando nuevas aplicaciones:', error);\n      }\n    };\n    \n    // Ejecutar la función de comprobación\n    checkForNewApplications();\n  }, [applications, user?.id, isCompanyAdmin]);\n  \n  // Modificar la lógica para actualizar todas las aplicaciones con estado \"pending\" o \"solicitud\" a \"new\"\n  useEffect(() => {\n    // Si no hay aplicaciones, no hacer nada\n    if (!applications || applications.length === 0) return;\n    \n    console.log('Verificando estado de aplicaciones:', applications.map(a => ({ id: a.id, status: a.status })));\n    \n    // Actualizar solo las aplicaciones con estado específico a \"new\" sin afectar las demás\n    const updatedApps = [...appsWithApproval];\n    let hasChanges = false;\n    \n    applications.forEach(app => {\n      const index = updatedApps.findIndex(a => a.id === app.id);\n      const needsUpdate = \n        !app.status || \n        app.status === 'pending' || \n        app.status === 'solicitud';\n      \n      // Solo actualizar si el estado necesita cambiar a \"new\"\n      if (index !== -1 && needsUpdate) {\n        console.log(`Actualizando estado de aplicación ${app.id} de \"${app.status}\" a \"new\"`);\n        updatedApps[index] = {\n          ...updatedApps[index],\n          status: APPLICATION_STATUS.NEW\n        };\n        hasChanges = true;\n      } else if (index === -1) {\n        // Si la aplicación no está en el array, agregarla con su estado original\n        // o \"new\" si no tiene estado o es pending/solicitud\n        const newStatus = needsUpdate ? APPLICATION_STATUS.NEW : (app.status as Application['status']);\n        console.log(`Agregando aplicación ${app.id} con estado \"${newStatus}\"`);\n        updatedApps.push({\n          ...app,\n          status: newStatus,\n          approvalStatus: {\n            approvedByAdvisor: app.approved_by_advisor || false,\n            approvedByCompany: app.approved_by_company || false\n          }\n        });\n        hasChanges = true;\n      }\n      // Si existe y no necesita actualización, la dejamos como está\n    });\n    \n    if (hasChanges) {\n      console.log('Actualizando aplicaciones:');\n      updatedApps.forEach(app => console.log(`- ${app.id}: ${app.status}`));\n      setAppsWithApproval(updatedApps);\n    }\n  }, [applications]);\n  \n  // Modificar la forma en que agrupamos las aplicaciones por estado para los administradores de empresa\n  // para crear un flujo de trabajo independiente\n  const groupedApplications = React.useMemo(() => {\n    // Crear un objeto con todos los estados posibles como claves y arrays vacíos como valores\n    const initialGroups = Object.values(APPLICATION_STATUS).reduce((acc, status) => {\n      acc[status] = [];\n      return acc;\n    }, {} as Record<string, ApplicationWithApproval[]>);\n    \n    // Para los administradores de empresa, usaremos un agrupamiento virtual basado en las aprobaciones\n    if (isCompanyAdmin()) {\n      return appsWithApproval.reduce((acc, app) => {\n        // Si está en movimiento, respetar el estado de destino\n        if (app.isMoving && app.targetStatus) {\n          acc[app.targetStatus].push(app);\n          return acc;\n        }\n        \n        // Normalizar estados \"pending\" y \"solicitud\" a \"new\"\n        if (!app.status || app.status === 'pending' || app.status === 'solicitud') {\n          acc[APPLICATION_STATUS.NEW].push(app);\n          return acc;\n        }\n        \n        // Estados compartidos que siempre se muestran igual para todos los usuarios\n        const sharedStatuses = [\n          APPLICATION_STATUS.POR_DISPERSAR,\n          APPLICATION_STATUS.COMPLETED,\n          APPLICATION_STATUS.EXPIRED,\n          APPLICATION_STATUS.CANCELLED,\n          APPLICATION_STATUS.REJECTED\n        ];\n        \n        if (sharedStatuses.includes(app.status as APPLICATION_STATUS)) {\n          acc[app.status].push(app);\n          return acc;\n        }\n        \n        // Para los estados independientes, usar la lógica personalizada para admin de empresa\n        if (app.status === APPLICATION_STATUS.APPROVED) {\n          // Si está aprobada por la empresa pero no por el asesor, mostrarla en \"aprobado por mi\" \n          if (app.approvalStatus?.approvedByCompany && !app.approvalStatus.approvedByAdvisor) {\n            acc[APPLICATION_STATUS.APPROVED].push(app);\n            return acc;\n          }\n          \n          // Si está aprobada por ambos, y el estado real es aprobado, mostrarla en aprobado\n          if (app.approvalStatus?.approvedByCompany && app.approvalStatus?.approvedByAdvisor) {\n            acc[APPLICATION_STATUS.APPROVED].push(app);\n            return acc;\n          }\n          \n          // En otros casos, mostrarla en el estado que tenga según otras reglas\n        }\n        \n        // Si está en revisión según la empresa\n        if (app.status === APPLICATION_STATUS.IN_REVIEW) {\n          // Si no está aprobada por la empresa, mostrarla en \"en revisión\"\n          if (!app.approvalStatus?.approvedByCompany) {\n            acc[APPLICATION_STATUS.IN_REVIEW].push(app);\n            return acc;\n          }\n          \n          // Si está aprobada por la empresa, mostrarla en \"aprobado por mi\"\n          acc[APPLICATION_STATUS.APPROVED].push(app);\n          return acc;\n        }\n        \n        // Para nuevas aplicaciones sin aprobación\n        if (app.status === APPLICATION_STATUS.NEW) {\n          // Si está aprobada por la empresa, mostrarla en \"aprobado por mi\"\n          if (app.approvalStatus?.approvedByCompany) {\n            acc[APPLICATION_STATUS.APPROVED].push(app);\n            return acc;\n          }\n          \n          // Si está en revisión por la empresa\n          if (app.company_review_status === true) {\n            acc[APPLICATION_STATUS.IN_REVIEW].push(app);\n            return acc;\n          }\n          \n          // Si no tiene marca especial, mostrarla como nueva\n          acc[APPLICATION_STATUS.NEW].push(app);\n          return acc;\n        }\n        \n        // Para cualquier otro caso, usar el estado real\n        acc[app.status].push(app);\n        return acc;\n      }, initialGroups);\n    }\n    \n    // Para asesores y otros roles, usamos el agrupamiento normal basado en estado\n    return appsWithApproval.reduce((acc, app) => {\n      if (app.isMoving && app.targetStatus) {\n        // Si está en movimiento, colocarla en la columna de destino\n        acc[app.targetStatus].push(app);\n      } else {\n        // Si no, usar el estado normal, normalizando \"pending\" y \"solicitud\" a \"new\"\n        let status = app.status || 'new';\n        \n        // Normalizar estados \"pending\" y \"solicitud\" a \"new\"\n        if (status === 'pending' || status === 'solicitud') {\n          status = APPLICATION_STATUS.NEW;\n        }\n        \n        acc[status].push(app);\n      }\n      return acc;\n    }, initialGroups);\n  }, [appsWithApproval, isCompanyAdmin, isAdvisor]);\n  \n  // Corregir la generación de columnas para asegurar visualización correcta\n  const columns = React.useMemo(() => {\n    // Diferentes configuraciones de columnas según el rol\n    if (isCompanyAdmin()) {\n      // Configuración especial para los administradores de empresa\n      const companyAdminColumns = [\n        {\n          id: APPLICATION_STATUS.NEW,\n          title: STATUS_LABELS[APPLICATION_STATUS.NEW],\n          color: STATUS_COLORS[APPLICATION_STATUS.NEW] || 'neutral',\n          applications: [\n            ...groupedApplications[APPLICATION_STATUS.NEW] || [],\n            ...groupedApplications[APPLICATION_STATUS.PENDING] || [],\n            ...groupedApplications[APPLICATION_STATUS.SOLICITUD] || []\n          ]\n        },\n        {\n          id: APPLICATION_STATUS.IN_REVIEW,\n          title: STATUS_LABELS[APPLICATION_STATUS.IN_REVIEW],\n          color: STATUS_COLORS[APPLICATION_STATUS.IN_REVIEW] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.IN_REVIEW] || []\n        },\n        {\n          id: APPLICATION_STATUS.APPROVED,\n          title: 'Aprobado por mi',\n          color: STATUS_COLORS[APPLICATION_STATUS.APPROVED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.APPROVED] || []\n        },\n        {\n          id: APPLICATION_STATUS.POR_DISPERSAR,\n          title: STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR],\n          color: STATUS_COLORS[APPLICATION_STATUS.POR_DISPERSAR] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.POR_DISPERSAR] || []\n        },\n        {\n          id: APPLICATION_STATUS.COMPLETED,\n          title: STATUS_LABELS[APPLICATION_STATUS.COMPLETED],\n          color: STATUS_COLORS[APPLICATION_STATUS.COMPLETED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.COMPLETED] || []\n        },\n        {\n          id: APPLICATION_STATUS.EXPIRED,\n          title: STATUS_LABELS[APPLICATION_STATUS.EXPIRED],\n          color: STATUS_COLORS[APPLICATION_STATUS.EXPIRED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.EXPIRED] || []\n        }\n      ];\n      \n      // Si hay aplicaciones rechazadas, añadir esa columna también\n      if (groupedApplications[APPLICATION_STATUS.REJECTED]?.length > 0) {\n        companyAdminColumns.splice(5, 0, {\n          id: APPLICATION_STATUS.REJECTED,\n          title: STATUS_LABELS[APPLICATION_STATUS.REJECTED],\n          color: STATUS_COLORS[APPLICATION_STATUS.REJECTED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.REJECTED] || []\n        });\n      }\n      \n      // Añadir columna CANCELLED si hay aplicaciones\n      if (groupedApplications[APPLICATION_STATUS.CANCELLED]?.length > 0) {\n        companyAdminColumns.push({\n          id: APPLICATION_STATUS.CANCELLED,\n          title: STATUS_LABELS[APPLICATION_STATUS.CANCELLED],\n          color: STATUS_COLORS[APPLICATION_STATUS.CANCELLED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.CANCELLED] || []\n        });\n      }\n      \n      return companyAdminColumns;\n    }\n    \n    // Para asesores, mostrar todas las columnas con PENDING y SOLICITUD integradas en NEW\n    const columnsForAdvisors = Object.values(APPLICATION_STATUS).map(status => {\n      if (status === APPLICATION_STATUS.NEW) {\n        return {\n          id: status,\n          title: STATUS_LABELS[status],\n          color: STATUS_COLORS[status] || 'neutral',\n          applications: [\n            ...groupedApplications[status] || [],\n            ...groupedApplications[APPLICATION_STATUS.PENDING] || [],\n            ...groupedApplications[APPLICATION_STATUS.SOLICITUD] || []\n          ]\n        };\n      } else if (status === APPLICATION_STATUS.PENDING || status === APPLICATION_STATUS.SOLICITUD) {\n        // No mostrar estas columnas ya que sus aplicaciones se muestran en NEW\n        return {\n          id: status,\n          title: STATUS_LABELS[status],\n          color: STATUS_COLORS[status] || 'neutral',\n          applications: []\n        };\n      } else {\n        return {\n          id: status,\n          title: STATUS_LABELS[status],\n          color: STATUS_COLORS[status] || 'neutral',\n          applications: groupedApplications[status] || []\n        };\n      }\n    });\n    \n    // Filtrar columnas vacías para mantener la interfaz limpia\n    return columnsForAdvisors.filter(col => \n      !(col.id === APPLICATION_STATUS.PENDING || col.id === APPLICATION_STATUS.SOLICITUD)\n    );\n  }, [groupedApplications, isCompanyAdmin, isAdvisor]);\n  \n  // Función para actualizar localmente el estado de aprobación de una aplicación\n  const updateLocalApprovalStatus = (applicationId: string, updates: Partial<{ approvedByAdvisor: boolean, approvedByCompany: boolean }>) => {\n    setAppsWithApproval(prev => \n      prev.map(app => \n        app.id === applicationId\n          ? {\n              ...app,\n              approvalStatus: {\n                ...(app.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n                ...updates\n              }\n            }\n          : app\n      )\n    );\n  };\n  \n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>, application: ApplicationWithApproval, idx: number) => {\n    // Guardar la aplicación que estamos arrastrando\n    draggedItemIndexRef.current = idx;\n    \n    // Almacenar el elemento que estamos arrastrando para gestionar mejor el evento\n    dragItemRef.current = e.currentTarget;\n    \n    // Establecer los datos que queremos transferir\n    e.dataTransfer.setData('text/plain', application.id);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // Crear una copia visual para el arrastre\n    if (!dragImageRef.current) {\n      dragImageRef.current = e.currentTarget.cloneNode(true) as HTMLDivElement;\n      dragImageRef.current.style.position = 'absolute';\n      dragImageRef.current.style.top = '-1000px';\n      dragImageRef.current.style.opacity = '0.8';\n      dragImageRef.current.style.transform = 'scale(0.9)';\n      dragImageRef.current.style.width = `${e.currentTarget.offsetWidth}px`;\n      document.body.appendChild(dragImageRef.current);\n    }\n    \n    // Establecer la imagen de arrastre\n    if (dragImageRef.current) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      e.dataTransfer.setDragImage(dragImageRef.current, rect.width / 2, 20);\n    }\n    \n    // Añadir clase CSS para mostrar visualmente que el elemento está siendo arrastrado\n    if (e.currentTarget) {\n      e.currentTarget.classList.add('dragging');\n    }\n  };\n  \n  const handleDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\n    // Eliminar clase CSS de arrastre\n    if (dragItemRef.current) {\n      dragItemRef.current.classList.remove('dragging');\n      dragItemRef.current = null;\n    }\n    \n    if (e.currentTarget) {\n      e.currentTarget.classList.remove('dragging');\n    }\n    \n    // Eliminar el elemento clonado para el arrastre\n    if (dragImageRef.current) {\n      document.body.removeChild(dragImageRef.current);\n      dragImageRef.current = null;\n    }\n    \n    draggedItemIndexRef.current = -1;\n    draggedItemNewStatusRef.current = '';\n  };\n  \n  const handleDragOver = (e: React.DragEvent, columnStatus: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n    \n    // Guardar el nuevo estado para la actualización optimista\n    if (draggedItemNewStatusRef.current !== columnStatus) {\n      draggedItemNewStatusRef.current = columnStatus;\n    }\n    \n    // Añadir clase visual para indicar la columna destino\n    if (e.currentTarget.classList.contains('kanban-column')) {\n      document.querySelectorAll('.kanban-column').forEach(col => {\n        col.classList.remove('drag-over');\n      });\n      e.currentTarget.classList.add('drag-over');\n    }\n  };\n  \n  // Ajustar la función canDragCard para permitir que los administradores de empresa\n  // puedan mover tarjetas entre los estados permitidos\n  const canDragCard = (app: ApplicationWithApproval): boolean => {\n    // Si es asesor, puede mover todas las tarjetas excepto las rechazadas\n    if (isAdvisor()) {\n      return app.status !== APPLICATION_STATUS.REJECTED;\n    }\n    \n    // Si es administrador de empresa, puede mover tarjetas entre ciertos estados\n    if (isCompanyAdmin()) {\n      // Estados restringidos que el admin de empresa nunca puede mover\n      const restrictedStatuses = [\n        APPLICATION_STATUS.POR_DISPERSAR,\n        APPLICATION_STATUS.COMPLETED,\n        APPLICATION_STATUS.EXPIRED,\n        APPLICATION_STATUS.CANCELLED,\n        APPLICATION_STATUS.REJECTED\n      ];\n      \n      // Si la tarjeta está en un estado restringido, no se puede mover\n      if (restrictedStatuses.includes(app.status as APPLICATION_STATUS)) {\n        return false;\n      }\n      \n      // En cualquier otro caso, el admin de empresa puede mover la tarjeta\n      return true;\n    }\n    \n    // Para otros roles, no permitir arrastrar por defecto\n    return false;\n  };\n  \n  const handleDrop = async (e: React.DragEvent<HTMLDivElement>, newStatus: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    // Eliminar todas las clases de arrastre\n    document.querySelectorAll('.kanban-column').forEach(col => {\n      col.classList.remove('drag-over');\n    });\n    \n    // Recuperar el ID de la aplicación\n    const applicationId = e.dataTransfer.getData('text/plain');\n    if (!applicationId || !onStatusChange || !user?.id) return;\n    \n    const application = appsWithApproval.find(app => app.id === applicationId);\n    if (!application) return;\n    \n    const oldStatus = application.status;\n    \n    // No hacer nada si el estatus es el mismo\n    if (oldStatus === newStatus) return;\n    \n    console.log(`Intentando mover tarjeta ${applicationId} de ${oldStatus} a ${newStatus}`);\n    \n    // Verificar si el movimiento está permitido según el rol\n    if (isCompanyAdmin()) {\n      // El admin de empresa solo puede mover tarjetas entre estos estados\n      const allowedStates = [\n        APPLICATION_STATUS.NEW,\n        APPLICATION_STATUS.IN_REVIEW,\n        APPLICATION_STATUS.APPROVED\n      ];\n      \n      // Si intenta mover a un estado que no está permitido\n      if (!allowedStates.includes(newStatus as APPLICATION_STATUS)) {\n        setErrorMessage(`No puedes mover solicitudes al estado \"${STATUS_LABELS[newStatus as keyof typeof STATUS_LABELS]}\". Solo puedes mover entre Nuevo, En Revisión y Aprobado por mi.`);\n        return;\n      }\n      \n      // Estados que nunca pueden ser movidos por un admin de empresa\n      const restrictedStatuses = [\n        APPLICATION_STATUS.POR_DISPERSAR,\n        APPLICATION_STATUS.COMPLETED,\n        APPLICATION_STATUS.EXPIRED,\n        APPLICATION_STATUS.CANCELLED,\n        APPLICATION_STATUS.REJECTED\n      ];\n      \n      // Si la tarjeta está en un estado restringido, no permitir moverla\n      if (restrictedStatuses.includes(oldStatus as APPLICATION_STATUS)) {\n        setErrorMessage(`No puedes mover solicitudes que están en estado \"${STATUS_LABELS[oldStatus as keyof typeof STATUS_LABELS]}\".`);\n        return;\n      }\n    }\n    \n    try {\n      // Establecer el ID de la aplicación que se está procesando\n      setProcessingAppId(applicationId);\n      \n      // Actualización optimista en UI para mejor fluidez\n      const updatedApps = [...appsWithApproval];\n      const appIndex = updatedApps.findIndex(app => app.id === applicationId);\n      \n      if (appIndex !== -1) {\n        console.log(\"App encontrada, realizando actualización optimista\");\n        // Crear copia profunda de la aplicación para evitar referencias\n        const updatedApp = { \n          ...updatedApps[appIndex], \n          isMoving: true,\n          targetStatus: newStatus,\n          company_review_status: newStatus === APPLICATION_STATUS.IN_REVIEW && isCompanyAdmin() ? true : updatedApps[appIndex].company_review_status\n        };\n        \n        // Lógica para manejar aprobaciones de manera optimista\n        const isMovingToApproved = newStatus === APPLICATION_STATUS.APPROVED;\n        const isMovingFromApproved = oldStatus === APPLICATION_STATUS.APPROVED && newStatus !== APPLICATION_STATUS.APPROVED;\n        \n        // Si se mueve a aprobado y el usuario es asesor, marcar como aprobado por asesor\n        if (isMovingToApproved && isAdvisor() && user?.entityId) {\n          updatedApp.approvalStatus = {\n            ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n            approvedByAdvisor: true\n          };\n        }\n        \n        // Si se mueve a aprobado y el usuario es admin de empresa, marcar como aprobado por empresa\n        if (isMovingToApproved && isCompanyAdmin() && user?.entityId) {\n          updatedApp.approvalStatus = {\n            ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n            approvedByCompany: true\n          };\n        }\n        \n        // Si se mueve desde aprobado, resetear los estados de aprobación según el rol\n        if (isMovingFromApproved) {\n          if (isAdvisor()) {\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n              approvedByAdvisor: false\n            };\n          } else if (isCompanyAdmin()) {\n            updatedApp.approvalStatus = {\n              ...(updatedApp.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n              approvedByCompany: false\n            };\n          }\n        }\n        \n        updatedApps[appIndex] = updatedApp;\n        setAppsWithApproval(updatedApps);\n      }\n      \n      // Procesar en el servidor en paralelo\n      const entityFilter = shouldFilterByEntity() ? getEntityFilter() : null;\n      const isMovingToApproved = newStatus === APPLICATION_STATUS.APPROVED;\n      \n      // Crear un array de promesas para manejar todas las operaciones del servidor\n      const serverOperations: Promise<any>[] = [];\n      \n      // Para administradores de empresa\n      if (isCompanyAdmin()) {\n        const allowedStates = [\n          APPLICATION_STATUS.NEW,\n          APPLICATION_STATUS.IN_REVIEW,\n          APPLICATION_STATUS.APPROVED\n        ];\n        \n        // Si está moviendo entre estados permitidos (flujo de empresa)\n        if (allowedStates.includes(newStatus as APPLICATION_STATUS) && \n            allowedStates.includes(oldStatus as APPLICATION_STATUS)) {\n            \n          console.log(\"Movimiento entre estados permitidos para admin de empresa\");\n            \n          // Si mueve a \"aprobado\", actualizar la aprobación de la empresa\n          if (isMovingToApproved && user?.entityId && application.company_id) {\n            serverOperations.push(\n              approveByCompany(\n                applicationId, \n                \"Aprobado vía Kanban\", \n                user.entityId, \n                application.company_id, \n                entityFilter || null\n              ).then(async (result) => {\n                // Verificar si la aplicación ya está aprobada por el asesor\n                const approvalStatus = await getApprovalStatus(applicationId);\n                \n                // Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\n                if (approvalStatus?.approvedByAdvisor && approvalStatus?.approvedByCompany) {\n                  // Mostrar notificación de transición automática\n                  setAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n                  \n                  // Actualizar el estado objetivo para la animación\n                  setAppsWithApproval(prev => \n                    prev.map(app => \n                      app.id === applicationId\n                        ? {\n                            ...app,\n                            targetStatus: APPLICATION_STATUS.POR_DISPERSAR,\n                            isMoving: true\n                          }\n                        : app\n                    )\n                  );\n                  \n                  // Cambiar el estado a \"por_dispersar\"\n                  setTimeout(() => {\n                    if (onStatusChange) {\n                      onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                    }\n                    // Limpiar el mensaje después de mostrar\n                    setTimeout(() => setAutoTransitionMessage(null), 3000);\n                  }, 500);\n                } else {\n                  // IMPORTANTE: Si no está aprobada por ambos, actualizar su estado visual para admin de empresa\n                  setTimeout(() => {\n                    setAppsWithApproval(prev => \n                      prev.map(app => \n                        app.id === applicationId\n                          ? {\n                              ...app,\n                              approvalStatus: {\n                                ...(app.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n                                approvedByCompany: true\n                              },\n                              isMoving: false,\n                              targetStatus: undefined\n                            }\n                          : app\n                      )\n                    );\n                    setProcessingAppId(null);\n                  }, 300);\n                }\n                \n                return result;\n              })\n              .catch(error => {\n                console.error(\"Error al aprobar por empresa:\", error);\n              })\n            );\n          } \n          // Si mueve a \"en_revision\", actualizar el estado virtual para admin de empresa\n          else if (newStatus === APPLICATION_STATUS.IN_REVIEW) {\n            console.log(\"Moviendo a EN_REVISION\");\n            // Aquí podríamos hacer una llamada API para actualizar company_review_status a true\n            // pero por ahora lo manejaremos solo en el frontend\n            \n            // Actualizar localmente\n            setTimeout(() => {\n              setAppsWithApproval(prev => \n                prev.map(app => \n                  app.id === applicationId\n                    ? {\n                        ...app,\n                        company_review_status: true,\n                        status: oldStatus, // Mantener el estado real\n                        isMoving: false,\n                        targetStatus: undefined\n                      }\n                    : app\n                )\n              );\n              setProcessingAppId(null);\n            }, 300);\n            \n            // No añadimos ninguna operación de servidor para cambiar el estado real\n            return;\n          }\n          // Si mueve a \"nuevo\" desde \"en_revision\" o \"aprobado\", quitar las marcas\n          else if (newStatus === APPLICATION_STATUS.NEW) {\n            console.log(\"Moviendo a NUEVO\");\n            // Actualizar localmente\n            setTimeout(() => {\n              setAppsWithApproval(prev => \n                prev.map(app => \n                  app.id === applicationId\n                    ? {\n                        ...app,\n                        company_review_status: false,\n                        approvalStatus: {\n                          ...(app.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n                          approvedByCompany: false\n                        },\n                        status: oldStatus, // Mantener el estado real\n                        isMoving: false,\n                        targetStatus: undefined\n                      }\n                    : app\n                )\n              );\n              setProcessingAppId(null);\n            }, 300);\n            \n            // Si estaba aprobado, tenemos que quitar la aprobación mediante la API\n            if (application.approvalStatus?.approvedByCompany && user?.entityId && application.company_id) {\n              // Utilizamos una API ficticia para quitar la aprobación - esto realmente debe implementarse en el backend\n              // Por ahora, vamos a simular una actualización optimista en el frontend\n              console.log(\"Quitando aprobación de empresa\");\n              \n              // En producción, esto debería ser una operación real del servidor\n              setTimeout(() => {\n                setAppsWithApproval(prev => \n                  prev.map(app => \n                    app.id === applicationId\n                      ? {\n                          ...app,\n                          approvalStatus: {\n                            ...(app.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n                            approvedByCompany: false\n                          }\n                        }\n                      : app\n                  )\n                );\n              }, 500);\n            }\n            \n            return;\n          }\n        }\n      }\n      \n      // Si se mueve a aprobado y el usuario es asesor, marcar como aprobado por asesor\n      if (isMovingToApproved && isAdvisor() && user?.entityId) {\n        serverOperations.push(\n          approveByAdvisor(applicationId, \"Aprobado vía Kanban\", user.entityId, entityFilter || null)\n            .then(async (result) => {\n              // Verificar si la aplicación ya está aprobada por la empresa\n              const approvalStatus = await getApprovalStatus(applicationId);\n              \n              // Si está aprobada por ambos, mover automáticamente a \"por_dispersar\"\n              if (approvalStatus?.approvedByAdvisor && approvalStatus?.approvedByCompany) {\n                // Mostrar notificación de transición automática\n                setAutoTransitionMessage(`La solicitud ha sido aprobada por asesor y empresa. Moviendo automáticamente a \"${STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR]}\"`);\n                \n                // Actualizar el estado objetivo para la animación\n                setAppsWithApproval(prev => \n                  prev.map(app => \n                    app.id === applicationId\n                      ? {\n                          ...app,\n                          targetStatus: APPLICATION_STATUS.POR_DISPERSAR,\n                          isMoving: true\n                        }\n                      : app\n                  )\n                );\n                \n                // Cambiar el estado a \"por_dispersar\"\n                setTimeout(() => {\n                  if (onStatusChange) {\n                    onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                  }\n                  // Limpiar el mensaje después de mostrar\n                  setTimeout(() => setAutoTransitionMessage(null), 3000);\n                }, 500);\n              }\n              \n              return result;\n            })\n            .catch(error => {\n              console.error(\"Error al aprobar por asesor:\", error);\n            })\n        );\n      }\n      \n      // Para asesor o para estados compartidos, siempre añadir la operación de cambio de estado\n      // Para admin de empresa solo añadir para estados compartidos\n      if (isAdvisor() || \n          ![APPLICATION_STATUS.NEW, APPLICATION_STATUS.IN_REVIEW, APPLICATION_STATUS.APPROVED].includes(newStatus as APPLICATION_STATUS) ||\n          ![APPLICATION_STATUS.NEW, APPLICATION_STATUS.IN_REVIEW, APPLICATION_STATUS.APPROVED].includes(oldStatus as APPLICATION_STATUS)) {\n        if (onStatusChange) {\n          serverOperations.push(onStatusChange(application, newStatus));\n        }\n      }\n      \n      // Si no hay operaciones, terminar el procesamiento optimista\n      if (serverOperations.length === 0) {\n        setTimeout(() => {\n          console.log(\"No hay operaciones de servidor, finalizando optimista\");\n          setAppsWithApproval(prev => \n            prev.map(app => \n              app.id === applicationId\n                ? {\n                    ...app,\n                    isMoving: false,\n                    targetStatus: undefined,\n                    // Para admins de empresa en su flujo, mantener la apariencia visual del cambio\n                    ...(isCompanyAdmin() && [APPLICATION_STATUS.NEW, APPLICATION_STATUS.IN_REVIEW, APPLICATION_STATUS.APPROVED].includes(newStatus as APPLICATION_STATUS)\n                      ? { company_review_status: newStatus === APPLICATION_STATUS.IN_REVIEW }\n                      : {})\n                  }\n                : app\n            )\n          );\n          setProcessingAppId(null);\n        }, 300);\n        return;\n      }\n      \n      // Ejecutar todas las operaciones en paralelo después de un pequeño retraso para permitir la animación\n      setTimeout(async () => {\n        try {\n          await Promise.all(serverOperations);\n          console.log(\"Operaciones de servidor completadas con éxito\");\n          \n          // Actualizar el estado final en la UI\n          setAppsWithApproval(prev => \n            prev.map(app => \n              app.id === applicationId\n                ? {\n                    ...app,\n                    status: isCompanyAdmin() && \n                          [APPLICATION_STATUS.NEW, APPLICATION_STATUS.IN_REVIEW, APPLICATION_STATUS.APPROVED].includes(newStatus as APPLICATION_STATUS) && \n                          [APPLICATION_STATUS.NEW, APPLICATION_STATUS.IN_REVIEW, APPLICATION_STATUS.APPROVED].includes(oldStatus as APPLICATION_STATUS)\n                      ? oldStatus as Application['status'] // Mantener el estado real para admin de empresa en su flujo independiente\n                      : newStatus as Application['status'],\n                    isMoving: false,\n                    targetStatus: undefined\n                  }\n                : app\n            )\n          );\n        } catch (error: any) {\n          setErrorMessage(`Error al actualizar el estatus: ${error.message}`);\n          console.error(\"Error updating status:\", error);\n          \n          // Revertir el cambio optimista si falla\n          setAppsWithApproval(prev => \n            prev.map(app => \n              app.id === applicationId\n                ? {\n                    ...app,\n                    status: oldStatus,\n                    isMoving: false,\n                    targetStatus: undefined\n                  }\n                : app\n            )\n          );\n        } finally {\n          setProcessingAppId(null);\n        }\n      }, 300); // Retraso para permitir que la animación se muestre\n      \n    } catch (error: any) {\n      setErrorMessage(`Error al actualizar el estatus: ${error.message}`);\n      console.error(\"Error updating status:\", error);\n      \n      // Revertir el cambio optimista si falla\n      setAppsWithApproval(prev => \n        prev.map(app => \n          app.id === applicationId\n            ? {\n                ...app,\n                status: oldStatus,\n                isMoving: false,\n                targetStatus: undefined\n              }\n            : app\n        )\n      );\n      setProcessingAppId(null);\n    }\n  };\n  \n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n    }).format(amount);\n  };\n  \n  // Renderizar los indicadores de aprobación\n  const renderApprovalIndicators = (app: ApplicationWithApproval) => {\n    if (!app.approvalStatus) return null;\n    \n    return (\n      <div className=\"flex items-center mt-1 space-x-2\">\n        <div className=\"tooltip tooltip-top flex items-center\" data-tip={app.approvalStatus.approvedByAdvisor ? \"Aprobado por asesor\" : \"Pendiente de aprobación por asesor\"}>\n          <span className=\"text-xs mr-1\">Asesor:</span>\n          <div className={`w-3 h-3 rounded-full ${app.approvalStatus.approvedByAdvisor ? 'bg-success animate-pulse' : 'bg-warning'}`}></div>\n        </div>\n        <div className=\"tooltip tooltip-top flex items-center\" data-tip={app.approvalStatus.approvedByCompany ? \"Aprobado por empresa\" : \"Pendiente de aprobación por empresa\"}>\n          <span className=\"text-xs mr-1\">Empresa:</span>\n          <div className={`w-3 h-3 rounded-full ${app.approvalStatus.approvedByCompany ? 'bg-success animate-pulse' : 'bg-warning'}`}></div>\n        </div>\n        \n        {/* Indicador de doble aprobación */}\n        {app.approvalStatus.approvedByAdvisor && app.approvalStatus.approvedByCompany && (\n          <div className=\"tooltip tooltip-top ml-2\" data-tip=\"Aprobada por ambos\">\n            <div className=\"badge badge-success badge-sm\">Aprobado Total</div>\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  const getProductLabel = (type: string) => {\n    const labels: Record<string, string> = {\n      'selected_plans': 'Crédito a Plazos',\n      'product_simulations': 'Simulación',\n      'auto_loan': 'Crédito Auto',\n      'car_backed_loan': 'Crédito con Garantía',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n    \n    return labels[type] || type;\n  };\n  \n  // Función para obtener el color apropiado para la tarjeta según estado y aprobaciones\n  const getCardColor = (app: ApplicationWithApproval) => {\n    const status = app.status || '';\n    \n    // Colores específicos según el estado\n    switch (status.toLowerCase()) {\n      case APPLICATION_STATUS.REJECTED:\n        return 'border-error bg-red-50';\n      case APPLICATION_STATUS.APPROVED:\n        // Si está aprobado, verificar el estado de las aprobaciones\n        if (app.approvalStatus) {\n          const { approvedByAdvisor, approvedByCompany } = app.approvalStatus;\n          if (approvedByAdvisor && approvedByCompany) {\n            return 'border-success bg-green-100'; // Aprobado por ambos\n          } else if (approvedByAdvisor) {\n            return 'border-success bg-green-50'; // Aprobado solo por asesor\n          } else if (approvedByCompany) {\n            return 'border-info bg-blue-50'; // Aprobado solo por empresa\n          }\n        }\n        return 'border-success bg-green-50';\n      case APPLICATION_STATUS.IN_REVIEW:\n        return 'border-info bg-blue-50';\n      case APPLICATION_STATUS.NEW:\n        return 'border-warning bg-yellow-50';\n      case APPLICATION_STATUS.PENDING:\n        return 'border-warning bg-amber-50';\n      case APPLICATION_STATUS.POR_DISPERSAR:\n        return 'border-accent bg-purple-50';\n      case APPLICATION_STATUS.COMPLETED:\n        return 'border-primary bg-indigo-50';\n      case APPLICATION_STATUS.EXPIRED:\n        return 'border-error bg-red-100';\n      case APPLICATION_STATUS.CANCELLED:\n        return 'border-neutral bg-gray-100';\n      default:\n        // Si el estado no coincide con ninguno de los anteriores, usar el color de la columna\n        return `border-${app.status || 'neutral'}`;\n    }\n  };\n  \n  // Estilos personalizados para mostrar claramente cuáles tarjetas se pueden arrastrar\n  const customStyles = `\n    .custom-scrollbar::-webkit-scrollbar {\n      width: 8px;\n      height: 8px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-track {\n      background: #f1f1f1;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb {\n      background: #888;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n    \n    .kanban-card {\n      transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out, box-shadow 0.3s ease-in-out, border-color 0.3s ease;\n      touch-action: none;\n      user-select: none;\n      will-change: transform, opacity;\n    }\n    \n    .kanban-card-draggable {\n      cursor: grab !important;\n      position: relative;\n    }\n    \n    .kanban-card-draggable:hover {\n      transform: translateY(-4px);\n      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.15);\n      border-color: #a855f7;\n      z-index: 10;\n    }\n    \n    .kanban-card-draggable:active {\n      cursor: grabbing !important;\n    }\n    \n    /* Indicator for draggable cards */\n    .kanban-card-draggable::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 20px;\n      height: 20px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23666'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 11.5V14m0-2.5v-6a1.5 1.5 0 113 0m-3 6a1.5 1.5 0 00-3 0v2a7.5 7.5 0 0015 0v-5a1.5 1.5 0 013 0m-6-3V11m0-5.5v-1a1.5 1.5 0 013 0v1m0 0V11' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n      transition: opacity 0.2s ease;\n    }\n    \n    .kanban-card-draggable:hover::after {\n      opacity: 1;\n    }\n    \n    .kanban-card-locked {\n      position: relative;\n      cursor: not-allowed !important;\n      opacity: 0.8;\n    }\n    \n    .kanban-card-locked::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 20px;\n      height: 20px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23999'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n    }\n    \n    .kanban-card.dragging {\n      opacity: 0.8;\n      transform: scale(1.03);\n      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      z-index: 50;\n    }\n    \n    .kanban-column {\n      transition: all 0.2s ease;\n      border-radius: 0.75rem;\n      will-change: transform, background-color;\n    }\n    \n    .kanban-column.drag-over {\n      background-color: rgba(var(--b2, 217 217 217) / 0.5);\n      transform: scale(1.01);\n      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n      border: 2px dashed #a855f7 !important;\n    }\n\n    .kanban-container {\n      scroll-behavior: smooth;\n    }\n    \n    @media (min-width: 768px) {\n      .kanban-card-draggable:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.15);\n      }\n    }\n    \n    /* Animaciones para cambios de estado */\n    @keyframes fadeIn {\n      0% { opacity: 0; }\n      100% { opacity: 1; }\n    }\n    \n    @keyframes slideIn {\n      0% { transform: translateY(10px); opacity: 0; }\n      100% { transform: translateY(0); opacity: 1; }\n    }\n    \n    @keyframes processingPulse {\n      0% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0.4); }\n      70% { box-shadow: 0 0 0 6px rgba(124, 58, 237, 0); }\n      100% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0); }\n    }\n    \n    .kanban-card {\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    .processing-toast {\n      position: fixed;\n      bottom: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    .auto-transition-toast {\n      position: fixed;\n      bottom: 70px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: #dcfce7;\n      border: 1px solid #86efac;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    /* Pop-up tooltip con instrucciones para arrastrar */\n    .drag-instructions {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      padding: 12px 16px;\n      z-index: 1000;\n      max-width: 300px;\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    /* Mejoras para vista mobile */\n    @media (max-width: 640px) {\n      .kanban-column {\n        min-height: 300px;\n      }\n    }\n  `;\n  \n  // Actualizar la función getDraggableClasses para mantener las clases visuales\n  const getDraggableClasses = (app: ApplicationWithApproval): string => {\n    // Definición de canDragCard directamente dentro de esta función para evitar error de variable indefinida\n    const isDraggable = canDragCard(app) && app.id !== processingAppId;\n    return isDraggable \n      ? 'cursor-grab kanban-card-draggable' \n      : 'cursor-not-allowed opacity-80 kanban-card-locked';\n  };\n\n  // Tooltips informativos para tarjetas que no se pueden arrastrar\n  const getDragTooltip = (app: ApplicationWithApproval): string => {\n    if (app.id === processingAppId) {\n      return \"Esta tarjeta está siendo procesada\";\n    }\n    \n    // Si la tarjeta se puede arrastrar, mostrar mensaje informativo\n    if (canDragCard(app)) {\n      return \"Arrastra para cambiar el estado\";\n    }\n    \n    // Mensajes específicos según el rol y estado\n    if (isCompanyAdmin && isCompanyAdmin()) {\n      if (app.status === APPLICATION_STATUS.REJECTED) {\n        return \"Las solicitudes rechazadas solo pueden ser movidas por asesores\";\n      } else if (app.status === APPLICATION_STATUS.POR_DISPERSAR) {\n        return \"Esta solicitud ya está lista para dispersión\";\n      } else if (app.status === APPLICATION_STATUS.COMPLETED) {\n        return \"Esta solicitud ya está completada\";\n      } else if (app.status === APPLICATION_STATUS.EXPIRED) {\n        return \"Esta solicitud ha expirado\";\n      } else if (app.status === APPLICATION_STATUS.CANCELLED) {\n        return \"Esta solicitud fue cancelada\";\n      }\n    }\n    \n    return \"No tienes permiso para mover esta tarjeta\";\n  };\n\n  if (applications.length === 0) {\n    return (\n      <div className=\"bg-base-200 p-6 rounded-lg\">\n        <h3 className=\"text-xl font-medium text-center\">No hay solicitudes para mostrar</h3>\n        <p className=\"text-center text-gray-500 mt-2\">No se encontraron solicitudes en el sistema</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"w-full overflow-x-auto custom-scrollbar relative\">\n      <style>{customStyles}</style>\n      \n      {/* Reemplazar el overlay de carga con una notificación flotante más sutil */}\n      {processingAppId && (\n        <div className=\"processing-toast\">\n          <span className=\"loading loading-spinner loading-sm text-primary\"></span>\n          <p className=\"font-medium\">Actualizando estado...</p>\n        </div>\n      )}\n      \n      {/* Notificación para transiciones automáticas */}\n      {autoTransitionMessage && (\n        <div className=\"auto-transition-toast\">\n          <span className=\"loading loading-spinner loading-sm text-success\"></span>\n          <p className=\"font-medium\">{autoTransitionMessage}</p>\n        </div>\n      )}\n      \n      {errorMessage && (\n        <div className=\"mb-4 alert alert-error shadow-lg\">\n          <div>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"stroke-current flex-shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span>{errorMessage}</span>\n          </div>\n          <div className=\"flex-none\">\n            <button className=\"btn btn-sm\" onClick={() => setErrorMessage(null)}>Cerrar</button>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 2xl:grid-cols-6 gap-4 pb-4 kanban-container p-4\" style={{ minWidth: '1000px' }}>\n        {columns.map(column => (\n          <div \n            key={column.id}\n            className={`bg-base-100 rounded-xl shadow-md border-t-4 border-${column.color} border-l border-r border-b flex flex-col h-full kanban-column`}\n            onDragOver={(e) => {\n              handleDragOver(e, column.id);\n            }}\n            onDragLeave={(e) => {\n              e.currentTarget.classList.remove('drag-over');\n            }}\n            onDrop={(e) => {\n              handleDrop(e, column.id);\n            }}\n          >\n            {/* Cabecera de columna con indicador de color */}\n            <div className={`text-center py-3 px-4 font-bold rounded-t-lg flex items-center justify-between bg-${column.color} bg-opacity-10`}>\n              <span className={`text-${column.color} font-bold text-lg`}>{column.title}</span>\n              <span className={`badge badge-${column.color} badge-lg`}>{column.applications.length}</span>\n            </div>\n            \n            <div className=\"p-3 space-y-3 min-h-[500px] max-h-[calc(100vh-220px)] overflow-y-auto custom-scrollbar flex-grow\">\n              {column.applications.length === 0 ? (\n                <div className=\"flex items-center justify-center h-full opacity-50 border-2 border-dashed border-base-300 rounded-lg p-6\">\n                  <div className=\"text-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 mx-auto text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    <p className=\"text-sm mt-2\">No hay solicitudes</p>\n                  </div>\n                </div>\n              ) : (\n                column.applications.map((app, index) => {\n                  const isCardDraggable = canDragCard(app) && app.id !== processingAppId;\n                  return (\n                    <div\n                      key={app.id}\n                      data-tip={getDragTooltip(app)}\n                      className={`card shadow hover:shadow-lg transition-all ${getCardColor(app)} border-l-4 border-t border-r border-b hover:border-primary kanban-card relative ${app.id === processingAppId ? 'processing' : ''} ${app.isMoving ? 'opacity-90' : ''} ${getDraggableClasses(app)}`}\n                      draggable={isCardDraggable}\n                      onDragStart={isCardDraggable ? (e) => handleDragStart(e, app, index) : undefined}\n                      onDragEnd={isCardDraggable ? handleDragEnd : undefined}\n                      style={{\n                        animation: app.id === processingAppId ? 'processingPulse 1.5s infinite' : ''\n                      }}\n                    >\n                      <div className=\"card-body p-4\">\n                        <div className=\"flex justify-between items-center\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"flex-1 font-semibold\">{app.client_name}</div>\n                            <span className={`badge badge-${column.color} badge-md`}>{getProductLabel(app.application_type)}</span>\n                          </div>\n                        </div>\n                        \n                        <div className=\"mt-2\">\n                          {/* Info de la empresa */}\n                          <div className=\"text-sm text-gray-600 mb-1 flex items-center\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 inline\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                            </svg>\n                            <span className=\"truncate max-w-[180px] font-medium\">\n                              {app.company_name || \"Sin empresa\"}\n                            </span>\n                          </div>\n                          \n                          {/* Monto */}\n                          <div className=\"flex items-center mb-2\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 text-primary\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>\n                            <span className=\"text-base font-bold text-primary\">\n                              {formatCurrency(app.requested_amount || 0)}\n                            </span>\n                          </div>\n                          \n                          {/* Indicadores de estado de aprobación */}\n                          {renderApprovalIndicators(app)}\n                          \n                          <div className=\"card-actions justify-end mt-3\">\n                            <Link to={`/applications/${app.id}`} className=\"btn btn-sm btn-primary w-full\">\n                              Ver Detalle\n                            </Link>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default KanbanBoard; "],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAED;AACA,KAAM,CAAAC,mBAAmB,CAAInJ,GAA4B,EAAa,CACpE;AACA,KAAM,CAAAoJ,WAAW,CAAGrC,WAAW,CAAC/G,GAAG,CAAC,EAAIA,GAAG,CAACE,EAAE,GAAKtB,eAAe,CAClE,MAAO,CAAAwK,WAAW,CACd,mCAAmC,CACnC,kDAAkD,CACxD,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAIrJ,GAA4B,EAAa,CAC/D,GAAIA,GAAG,CAACE,EAAE,GAAKtB,eAAe,CAAE,CAC9B,MAAO,oCAAoC,CAC7C,CAEA;AACA,GAAImI,WAAW,CAAC/G,GAAG,CAAC,CAAE,CACpB,MAAO,iCAAiC,CAC1C,CAEA;AACA,GAAIf,cAAc,EAAIA,cAAc,CAAC,CAAC,CAAE,CACtC,GAAIe,GAAG,CAACQ,MAAM,GAAKjD,kBAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}