{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/charts/StatusDistributionChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';\nimport { STATUS_COLORS, STATUS_LABELS } from '../../../utils/constants/statuses';\n\n// Registrar componentes necesarios de Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, Title);\nconst StatusDistributionChart = ({\n  data,\n  title = 'Distribución por Estado',\n  height = 240,\n  showLegend = true,\n  className = ''\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      data: [],\n      backgroundColor: [],\n      borderColor: [],\n      borderWidth: 1\n    }]\n  });\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Agrupar estados similares\n    const groupedData = {};\n    data.forEach(item => {\n      // Normalizar el status para agrupar (pending, PENDING, Pendiente, etc.)\n      let normalizedStatus = item.status.toLowerCase();\n      if (normalizedStatus.includes('pend') || normalizedStatus === 'new' || normalizedStatus === 'solicitud' || normalizedStatus === 'simulación') {\n        normalizedStatus = 'pending';\n      } else if (normalizedStatus.includes('review') || normalizedStatus.includes('proceso')) {\n        normalizedStatus = 'in_review';\n      } else if (normalizedStatus.includes('apro')) {\n        normalizedStatus = 'approved';\n      } else if (normalizedStatus.includes('recha')) {\n        normalizedStatus = 'rejected';\n      } else if (normalizedStatus.includes('comple')) {\n        normalizedStatus = 'completed';\n      } else if (normalizedStatus.includes('cancel')) {\n        normalizedStatus = 'cancelled';\n      } else if (normalizedStatus.includes('disper')) {\n        normalizedStatus = 'por_dispersar';\n      }\n      if (!groupedData[normalizedStatus]) {\n        groupedData[normalizedStatus] = 0;\n      }\n      groupedData[normalizedStatus] += item.count;\n    });\n\n    // Crear arrays para el gráfico\n    const statuses = Object.keys(groupedData);\n    const counts = Object.values(groupedData);\n\n    // Usar colores y etiquetas definidos en constantes\n    const colors = statuses.map(status => {\n      const colorKey = status.toUpperCase();\n      return STATUS_COLORS[colorKey] || '#cccccc';\n    });\n    const labels = statuses.map(status => {\n      const labelKey = status.toUpperCase();\n      return STATUS_LABELS[labelKey] || status;\n    });\n    setChartData({\n      labels,\n      datasets: [{\n        data: counts,\n        backgroundColor: colors,\n        borderColor: colors.map(color => color),\n        borderWidth: 1\n      }]\n    });\n  }, [data]);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: showLegend,\n        position: 'right',\n        labels: {\n          boxWidth: 15,\n          padding: 15,\n          font: {\n            size: 12\n          }\n        }\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            const label = context.label || '';\n            const value = context.raw || 0;\n            const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);\n            const percentage = Math.round(value / total * 100);\n            return `${label}: ${value} (${percentage}%)`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chart-container ${className}`,\n    style: {\n      height: `${height}px`\n    },\n    children: data && data.length > 0 ? /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full bg-base-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: \"Sin datos disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(StatusDistributionChart, \"cGFOOIkiL/dmfu9VwlvsyPSk4p8=\");\n_c = StatusDistributionChart;\nexport default StatusDistributionChart;\nvar _c;\n$RefreshReg$(_c, \"StatusDistributionChart\");","map":{"version":3,"names":["React","useEffect","useState","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","Title","STATUS_COLORS","STATUS_LABELS","jsxDEV","_jsxDEV","register","StatusDistributionChart","data","title","height","showLegend","className","_s","chartData","setChartData","labels","datasets","backgroundColor","borderColor","borderWidth","length","groupedData","forEach","item","normalizedStatus","status","toLowerCase","includes","count","statuses","Object","keys","counts","values","colors","map","colorKey","toUpperCase","labelKey","color","options","responsive","maintainAspectRatio","plugins","legend","display","position","boxWidth","padding","font","size","text","tooltip","callbacks","label","context","value","raw","total","chart","reduce","a","b","percentage","Math","round","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/charts/StatusDistributionChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';\nimport { STATUS_COLORS, STATUS_LABELS } from '../../../utils/constants/statuses';\n\n// Registrar componentes necesarios de Chart.js\nChartJS.register(ArcElement, Tooltip, Legend, Title);\n\ninterface StatusDistributionChartProps {\n  data: {\n    status: string;\n    count: number;\n  }[];\n  title?: string;\n  height?: number;\n  showLegend?: boolean;\n  className?: string;\n}\n\nconst StatusDistributionChart: React.FC<StatusDistributionChartProps> = ({\n  data,\n  title = 'Distribución por Estado',\n  height = 240,\n  showLegend = true,\n  className = '',\n}) => {\n  const [chartData, setChartData] = useState<any>({\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        backgroundColor: [],\n        borderColor: [],\n        borderWidth: 1,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Agrupar estados similares\n    const groupedData: Record<string, number> = {};\n    \n    data.forEach((item) => {\n      // Normalizar el status para agrupar (pending, PENDING, Pendiente, etc.)\n      let normalizedStatus = item.status.toLowerCase();\n      \n      if (normalizedStatus.includes('pend') || normalizedStatus === 'new' || normalizedStatus === 'solicitud' || normalizedStatus === 'simulación') {\n        normalizedStatus = 'pending';\n      } else if (normalizedStatus.includes('review') || normalizedStatus.includes('proceso')) {\n        normalizedStatus = 'in_review';\n      } else if (normalizedStatus.includes('apro')) {\n        normalizedStatus = 'approved';\n      } else if (normalizedStatus.includes('recha')) {\n        normalizedStatus = 'rejected';\n      } else if (normalizedStatus.includes('comple')) {\n        normalizedStatus = 'completed';\n      } else if (normalizedStatus.includes('cancel')) {\n        normalizedStatus = 'cancelled';\n      } else if (normalizedStatus.includes('disper')) {\n        normalizedStatus = 'por_dispersar';\n      }\n      \n      if (!groupedData[normalizedStatus]) {\n        groupedData[normalizedStatus] = 0;\n      }\n      groupedData[normalizedStatus] += item.count;\n    });\n    \n    // Crear arrays para el gráfico\n    const statuses = Object.keys(groupedData);\n    const counts = Object.values(groupedData);\n    \n    // Usar colores y etiquetas definidos en constantes\n    const colors = statuses.map(status => {\n      const colorKey = status.toUpperCase() as keyof typeof STATUS_COLORS;\n      return STATUS_COLORS[colorKey] || '#cccccc';\n    });\n    \n    const labels = statuses.map(status => {\n      const labelKey = status.toUpperCase() as keyof typeof STATUS_LABELS;\n      return STATUS_LABELS[labelKey] || status;\n    });\n    \n    setChartData({\n      labels,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n          borderColor: colors.map(color => color),\n          borderWidth: 1,\n        },\n      ],\n    });\n  }, [data]);\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: showLegend,\n        position: 'right' as const,\n        labels: {\n          boxWidth: 15,\n          padding: 15,\n          font: {\n            size: 12,\n          },\n        },\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (context: any) => {\n            const label = context.label || '';\n            const value = context.raw || 0;\n            const total = context.chart.data.datasets[0].data.reduce((a: number, b: number) => a + b, 0);\n            const percentage = Math.round((value / total) * 100);\n            return `${label}: ${value} (${percentage}%)`;\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div className={`chart-container ${className}`} style={{ height: `${height}px` }}>\n      {data && data.length > 0 ? (\n        <Pie data={chartData} options={options} />\n      ) : (\n        <div className=\"flex items-center justify-center h-full bg-base-200 rounded-lg\">\n          <p className=\"text-sm text-gray-500\">Sin datos disponibles</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StatusDistributionChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}