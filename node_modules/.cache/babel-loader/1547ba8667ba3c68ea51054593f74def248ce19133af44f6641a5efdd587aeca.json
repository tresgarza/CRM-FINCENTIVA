{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/clients/CompanySelector.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { executeQuery } from '../../services/mcpService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanySelector = ({\n  value,\n  onChange,\n  className\n}) => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setIsLoading(true);\n        const response = await executeQuery('SELECT id, name FROM companies ORDER BY name ASC');\n        if (response && response.data) {\n          setCompanies(response.data);\n        } else {\n          setError('No se pudieron cargar las empresas');\n        }\n      } catch (err) {\n        console.error('Error fetching companies:', err);\n        setError(err.message || 'Error al cargar las empresas');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCompanies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"label-text\",\n        children: [\"Empresa \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-error\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: value || '',\n      onChange: e => onChange(e.target.value),\n      className: `select select-bordered w-full ${className || ''}`,\n      disabled: isLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Seleccionar empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), companies.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: company.id,\n        children: company.name\n      }, company.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-error text-sm mt-1\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-sm mt-1\",\n      children: \"Cargando empresas...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanySelector, \"+q8ptnPoNrnoZ2OmfqeAqzglsZo=\");\n_c = CompanySelector;\nexport default CompanySelector;\nvar _c;\n$RefreshReg$(_c, \"CompanySelector\");","map":{"version":3,"names":["React","useState","useEffect","executeQuery","jsxDEV","_jsxDEV","CompanySelector","value","onChange","className","_s","companies","setCompanies","isLoading","setIsLoading","error","setError","fetchCompanies","response","data","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","e","target","disabled","map","company","id","name","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/clients/CompanySelector.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { executeQuery } from '../../services/mcpService';\n\ninterface Company {\n  id: string;\n  name: string;\n}\n\ninterface CompanySelectorProps {\n  value: string;\n  onChange: (value: string) => void;\n  className?: string;\n}\n\nconst CompanySelector: React.FC<CompanySelectorProps> = ({ value, onChange, className }) => {\n  const [companies, setCompanies] = useState<Company[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        setIsLoading(true);\n        const response = await executeQuery('SELECT id, name FROM companies ORDER BY name ASC');\n        \n        if (response && response.data) {\n          setCompanies(response.data);\n        } else {\n          setError('No se pudieron cargar las empresas');\n        }\n      } catch (err: any) {\n        console.error('Error fetching companies:', err);\n        setError(err.message || 'Error al cargar las empresas');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCompanies();\n  }, []);\n\n  return (\n    <div className=\"form-control w-full\">\n      <label className=\"label\">\n        <span className=\"label-text\">Empresa <span className=\"text-error\">*</span></span>\n      </label>\n      <select\n        value={value || ''}\n        onChange={(e) => onChange(e.target.value)}\n        className={`select select-bordered w-full ${className || ''}`}\n        disabled={isLoading}\n      >\n        <option value=\"\">Seleccionar empresa</option>\n        {companies.map((company) => (\n          <option key={company.id} value={company.id}>\n            {company.name}\n          </option>\n        ))}\n      </select>\n      {error && <span className=\"text-error text-sm mt-1\">{error}</span>}\n      {isLoading && <span className=\"text-sm mt-1\">Cargando empresas...</span>}\n    </div>\n  );\n};\n\nexport default CompanySelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}