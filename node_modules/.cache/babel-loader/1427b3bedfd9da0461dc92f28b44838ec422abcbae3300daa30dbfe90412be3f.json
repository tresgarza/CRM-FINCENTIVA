{"ast":null,"code":"'use client';\n\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as splitter from '@zag-js/splitter';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nconst useSplitter = (props = {}) => {\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    size: props.defaultSize,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    size: props.size,\n    onSizeChange: useEvent(props.onSizeChange, {\n      sync: true\n    }),\n    onSizeChangeEnd: useEvent(props.onSizeChangeEnd)\n  };\n  const [state, send] = useMachine(splitter.machine(initialContext), {\n    context\n  });\n  return splitter.connect(state, send, normalizeProps);\n};\nexport { useSplitter };","map":{"version":3,"names":["useMachine","normalizeProps","splitter","useId","useEnvironmentContext","useLocaleContext","useEvent","useSplitter","props","getRootNode","dir","initialContext","id","size","defaultSize","context","onSizeChange","sync","onSizeChangeEnd","state","send","machine","connect"],"sources":["/Users/diegogg98/NEW CRM MAR18/node_modules/@ark-ui/react/dist/components/splitter/use-splitter.js"],"sourcesContent":["'use client';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as splitter from '@zag-js/splitter';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\n\nconst useSplitter = (props = {}) => {\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    size: props.defaultSize,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    size: props.size,\n    onSizeChange: useEvent(props.onSizeChange, { sync: true }),\n    onSizeChangeEnd: useEvent(props.onSizeChangeEnd)\n  };\n  const [state, send] = useMachine(splitter.machine(initialContext), { context });\n  return splitter.connect(state, send, normalizeProps);\n};\n\nexport { useSplitter };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,OAAO,KAAKC,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAG,CAAC,CAAC,KAAK;EAClC,MAAM;IAAEC;EAAY,CAAC,GAAGL,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEM;EAAI,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAClC,MAAMM,cAAc,GAAG;IACrBC,EAAE,EAAET,KAAK,CAAC,CAAC;IACXO,GAAG;IACHD,WAAW;IACXI,IAAI,EAAEL,KAAK,CAACM,WAAW;IACvB,GAAGN;EACL,CAAC;EACD,MAAMO,OAAO,GAAG;IACd,GAAGJ,cAAc;IACjBE,IAAI,EAAEL,KAAK,CAACK,IAAI;IAChBG,YAAY,EAAEV,QAAQ,CAACE,KAAK,CAACQ,YAAY,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;IAC1DC,eAAe,EAAEZ,QAAQ,CAACE,KAAK,CAACU,eAAe;EACjD,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGpB,UAAU,CAACE,QAAQ,CAACmB,OAAO,CAACV,cAAc,CAAC,EAAE;IAAEI;EAAQ,CAAC,CAAC;EAC/E,OAAOb,QAAQ,CAACoB,OAAO,CAACH,KAAK,EAAEC,IAAI,EAAEnB,cAAc,CAAC;AACtD,CAAC;AAED,SAASM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}