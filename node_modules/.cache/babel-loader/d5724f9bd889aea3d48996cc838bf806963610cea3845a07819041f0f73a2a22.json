{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/messaging/MessageList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { MessageType } from '../../../services/messageService';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { Badge, Box, Flex, Text, useColorModeValue } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageList = ({\n  messages,\n  currentUserId,\n  isLoading = false\n}) => {\n  _s();\n  const messagesEndRef = useRef(null);\n  const bgColor = useColorModeValue('gray.50', 'gray.700');\n  const sentMessageBg = useColorModeValue('blue.50', 'blue.800');\n  const receivedMessageBg = useColorModeValue('white', 'gray.600');\n  const sentMessageBorder = useColorModeValue('blue.100', 'blue.700');\n  const receivedMessageBorder = useColorModeValue('gray.200', 'gray.500');\n\n  // Desplazamiento automático al final de la lista de mensajes cuando hay nuevos mensajes\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // Formatear fecha y hora para mostrar al usuario\n  const formatMessageDate = dateString => {\n    const date = new Date(dateString);\n    return format(date, 'dd MMM yyyy, HH:mm', {\n      locale: es\n    });\n  };\n\n  // Determinar si un mensaje se debe mostrar con fecha\n  const shouldShowDate = (index, currentMsg, prevMsg) => {\n    if (index === 0) return true;\n    if (!prevMsg) return true;\n    const currentDate = new Date(currentMsg.created_at);\n    const prevDate = new Date(prevMsg.created_at);\n    return currentDate.toDateString() !== prevDate.toDateString();\n  };\n\n  // Renderiza un indicador visual según el tipo de mensaje\n  const renderMessageTypeIndicator = type => {\n    switch (type) {\n      case MessageType.APPROVAL_REQUEST:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          colorScheme: \"orange\",\n          mr: 2,\n          children: \"Solicitud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this);\n      case MessageType.APPROVAL_RESPONSE:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          colorScheme: \"green\",\n          mr: 2,\n          children: \"Respuesta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this);\n      case MessageType.DOCUMENT_REQUEST:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          colorScheme: \"purple\",\n          mr: 2,\n          children: \"Documentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this);\n      case MessageType.PAYMENT_NOTIFICATION:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          colorScheme: \"blue\",\n          mr: 2,\n          children: \"Pago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      case MessageType.SYSTEM:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          colorScheme: \"gray\",\n          mr: 2,\n          children: \"Sistema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n      case MessageType.APPLICATION:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          colorScheme: \"teal\",\n          mr: 2,\n          children: \"Aplicaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    h: \"100%\",\n    overflowY: \"auto\",\n    px: 4,\n    py: 2,\n    bg: bgColor,\n    rounded: \"md\",\n    boxShadow: \"sm\",\n    css: {\n      '&::-webkit-scrollbar': {\n        width: '8px'\n      },\n      '&::-webkit-scrollbar-track': {\n        width: '10px',\n        background: useColorModeValue('gray.100', 'gray.700')\n      },\n      '&::-webkit-scrollbar-thumb': {\n        background: useColorModeValue('gray.300', 'gray.500'),\n        borderRadius: '24px'\n      }\n    },\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Cargando mensajes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.500\",\n        children: \"No hay mensajes en esta conversaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : messages.map((msg, index) => {\n      const isSentByMe = msg.sender_id === currentUserId;\n      const showDate = shouldShowDate(index, msg, messages[index - 1]);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [showDate && /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"center\",\n          my: 4,\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            px: 2,\n            py: 1,\n            borderRadius: \"full\",\n            children: format(new Date(msg.created_at), 'EEEE dd MMMM yyyy', {\n              locale: es\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: isSentByMe ? 'flex-end' : 'flex-start',\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            maxW: \"80%\",\n            bg: isSentByMe ? sentMessageBg : receivedMessageBg,\n            p: 3,\n            borderRadius: \"lg\",\n            borderWidth: \"1px\",\n            borderColor: isSentByMe ? sentMessageBorder : receivedMessageBorder,\n            boxShadow: \"sm\",\n            flexDirection: \"column\",\n            position: \"relative\",\n            _before: {\n              content: '\"\"',\n              position: 'absolute',\n              top: '10px',\n              [isSentByMe ? 'right' : 'left']: '-8px',\n              borderWidth: '8px',\n              borderStyle: 'solid',\n              borderColor: 'transparent',\n              [isSentByMe ? 'borderRightColor' : 'borderLeftColor']: isSentByMe ? sentMessageBg : receivedMessageBg,\n              transform: isSentByMe ? 'rotate(180deg)' : 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              alignItems: \"center\",\n              mb: 1,\n              children: [renderMessageTypeIndicator(msg.message_type), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"xs\",\n                color: \"gray.500\",\n                ml: \"auto\",\n                children: format(new Date(msg.created_at), 'HH:mm', {\n                  locale: es\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              whiteSpace: \"pre-wrap\",\n              children: msg.message_content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), !msg.read_status && !isSentByMe && /*#__PURE__*/_jsxDEV(Badge, {\n              size: \"sm\",\n              colorScheme: \"red\",\n              variant: \"outline\",\n              alignSelf: \"flex-end\",\n              mt: 1,\n              children: \"No le\\xEDdo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 21\n            }, this), msg.read_status && isSentByMe && /*#__PURE__*/_jsxDEV(Badge, {\n              size: \"sm\",\n              colorScheme: \"green\",\n              variant: \"outline\",\n              alignSelf: \"flex-end\",\n              mt: 1,\n              children: \"Le\\xEDdo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageList, \"LHUpfAfTgXb0hBQ53+CKN94a0MM=\", false, function () {\n  return [useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","MessageType","format","es","Badge","Box","Flex","Text","useColorModeValue","jsxDEV","_jsxDEV","MessageList","messages","currentUserId","isLoading","_s","messagesEndRef","bgColor","sentMessageBg","receivedMessageBg","sentMessageBorder","receivedMessageBorder","current","scrollIntoView","behavior","formatMessageDate","dateString","date","Date","locale","shouldShowDate","index","currentMsg","prevMsg","currentDate","created_at","prevDate","toDateString","renderMessageTypeIndicator","type","APPROVAL_REQUEST","colorScheme","mr","children","fileName","_jsxFileName","lineNumber","columnNumber","APPROVAL_RESPONSE","DOCUMENT_REQUEST","PAYMENT_NOTIFICATION","SYSTEM","APPLICATION","h","overflowY","px","py","bg","rounded","boxShadow","css","width","background","borderRadius","justify","align","length","color","map","msg","isSentByMe","sender_id","showDate","Fragment","my","mb","display","flexDirection","alignItems","maxW","p","borderWidth","borderColor","position","_before","content","top","borderStyle","transform","message_type","fontSize","ml","whiteSpace","message_content","read_status","size","variant","alignSelf","mt","id","ref","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/messaging/MessageList.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Message, MessageType } from '../../../services/messageService';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { Avatar, Badge, Box, Flex, Text, useColorModeValue } from '@chakra-ui/react';\n\ninterface MessageListProps {\n  messages: Message[];\n  currentUserId: string;\n  isLoading?: boolean;\n}\n\nconst MessageList: React.FC<MessageListProps> = ({ messages, currentUserId, isLoading = false }) => {\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const bgColor = useColorModeValue('gray.50', 'gray.700');\n  const sentMessageBg = useColorModeValue('blue.50', 'blue.800');\n  const receivedMessageBg = useColorModeValue('white', 'gray.600');\n  const sentMessageBorder = useColorModeValue('blue.100', 'blue.700');\n  const receivedMessageBorder = useColorModeValue('gray.200', 'gray.500');\n\n  // Desplazamiento automático al final de la lista de mensajes cuando hay nuevos mensajes\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  // Formatear fecha y hora para mostrar al usuario\n  const formatMessageDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    return format(date, 'dd MMM yyyy, HH:mm', { locale: es });\n  };\n\n  // Determinar si un mensaje se debe mostrar con fecha\n  const shouldShowDate = (index: number, currentMsg: Message, prevMsg?: Message): boolean => {\n    if (index === 0) return true;\n    if (!prevMsg) return true;\n    \n    const currentDate = new Date(currentMsg.created_at);\n    const prevDate = new Date(prevMsg.created_at);\n    \n    return currentDate.toDateString() !== prevDate.toDateString();\n  };\n\n  // Renderiza un indicador visual según el tipo de mensaje\n  const renderMessageTypeIndicator = (type: MessageType) => {\n    switch (type) {\n      case MessageType.APPROVAL_REQUEST:\n        return <Badge colorScheme=\"orange\" mr={2}>Solicitud</Badge>;\n      case MessageType.APPROVAL_RESPONSE:\n        return <Badge colorScheme=\"green\" mr={2}>Respuesta</Badge>;\n      case MessageType.DOCUMENT_REQUEST:\n        return <Badge colorScheme=\"purple\" mr={2}>Documentos</Badge>;\n      case MessageType.PAYMENT_NOTIFICATION:\n        return <Badge colorScheme=\"blue\" mr={2}>Pago</Badge>;\n      case MessageType.SYSTEM:\n        return <Badge colorScheme=\"gray\" mr={2}>Sistema</Badge>;\n      case MessageType.APPLICATION:\n        return <Badge colorScheme=\"teal\" mr={2}>Aplicación</Badge>;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box \n      h=\"100%\" \n      overflowY=\"auto\" \n      px={4} \n      py={2} \n      bg={bgColor} \n      rounded=\"md\"\n      boxShadow=\"sm\"\n      css={{\n        '&::-webkit-scrollbar': {\n          width: '8px',\n        },\n        '&::-webkit-scrollbar-track': {\n          width: '10px',\n          background: useColorModeValue('gray.100', 'gray.700'),\n        },\n        '&::-webkit-scrollbar-thumb': {\n          background: useColorModeValue('gray.300', 'gray.500'),\n          borderRadius: '24px',\n        },\n      }}\n    >\n      {isLoading ? (\n        <Flex justify=\"center\" align=\"center\" h=\"100%\">\n          <Text>Cargando mensajes...</Text>\n        </Flex>\n      ) : messages.length === 0 ? (\n        <Flex justify=\"center\" align=\"center\" h=\"100%\">\n          <Text color=\"gray.500\">No hay mensajes en esta conversación</Text>\n        </Flex>\n      ) : (\n        messages.map((msg, index) => {\n          const isSentByMe = msg.sender_id === currentUserId;\n          const showDate = shouldShowDate(index, msg, messages[index - 1]);\n          \n          return (\n            <React.Fragment key={msg.id}>\n              {showDate && (\n                <Flex justify=\"center\" my={4}>\n                  <Badge px={2} py={1} borderRadius=\"full\">\n                    {format(new Date(msg.created_at), 'EEEE dd MMMM yyyy', { locale: es })}\n                  </Badge>\n                </Flex>\n              )}\n              \n              <Box \n                mb={3} \n                display=\"flex\" \n                flexDirection=\"column\" \n                alignItems={isSentByMe ? 'flex-end' : 'flex-start'}\n              >\n                <Flex\n                  maxW=\"80%\"\n                  bg={isSentByMe ? sentMessageBg : receivedMessageBg}\n                  p={3}\n                  borderRadius=\"lg\"\n                  borderWidth=\"1px\"\n                  borderColor={isSentByMe ? sentMessageBorder : receivedMessageBorder}\n                  boxShadow=\"sm\"\n                  flexDirection=\"column\"\n                  position=\"relative\"\n                  _before={{\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: '10px',\n                    [isSentByMe ? 'right' : 'left']: '-8px',\n                    borderWidth: '8px',\n                    borderStyle: 'solid',\n                    borderColor: 'transparent',\n                    [isSentByMe ? 'borderRightColor' : 'borderLeftColor']: isSentByMe ? sentMessageBg : receivedMessageBg,\n                    transform: isSentByMe ? 'rotate(180deg)' : 'none',\n                  }}\n                >\n                  <Flex alignItems=\"center\" mb={1}>\n                    {renderMessageTypeIndicator(msg.message_type)}\n                    <Text fontSize=\"xs\" color=\"gray.500\" ml=\"auto\">\n                      {format(new Date(msg.created_at), 'HH:mm', { locale: es })}\n                    </Text>\n                  </Flex>\n                  \n                  <Text whiteSpace=\"pre-wrap\">{msg.message_content}</Text>\n                  \n                  {!msg.read_status && !isSentByMe && (\n                    <Badge size=\"sm\" colorScheme=\"red\" variant=\"outline\" alignSelf=\"flex-end\" mt={1}>\n                      No leído\n                    </Badge>\n                  )}\n                  \n                  {msg.read_status && isSentByMe && (\n                    <Badge size=\"sm\" colorScheme=\"green\" variant=\"outline\" alignSelf=\"flex-end\" mt={1}>\n                      Leído\n                    </Badge>\n                  )}\n                </Flex>\n              </Box>\n            </React.Fragment>\n          );\n        })\n      )}\n      <div ref={messagesEndRef} />\n    </Box>\n  );\n};\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}