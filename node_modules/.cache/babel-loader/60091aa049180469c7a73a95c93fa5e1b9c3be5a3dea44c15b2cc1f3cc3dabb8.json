{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/pages/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChartBarIcon, CurrencyDollarIcon, UserGroupIcon, ClipboardDocumentCheckIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { USER_ROLES } from '../utils/constants/roles';\nimport { APPLICATION_TYPE_LABELS } from '../utils/constants/applications';\n\n// Componentes de UI\nimport MainLayout from '../components/layout/MainLayout';\nimport MetricCard from '../components/ui/charts/MetricCard';\nimport StatusDistributionChart from '../components/ui/charts/StatusDistributionChart';\nimport MonthlyApplicationsChart from '../components/ui/charts/MonthlyApplicationsChart';\nimport AmountRangeChart from '../components/ui/charts/AmountRangeChart';\nimport AdvisorPerformanceChart from '../components/ui/charts/AdvisorPerformanceChart';\n\n// Servicios\nimport { getGeneralDashboardStats, getAdvisorDashboardStats, getCompanyDashboardStats } from '../services/dashboardService';\n\n// Interfaces adicionales\n\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\n\n// Tipo combinado para stats con todas las propiedades posibles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _stats$applications;\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState(null);\n  const [error, setError] = useState(null);\n  const [partialData, setPartialData] = useState(false);\n\n  // Formatear moneda (pesos)\n  const formatCurrency = value => {\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n      minimumFractionDigits: 2,\n      // Siempre mostrar 2 decimales\n      maximumFractionDigits: 2 // Siempre mostrar 2 decimales\n    }).format(numValue);\n  };\n\n  // Comprobar si el objeto es de tipo AdvisorStats\n  const isAdvisorStats = obj => {\n    return 'conversionRate' in obj && typeof obj.conversionRate === 'number';\n  };\n\n  // Cargar estadísticas según rol del usuario\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        setPartialData(false);\n        let dashboardData;\n        try {\n          if (user.role === USER_ROLES.ADVISOR) {\n            // Estadísticas específicas del asesor\n            dashboardData = await getAdvisorDashboardStats(user.id);\n          } else if (user.role === USER_ROLES.COMPANY_ADMIN && user.entityId) {\n            // Estadísticas específicas de la empresa (entityId contiene el company_id)\n            dashboardData = await getCompanyDashboardStats(user.entityId);\n          } else {\n            // Estadísticas generales para admin del sistema\n            dashboardData = await getGeneralDashboardStats();\n          }\n        } catch (statsError) {\n          console.error('Error fetching dashboard stats:', statsError);\n          // Create fallback data\n          setPartialData(true);\n          dashboardData = {\n            totalApplications: 0,\n            applicationsByStatus: [],\n            avgAmount: 0,\n            minAmount: 0,\n            maxAmount: 0,\n            recentApplications: [],\n            applicationsByMonth: [],\n            totalApproved: 0,\n            totalRejected: 0,\n            totalPending: 0,\n            pendingApproval: 0,\n            totalClients: 0\n          };\n        }\n\n        // Preparar datos de muestra para los gráficos mientras implementamos los datos reales\n        const extendedData = {\n          ...dashboardData,\n          applications: {\n            pending: dashboardData.totalPending || 0,\n            approved: dashboardData.totalApproved || 0,\n            rejected: dashboardData.totalRejected || 0,\n            in_review: (dashboardData.totalPending || 0) - (dashboardData.pendingApproval || 0)\n          },\n          previousMonthApproved: Math.floor((dashboardData.totalApproved || 0) * 0.8),\n          // Simulación\n          amountRanges: [{\n            range: '0-5,000',\n            count: Math.floor(Math.random() * 30) + 10\n          }, {\n            range: '5,001-10,000',\n            count: Math.floor(Math.random() * 25) + 15\n          }, {\n            range: '10,001-20,000',\n            count: Math.floor(Math.random() * 20) + 20\n          }, {\n            range: '20,001-30,000',\n            count: Math.floor(Math.random() * 15) + 10\n          }, {\n            range: '30,001-50,000',\n            count: Math.floor(Math.random() * 10) + 5\n          }, {\n            range: '50,001+',\n            count: Math.floor(Math.random() * 5) + 2\n          }],\n          advisorPerformance: [{\n            advisor_name: 'Asesor 1',\n            total_applications: Math.floor(Math.random() * 30) + 20,\n            approved_applications: Math.floor(Math.random() * 20) + 10\n          }, {\n            advisor_name: 'Asesor 2',\n            total_applications: Math.floor(Math.random() * 30) + 15,\n            approved_applications: Math.floor(Math.random() * 15) + 5\n          }, {\n            advisor_name: 'Asesor 3',\n            total_applications: Math.floor(Math.random() * 25) + 10,\n            approved_applications: Math.floor(Math.random() * 10) + 5\n          }, {\n            advisor_name: 'Asesor 4',\n            total_applications: Math.floor(Math.random() * 20) + 5,\n            approved_applications: Math.floor(Math.random() * 10) + 2\n          }, {\n            advisor_name: 'Asesor 5',\n            total_applications: Math.floor(Math.random() * 15) + 5,\n            approved_applications: Math.floor(Math.random() * 8) + 1\n          }]\n        };\n        setStats(extendedData);\n      } catch (err) {\n        console.error('Error al cargar estadísticas:', err);\n        setError('Error al cargar las estadísticas del dashboard. Intente refrescar la página.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, [navigate, user]);\n\n  // Obtener la etiqueta legible para el tipo de aplicación\n  const getApplicationTypeLabel = type => {\n    if (!type) return 'N/A';\n\n    // Intenta obtener la etiqueta directamente desde APPLICATION_TYPE_LABELS\n    const labelFromEnum = APPLICATION_TYPE_LABELS[type];\n    if (labelFromEnum) return labelFromEnum;\n\n    // Casos específicos para tipos comunes\n    switch (type.toLowerCase()) {\n      case 'selected_plans':\n        return 'Crédito a Plazos';\n      case 'product_simulations':\n        return 'Simulación';\n      case 'cash_requests':\n        return 'Solicitud de Efectivo';\n      case 'auto_loan':\n        return 'Crédito Auto';\n      case 'car_backed_loan':\n        return 'Crédito con Garantía';\n      case 'personal_loan':\n        return 'Préstamo Personal';\n      case 'cash_advance':\n        return 'Adelanto de Efectivo';\n    }\n\n    // Si es snake_case, convertirlo a formato legible\n    if (type.includes('_')) {\n      return type.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n    }\n\n    // Si todo lo demás falla, devuelve el tipo original\n    return type;\n  };\n\n  // Si está cargando, mostrar indicador\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading loading-spinner loading-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si hay error, mostrar mensaje\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si no hay datos, mostrar mensaje\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No hay datos disponibles para mostrar en el dashboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), partialData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Total de Solicitudes\",\n          value: stats.totalApplications,\n          icon: /*#__PURE__*/_jsxDEV(ChartBarIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this),\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Solicitudes Aprobadas\",\n          value: ((_stats$applications = stats.applications) === null || _stats$applications === void 0 ? void 0 : _stats$applications.approved) || 0,\n          previousValue: stats.previousMonthApproved,\n          icon: /*#__PURE__*/_jsxDEV(ClipboardDocumentCheckIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 19\n          }, this),\n          color: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Monto Promedio\",\n          value: stats.avgAmount,\n          formatValue: formatCurrency,\n          icon: /*#__PURE__*/_jsxDEV(CurrencyDollarIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 19\n          }, this),\n          color: \"indigo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), isAdvisorStats(stats) ? /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Tasa de Conversi\\xF3n\",\n          value: stats.conversionRate,\n          isPercentage: true,\n          icon: /*#__PURE__*/_jsxDEV(UserGroupIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 21\n          }, this),\n          color: \"purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Total de Clientes\",\n          value: 'totalClients' in stats && stats.totalClients ? Number(stats.totalClients) : 'No clients',\n          icon: /*#__PURE__*/_jsxDEV(UserGroupIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 21\n          }, this),\n          color: \"purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Solicitudes por Mes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), stats.applicationsByMonth && Array.isArray(stats.applicationsByMonth) && /*#__PURE__*/_jsxDEV(MonthlyApplicationsChart, {\n              data: stats.applicationsByMonth.map(item => ({\n                month: String(item.month || ''),\n                count: Number(item.count || 0)\n              })),\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Distribuci\\xF3n por Estado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatusDistributionChart, {\n              data: stats.applicationsByStatus.map(item => ({\n                status: String(item.status || ''),\n                count: Number(item.count || 0)\n              })),\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Distribuci\\xF3n por Monto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), stats.amountRanges && /*#__PURE__*/_jsxDEV(AmountRangeChart, {\n              data: stats.amountRanges,\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), (user === null || user === void 0 ? void 0 : user.role) === USER_ROLES.SUPERADMIN && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Rendimiento de Asesores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), stats.advisorPerformance && /*#__PURE__*/_jsxDEV(AdvisorPerformanceChart, {\n              data: stats.advisorPerformance,\n              height: 300,\n              title: \"\",\n              maxBars: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card bg-base-100 shadow-md mt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title text-lg font-semibold\",\n            children: \"Solicitudes Recientes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-zebra w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Cliente\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Tipo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Monto\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Estado\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Fecha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: stats.recentApplications && stats.recentApplications.length > 0 ? stats.recentApplications.map((app, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"hover cursor-pointer\",\n                  onClick: () => navigate(`/applications/${app.id}`),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: String(app.client_name || 'N/A')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: getApplicationTypeLabel(app.application_type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatCurrency(Number(app.amount || 0))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge badge-${String(app.status) === 'approved' ? 'success' : String(app.status) === 'rejected' ? 'error' : String(app.status) === 'pending' ? 'warning' : String(app.status) === 'in_review' ? 'info' : 'ghost'}`,\n                      children: String(app.status || 'N/A')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: app.created_at ? new Date(String(app.created_at)).toLocaleDateString() : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: 5,\n                    className: \"text-center\",\n                    children: \"No hay solicitudes recientes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"2uONEl0IvT3ffK3kW+iswzhuMjw=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ChartBarIcon","CurrencyDollarIcon","UserGroupIcon","ClipboardDocumentCheckIcon","useAuth","USER_ROLES","APPLICATION_TYPE_LABELS","MainLayout","MetricCard","StatusDistributionChart","MonthlyApplicationsChart","AmountRangeChart","AdvisorPerformanceChart","getGeneralDashboardStats","getAdvisorDashboardStats","getCompanyDashboardStats","jsxDEV","_jsxDEV","Dashboard","_s","_stats$applications","navigate","user","isLoading","setIsLoading","stats","setStats","error","setError","partialData","setPartialData","formatCurrency","value","numValue","parseFloat","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","isAdvisorStats","obj","conversionRate","fetchDashboardData","dashboardData","role","ADVISOR","id","COMPANY_ADMIN","entityId","statsError","console","totalApplications","applicationsByStatus","avgAmount","minAmount","maxAmount","recentApplications","applicationsByMonth","totalApproved","totalRejected","totalPending","pendingApproval","totalClients","extendedData","applications","pending","approved","rejected","in_review","previousMonthApproved","Math","floor","amountRanges","range","count","random","advisorPerformance","advisor_name","total_applications","approved_applications","err","getApplicationTypeLabel","type","labelFromEnum","toLowerCase","includes","split","map","word","charAt","toUpperCase","slice","join","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","icon","color","previousValue","formatValue","isPercentage","Number","Array","isArray","data","item","month","String","height","status","SUPERADMIN","maxBars","length","app","index","onClick","client_name","application_type","amount","created_at","Date","toLocaleDateString","colSpan","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChartBarIcon, CurrencyDollarIcon, UserGroupIcon, ClipboardDocumentCheckIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { USER_ROLES } from '../utils/constants/roles';\nimport { APPLICATION_TYPE_LABELS } from '../utils/constants/applications';\n\n// Componentes de UI\nimport MainLayout from '../components/layout/MainLayout';\nimport MetricCard from '../components/ui/charts/MetricCard';\nimport StatusDistributionChart from '../components/ui/charts/StatusDistributionChart';\nimport MonthlyApplicationsChart from '../components/ui/charts/MonthlyApplicationsChart';\nimport AmountRangeChart from '../components/ui/charts/AmountRangeChart';\nimport AdvisorPerformanceChart from '../components/ui/charts/AdvisorPerformanceChart';\n\n// Servicios\nimport {\n  DashboardStats,\n  AdvisorStats,\n  CompanyStats,\n  getGeneralDashboardStats,\n  getAdvisorDashboardStats,\n  getCompanyDashboardStats,\n} from '../services/dashboardService';\n\n// Interfaces adicionales\ninterface AmountRange {\n  range: string;\n  count: number;\n}\n\ninterface AdvisorPerformance {\n  advisor_name: string;\n  total_applications: number;\n  approved_applications?: number;\n}\n\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\ninterface ExtendedStats {\n  applications?: { [key: string]: number };\n  previousMonthApproved?: number;\n  amountRanges?: AmountRange[];\n  advisorPerformance?: AdvisorPerformance[];\n}\n\n// Tipo combinado para stats con todas las propiedades posibles\ntype DashboardStatsType = (DashboardStats | AdvisorStats | CompanyStats) & ExtendedStats;\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState<DashboardStatsType | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [partialData, setPartialData] = useState(false);\n\n  // Formatear moneda (pesos)\n  const formatCurrency = (value: number | string) => {\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n      minimumFractionDigits: 2, // Siempre mostrar 2 decimales\n      maximumFractionDigits: 2, // Siempre mostrar 2 decimales\n    }).format(numValue);\n  };\n\n  // Comprobar si el objeto es de tipo AdvisorStats\n  const isAdvisorStats = (obj: DashboardStatsType): obj is AdvisorStats & ExtendedStats => {\n    return 'conversionRate' in obj && typeof obj.conversionRate === 'number';\n  };\n\n  // Cargar estadísticas según rol del usuario\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        setPartialData(false);\n\n        let dashboardData;\n\n        try {\n          if (user.role === USER_ROLES.ADVISOR) {\n            // Estadísticas específicas del asesor\n            dashboardData = await getAdvisorDashboardStats(user.id);\n          } else if (user.role === USER_ROLES.COMPANY_ADMIN && user.entityId) {\n            // Estadísticas específicas de la empresa (entityId contiene el company_id)\n            dashboardData = await getCompanyDashboardStats(user.entityId);\n          } else {\n            // Estadísticas generales para admin del sistema\n            dashboardData = await getGeneralDashboardStats();\n          }\n        } catch (statsError) {\n          console.error('Error fetching dashboard stats:', statsError);\n          // Create fallback data\n          setPartialData(true);\n          dashboardData = {\n            totalApplications: 0,\n            applicationsByStatus: [],\n            avgAmount: 0,\n            minAmount: 0,\n            maxAmount: 0,\n            recentApplications: [],\n            applicationsByMonth: [],\n            totalApproved: 0,\n            totalRejected: 0,\n            totalPending: 0,\n            pendingApproval: 0,\n            totalClients: 0\n          };\n        }\n\n        // Preparar datos de muestra para los gráficos mientras implementamos los datos reales\n        const extendedData: DashboardStatsType = {\n          ...dashboardData,\n          applications: {\n            pending: dashboardData.totalPending || 0,\n            approved: dashboardData.totalApproved || 0,\n            rejected: dashboardData.totalRejected || 0,\n            in_review: (dashboardData.totalPending || 0) - (dashboardData.pendingApproval || 0),\n          },\n          previousMonthApproved: Math.floor((dashboardData.totalApproved || 0) * 0.8), // Simulación\n          amountRanges: [\n            { range: '0-5,000', count: Math.floor(Math.random() * 30) + 10 },\n            { range: '5,001-10,000', count: Math.floor(Math.random() * 25) + 15 },\n            { range: '10,001-20,000', count: Math.floor(Math.random() * 20) + 20 },\n            { range: '20,001-30,000', count: Math.floor(Math.random() * 15) + 10 },\n            { range: '30,001-50,000', count: Math.floor(Math.random() * 10) + 5 },\n            { range: '50,001+', count: Math.floor(Math.random() * 5) + 2 },\n          ],\n          advisorPerformance: [\n            { advisor_name: 'Asesor 1', total_applications: Math.floor(Math.random() * 30) + 20, approved_applications: Math.floor(Math.random() * 20) + 10 },\n            { advisor_name: 'Asesor 2', total_applications: Math.floor(Math.random() * 30) + 15, approved_applications: Math.floor(Math.random() * 15) + 5 },\n            { advisor_name: 'Asesor 3', total_applications: Math.floor(Math.random() * 25) + 10, approved_applications: Math.floor(Math.random() * 10) + 5 },\n            { advisor_name: 'Asesor 4', total_applications: Math.floor(Math.random() * 20) + 5, approved_applications: Math.floor(Math.random() * 10) + 2 },\n            { advisor_name: 'Asesor 5', total_applications: Math.floor(Math.random() * 15) + 5, approved_applications: Math.floor(Math.random() * 8) + 1 },\n          ]\n        };\n\n        setStats(extendedData);\n      } catch (err) {\n        console.error('Error al cargar estadísticas:', err);\n        setError('Error al cargar las estadísticas del dashboard. Intente refrescar la página.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, [navigate, user]);\n\n  // Obtener la etiqueta legible para el tipo de aplicación\n  const getApplicationTypeLabel = (type: string | null | undefined): string => {\n    if (!type) return 'N/A';\n    \n    // Intenta obtener la etiqueta directamente desde APPLICATION_TYPE_LABELS\n    const labelFromEnum = APPLICATION_TYPE_LABELS[type];\n    if (labelFromEnum) return labelFromEnum;\n    \n    // Casos específicos para tipos comunes\n    switch (type.toLowerCase()) {\n      case 'selected_plans':\n        return 'Crédito a Plazos';\n      case 'product_simulations':\n        return 'Simulación';\n      case 'cash_requests':\n        return 'Solicitud de Efectivo';\n      case 'auto_loan':\n        return 'Crédito Auto';\n      case 'car_backed_loan':\n        return 'Crédito con Garantía';\n      case 'personal_loan':\n        return 'Préstamo Personal';\n      case 'cash_advance':\n        return 'Adelanto de Efectivo';\n    }\n    \n    // Si es snake_case, convertirlo a formato legible\n    if (type.includes('_')) {\n      return type\n        .split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ');\n    }\n    \n    // Si todo lo demás falla, devuelve el tipo original\n    return type;\n  };\n\n  // Si está cargando, mostrar indicador\n  if (isLoading) {\n    return (\n      <MainLayout>\n        <div className=\"flex justify-center items-center h-full p-8\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"loading loading-spinner loading-lg\"></span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si hay error, mostrar mensaje\n  if (error) {\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-error\">\n            <span>{error}</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si no hay datos, mostrar mensaje\n  if (!stats) {\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-info\">\n            <span>No hay datos disponibles para mostrar en el dashboard.</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"p-6 space-y-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">Dashboard</h1>\n\n        {partialData && (\n          <div className=\"alert alert-warning mb-4\">\n            <span>Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.</span>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert alert-error mb-4\">\n            <span>{error}</span>\n          </div>\n        )}\n\n        {/* Tarjetas de métricas principales */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <MetricCard\n            title=\"Total de Solicitudes\"\n            value={stats.totalApplications}\n            icon={<ChartBarIcon className=\"h-5 w-5\" />}\n            color=\"blue\"\n          />\n          <MetricCard\n            title=\"Solicitudes Aprobadas\"\n            value={stats.applications?.approved || 0}\n            previousValue={stats.previousMonthApproved}\n            icon={<ClipboardDocumentCheckIcon className=\"h-5 w-5\" />}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Monto Promedio\"\n            value={stats.avgAmount}\n            formatValue={formatCurrency}\n            icon={<CurrencyDollarIcon className=\"h-5 w-5\" />}\n            color=\"indigo\"\n          />\n          {isAdvisorStats(stats) ? (\n            <MetricCard\n              title=\"Tasa de Conversión\"\n              value={stats.conversionRate}\n              isPercentage={true}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          ) : (\n            <MetricCard\n              title=\"Total de Clientes\"\n              value={'totalClients' in stats && stats.totalClients ? Number(stats.totalClients) : 'No clients'}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          )}\n        </div>\n\n        {/* Gráficos principales */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Solicitudes por Mes</h2>\n              {/* Validar que applicationsByMonth existe y es un array */}\n              {stats.applicationsByMonth && Array.isArray(stats.applicationsByMonth) && (\n                <MonthlyApplicationsChart\n                  data={stats.applicationsByMonth.map(item => ({\n                    month: String(item.month || ''),\n                    count: Number(item.count || 0)\n                  }))}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Estado</h2>\n              <StatusDistributionChart\n                data={stats.applicationsByStatus.map(item => ({\n                  status: String(item.status || ''),\n                  count: Number(item.count || 0)\n                }))}\n                height={300}\n                title=\"\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Gráficos secundarios */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Monto</h2>\n              {stats.amountRanges && (\n                <AmountRangeChart\n                  data={stats.amountRanges}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          {/* Rendimiento de asesores (solo para superadmin) */}\n          {user?.role === USER_ROLES.SUPERADMIN && (\n            <div className=\"card bg-base-100 shadow-md\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title text-lg font-semibold\">Rendimiento de Asesores</h2>\n                {stats.advisorPerformance && (\n                  <AdvisorPerformanceChart\n                    data={stats.advisorPerformance}\n                    height={300}\n                    title=\"\"\n                    maxBars={8}\n                  />\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Tabla de solicitudes recientes */}\n        <div className=\"card bg-base-100 shadow-md mt-6\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title text-lg font-semibold\">Solicitudes Recientes</h2>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"table table-zebra w-full\">\n                <thead>\n                  <tr>\n                    <th>Cliente</th>\n                    <th>Tipo</th>\n                    <th>Monto</th>\n                    <th>Estado</th>\n                    <th>Fecha</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {stats.recentApplications && stats.recentApplications.length > 0 ? (\n                    stats.recentApplications.map((app, index) => (\n                      <tr key={index} \n                          className=\"hover cursor-pointer\"\n                          onClick={() => navigate(`/applications/${app.id}`)}>\n                        <td>{String(app.client_name || 'N/A')}</td>\n                        <td>{getApplicationTypeLabel(app.application_type)}</td>\n                        <td>{formatCurrency(Number(app.amount || 0))}</td>\n                        <td>\n                          <span className={`badge badge-${String(app.status) === 'approved' ? 'success' : \n                                                           String(app.status) === 'rejected' ? 'error' : \n                                                           String(app.status) === 'pending' ? 'warning' : \n                                                           String(app.status) === 'in_review' ? 'info' : 'ghost'}`}>\n                            {String(app.status || 'N/A')}\n                          </span>\n                        </td>\n                        <td>{app.created_at ? new Date(String(app.created_at)).toLocaleDateString() : 'N/A'}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={5} className=\"text-center\">No hay solicitudes recientes</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default Dashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,EAAEC,kBAAkB,EAAEC,aAAa,EAAEC,0BAA0B,QAAQ,6BAA6B;AACzH,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,uBAAuB,QAAQ,iCAAiC;;AAEzE;AACA,OAAOC,UAAU,MAAM,iCAAiC;AACxD,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,uBAAuB,MAAM,iDAAiD;AACrF,OAAOC,wBAAwB,MAAM,kDAAkD;AACvF,OAAOC,gBAAgB,MAAM,0CAA0C;AACvE,OAAOC,uBAAuB,MAAM,iDAAiD;;AAErF;AACA,SAIEC,wBAAwB,EACxBC,wBAAwB,EACxBC,wBAAwB,QACnB,8BAA8B;;AAErC;;AAYA;;AAQA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,mBAAA;EAChC,MAAMC,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEuB;EAAK,CAAC,GAAGlB,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAA4B,IAAI,CAAC;EACnE,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMiC,cAAc,GAAIC,KAAsB,IAAK;IACjD,MAAMC,QAAQ,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAAGE,UAAU,CAACF,KAAK,CAAC,GAAGA,KAAK;IACtE,OAAO,IAAIG,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MACpCC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE,KAAK;MACfC,qBAAqB,EAAE,CAAC;MAAE;MAC1BC,qBAAqB,EAAE,CAAC,CAAE;IAC5B,CAAC,CAAC,CAACC,MAAM,CAACR,QAAQ,CAAC;EACrB,CAAC;;EAED;EACA,MAAMS,cAAc,GAAIC,GAAuB,IAA0C;IACvF,OAAO,gBAAgB,IAAIA,GAAG,IAAI,OAAOA,GAAG,CAACC,cAAc,KAAK,QAAQ;EAC1E,CAAC;;EAED;EACA/C,SAAS,CAAC,MAAM;IACd,IAAI,CAACyB,IAAI,EAAE;MACTD,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,MAAMwB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACFrB,YAAY,CAAC,IAAI,CAAC;QAClBI,QAAQ,CAAC,IAAI,CAAC;QACdE,cAAc,CAAC,KAAK,CAAC;QAErB,IAAIgB,aAAa;QAEjB,IAAI;UACF,IAAIxB,IAAI,CAACyB,IAAI,KAAK1C,UAAU,CAAC2C,OAAO,EAAE;YACpC;YACAF,aAAa,GAAG,MAAMhC,wBAAwB,CAACQ,IAAI,CAAC2B,EAAE,CAAC;UACzD,CAAC,MAAM,IAAI3B,IAAI,CAACyB,IAAI,KAAK1C,UAAU,CAAC6C,aAAa,IAAI5B,IAAI,CAAC6B,QAAQ,EAAE;YAClE;YACAL,aAAa,GAAG,MAAM/B,wBAAwB,CAACO,IAAI,CAAC6B,QAAQ,CAAC;UAC/D,CAAC,MAAM;YACL;YACAL,aAAa,GAAG,MAAMjC,wBAAwB,CAAC,CAAC;UAClD;QACF,CAAC,CAAC,OAAOuC,UAAU,EAAE;UACnBC,OAAO,CAAC1B,KAAK,CAAC,iCAAiC,EAAEyB,UAAU,CAAC;UAC5D;UACAtB,cAAc,CAAC,IAAI,CAAC;UACpBgB,aAAa,GAAG;YACdQ,iBAAiB,EAAE,CAAC;YACpBC,oBAAoB,EAAE,EAAE;YACxBC,SAAS,EAAE,CAAC;YACZC,SAAS,EAAE,CAAC;YACZC,SAAS,EAAE,CAAC;YACZC,kBAAkB,EAAE,EAAE;YACtBC,mBAAmB,EAAE,EAAE;YACvBC,aAAa,EAAE,CAAC;YAChBC,aAAa,EAAE,CAAC;YAChBC,YAAY,EAAE,CAAC;YACfC,eAAe,EAAE,CAAC;YAClBC,YAAY,EAAE;UAChB,CAAC;QACH;;QAEA;QACA,MAAMC,YAAgC,GAAG;UACvC,GAAGpB,aAAa;UAChBqB,YAAY,EAAE;YACZC,OAAO,EAAEtB,aAAa,CAACiB,YAAY,IAAI,CAAC;YACxCM,QAAQ,EAAEvB,aAAa,CAACe,aAAa,IAAI,CAAC;YAC1CS,QAAQ,EAAExB,aAAa,CAACgB,aAAa,IAAI,CAAC;YAC1CS,SAAS,EAAE,CAACzB,aAAa,CAACiB,YAAY,IAAI,CAAC,KAAKjB,aAAa,CAACkB,eAAe,IAAI,CAAC;UACpF,CAAC;UACDQ,qBAAqB,EAAEC,IAAI,CAACC,KAAK,CAAC,CAAC5B,aAAa,CAACe,aAAa,IAAI,CAAC,IAAI,GAAG,CAAC;UAAE;UAC7Ec,YAAY,EAAE,CACZ;YAAEC,KAAK,EAAE,SAAS;YAAEC,KAAK,EAAEJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UAAG,CAAC,EAChE;YAAEF,KAAK,EAAE,cAAc;YAAEC,KAAK,EAAEJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UAAG,CAAC,EACrE;YAAEF,KAAK,EAAE,eAAe;YAAEC,KAAK,EAAEJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UAAG,CAAC,EACtE;YAAEF,KAAK,EAAE,eAAe;YAAEC,KAAK,EAAEJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UAAG,CAAC,EACtE;YAAEF,KAAK,EAAE,eAAe;YAAEC,KAAK,EAAEJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UAAE,CAAC,EACrE;YAAEF,KAAK,EAAE,SAAS;YAAEC,KAAK,EAAEJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG;UAAE,CAAC,CAC/D;UACDC,kBAAkB,EAAE,CAClB;YAAEC,YAAY,EAAE,UAAU;YAAEC,kBAAkB,EAAER,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;YAAEI,qBAAqB,EAAET,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UAAG,CAAC,EACjJ;YAAEE,YAAY,EAAE,UAAU;YAAEC,kBAAkB,EAAER,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;YAAEI,qBAAqB,EAAET,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UAAE,CAAC,EAChJ;YAAEE,YAAY,EAAE,UAAU;YAAEC,kBAAkB,EAAER,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;YAAEI,qBAAqB,EAAET,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UAAE,CAAC,EAChJ;YAAEE,YAAY,EAAE,UAAU;YAAEC,kBAAkB,EAAER,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;YAAEI,qBAAqB,EAAET,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UAAE,CAAC,EAC/I;YAAEE,YAAY,EAAE,UAAU;YAAEC,kBAAkB,EAAER,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;YAAEI,qBAAqB,EAAET,IAAI,CAACC,KAAK,CAACD,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG;UAAE,CAAC;QAElJ,CAAC;QAEDpD,QAAQ,CAACwC,YAAY,CAAC;MACxB,CAAC,CAAC,OAAOiB,GAAG,EAAE;QACZ9B,OAAO,CAAC1B,KAAK,CAAC,+BAA+B,EAAEwD,GAAG,CAAC;QACnDvD,QAAQ,CAAC,8EAA8E,CAAC;MAC1F,CAAC,SAAS;QACRJ,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDqB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACxB,QAAQ,EAAEC,IAAI,CAAC,CAAC;;EAEpB;EACA,MAAM8D,uBAAuB,GAAIC,IAA+B,IAAa;IAC3E,IAAI,CAACA,IAAI,EAAE,OAAO,KAAK;;IAEvB;IACA,MAAMC,aAAa,GAAGhF,uBAAuB,CAAC+E,IAAI,CAAC;IACnD,IAAIC,aAAa,EAAE,OAAOA,aAAa;;IAEvC;IACA,QAAQD,IAAI,CAACE,WAAW,CAAC,CAAC;MACxB,KAAK,gBAAgB;QACnB,OAAO,kBAAkB;MAC3B,KAAK,qBAAqB;QACxB,OAAO,YAAY;MACrB,KAAK,eAAe;QAClB,OAAO,uBAAuB;MAChC,KAAK,WAAW;QACd,OAAO,cAAc;MACvB,KAAK,iBAAiB;QACpB,OAAO,sBAAsB;MAC/B,KAAK,eAAe;QAClB,OAAO,mBAAmB;MAC5B,KAAK,cAAc;QACjB,OAAO,sBAAsB;IACjC;;IAEA;IACA,IAAIF,IAAI,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;MACtB,OAAOH,IAAI,CACRI,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAACP,WAAW,CAAC,CAAC,CAAC,CACvEQ,IAAI,CAAC,GAAG,CAAC;IACd;;IAEA;IACA,OAAOV,IAAI;EACb,CAAC;;EAED;EACA,IAAI9D,SAAS,EAAE;IACb,oBACEN,OAAA,CAACV,UAAU;MAAAyF,QAAA,eACT/E,OAAA;QAAKgF,SAAS,EAAC,6CAA6C;QAAAD,QAAA,eAC1D/E,OAAA;UAAKgF,SAAS,EAAC,6BAA6B;UAAClD,IAAI,EAAC,QAAQ;UAAAiD,QAAA,eACxD/E,OAAA;YAAMgF,SAAS,EAAC;UAAoC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAEjB;;EAEA;EACA,IAAI1E,KAAK,EAAE;IACT,oBACEV,OAAA,CAACV,UAAU;MAAAyF,QAAA,eACT/E,OAAA;QAAKgF,SAAS,EAAC,KAAK;QAAAD,QAAA,eAClB/E,OAAA;UAAKgF,SAAS,EAAC,mBAAmB;UAAAD,QAAA,eAChC/E,OAAA;YAAA+E,QAAA,EAAOrE;UAAK;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAEjB;;EAEA;EACA,IAAI,CAAC5E,KAAK,EAAE;IACV,oBACER,OAAA,CAACV,UAAU;MAAAyF,QAAA,eACT/E,OAAA;QAAKgF,SAAS,EAAC,KAAK;QAAAD,QAAA,eAClB/E,OAAA;UAAKgF,SAAS,EAAC,kBAAkB;UAAAD,QAAA,eAC/B/E,OAAA;YAAA+E,QAAA,EAAM;UAAsD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAEjB;EAEA,oBACEpF,OAAA,CAACV,UAAU;IAAAyF,QAAA,eACT/E,OAAA;MAAKgF,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5B/E,OAAA;QAAIgF,SAAS,EAAC,uCAAuC;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEnExE,WAAW,iBACVZ,OAAA;QAAKgF,SAAS,EAAC,0BAA0B;QAAAD,QAAA,eACvC/E,OAAA;UAAA+E,QAAA,EAAM;QAA2F;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrG,CACN,EAEA1E,KAAK,iBACJV,OAAA;QAAKgF,SAAS,EAAC,wBAAwB;QAAAD,QAAA,eACrC/E,OAAA;UAAA+E,QAAA,EAAOrE;QAAK;UAAAuE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CACN,eAGDpF,OAAA;QAAKgF,SAAS,EAAC,sDAAsD;QAAAD,QAAA,gBACnE/E,OAAA,CAACT,UAAU;UACT8F,KAAK,EAAC,sBAAsB;UAC5BtE,KAAK,EAAEP,KAAK,CAAC6B,iBAAkB;UAC/BiD,IAAI,eAAEtF,OAAA,CAACjB,YAAY;YAACiG,SAAS,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC3CG,KAAK,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACFpF,OAAA,CAACT,UAAU;UACT8F,KAAK,EAAC,uBAAuB;UAC7BtE,KAAK,EAAE,EAAAZ,mBAAA,GAAAK,KAAK,CAAC0C,YAAY,cAAA/C,mBAAA,uBAAlBA,mBAAA,CAAoBiD,QAAQ,KAAI,CAAE;UACzCoC,aAAa,EAAEhF,KAAK,CAAC+C,qBAAsB;UAC3C+B,IAAI,eAAEtF,OAAA,CAACd,0BAA0B;YAAC8F,SAAS,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACzDG,KAAK,EAAC;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACFpF,OAAA,CAACT,UAAU;UACT8F,KAAK,EAAC,gBAAgB;UACtBtE,KAAK,EAAEP,KAAK,CAAC+B,SAAU;UACvBkD,WAAW,EAAE3E,cAAe;UAC5BwE,IAAI,eAAEtF,OAAA,CAAChB,kBAAkB;YAACgG,SAAS,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACjDG,KAAK,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,EACD3D,cAAc,CAACjB,KAAK,CAAC,gBACpBR,OAAA,CAACT,UAAU;UACT8F,KAAK,EAAC,uBAAoB;UAC1BtE,KAAK,EAAEP,KAAK,CAACmB,cAAe;UAC5B+D,YAAY,EAAE,IAAK;UACnBJ,IAAI,eAAEtF,OAAA,CAACf,aAAa;YAAC+F,SAAS,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC5CG,KAAK,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,gBAEFpF,OAAA,CAACT,UAAU;UACT8F,KAAK,EAAC,mBAAmB;UACzBtE,KAAK,EAAE,cAAc,IAAIP,KAAK,IAAIA,KAAK,CAACwC,YAAY,GAAG2C,MAAM,CAACnF,KAAK,CAACwC,YAAY,CAAC,GAAG,YAAa;UACjGsC,IAAI,eAAEtF,OAAA,CAACf,aAAa;YAAC+F,SAAS,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC5CG,KAAK,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGNpF,OAAA;QAAKgF,SAAS,EAAC,4CAA4C;QAAAD,QAAA,gBACzD/E,OAAA;UAAKgF,SAAS,EAAC,4BAA4B;UAAAD,QAAA,eACzC/E,OAAA;YAAKgF,SAAS,EAAC,WAAW;YAAAD,QAAA,gBACxB/E,OAAA;cAAIgF,SAAS,EAAC,kCAAkC;cAAAD,QAAA,EAAC;YAAmB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAExE5E,KAAK,CAACmC,mBAAmB,IAAIiD,KAAK,CAACC,OAAO,CAACrF,KAAK,CAACmC,mBAAmB,CAAC,iBACpE3C,OAAA,CAACP,wBAAwB;cACvBqG,IAAI,EAAEtF,KAAK,CAACmC,mBAAmB,CAAC8B,GAAG,CAACsB,IAAI,KAAK;gBAC3CC,KAAK,EAAEC,MAAM,CAACF,IAAI,CAACC,KAAK,IAAI,EAAE,CAAC;gBAC/BpC,KAAK,EAAE+B,MAAM,CAACI,IAAI,CAACnC,KAAK,IAAI,CAAC;cAC/B,CAAC,CAAC,CAAE;cACJsC,MAAM,EAAE,GAAI;cACZb,KAAK,EAAC;YAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CACF;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENpF,OAAA;UAAKgF,SAAS,EAAC,4BAA4B;UAAAD,QAAA,eACzC/E,OAAA;YAAKgF,SAAS,EAAC,WAAW;YAAAD,QAAA,gBACxB/E,OAAA;cAAIgF,SAAS,EAAC,kCAAkC;cAAAD,QAAA,EAAC;YAAuB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7EpF,OAAA,CAACR,uBAAuB;cACtBsG,IAAI,EAAEtF,KAAK,CAAC8B,oBAAoB,CAACmC,GAAG,CAACsB,IAAI,KAAK;gBAC5CI,MAAM,EAAEF,MAAM,CAACF,IAAI,CAACI,MAAM,IAAI,EAAE,CAAC;gBACjCvC,KAAK,EAAE+B,MAAM,CAACI,IAAI,CAACnC,KAAK,IAAI,CAAC;cAC/B,CAAC,CAAC,CAAE;cACJsC,MAAM,EAAE,GAAI;cACZb,KAAK,EAAC;YAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNpF,OAAA;QAAKgF,SAAS,EAAC,4CAA4C;QAAAD,QAAA,gBACzD/E,OAAA;UAAKgF,SAAS,EAAC,4BAA4B;UAAAD,QAAA,eACzC/E,OAAA;YAAKgF,SAAS,EAAC,WAAW;YAAAD,QAAA,gBACxB/E,OAAA;cAAIgF,SAAS,EAAC,kCAAkC;cAAAD,QAAA,EAAC;YAAsB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC3E5E,KAAK,CAACkD,YAAY,iBACjB1D,OAAA,CAACN,gBAAgB;cACfoG,IAAI,EAAEtF,KAAK,CAACkD,YAAa;cACzBwC,MAAM,EAAE,GAAI;cACZb,KAAK,EAAC;YAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CACF;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGL,CAAA/E,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEyB,IAAI,MAAK1C,UAAU,CAACgH,UAAU,iBACnCpG,OAAA;UAAKgF,SAAS,EAAC,4BAA4B;UAAAD,QAAA,eACzC/E,OAAA;YAAKgF,SAAS,EAAC,WAAW;YAAAD,QAAA,gBACxB/E,OAAA;cAAIgF,SAAS,EAAC,kCAAkC;cAAAD,QAAA,EAAC;YAAuB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC5E5E,KAAK,CAACsD,kBAAkB,iBACvB9D,OAAA,CAACL,uBAAuB;cACtBmG,IAAI,EAAEtF,KAAK,CAACsD,kBAAmB;cAC/BoC,MAAM,EAAE,GAAI;cACZb,KAAK,EAAC,EAAE;cACRgB,OAAO,EAAE;YAAE;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CACF;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGNpF,OAAA;QAAKgF,SAAS,EAAC,iCAAiC;QAAAD,QAAA,eAC9C/E,OAAA;UAAKgF,SAAS,EAAC,WAAW;UAAAD,QAAA,gBACxB/E,OAAA;YAAIgF,SAAS,EAAC,kCAAkC;YAAAD,QAAA,EAAC;UAAqB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAE3EpF,OAAA;YAAKgF,SAAS,EAAC,iBAAiB;YAAAD,QAAA,eAC9B/E,OAAA;cAAOgF,SAAS,EAAC,0BAA0B;cAAAD,QAAA,gBACzC/E,OAAA;gBAAA+E,QAAA,eACE/E,OAAA;kBAAA+E,QAAA,gBACE/E,OAAA;oBAAA+E,QAAA,EAAI;kBAAO;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAChBpF,OAAA;oBAAA+E,QAAA,EAAI;kBAAI;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbpF,OAAA;oBAAA+E,QAAA,EAAI;kBAAK;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdpF,OAAA;oBAAA+E,QAAA,EAAI;kBAAM;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACfpF,OAAA;oBAAA+E,QAAA,EAAI;kBAAK;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACZ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRpF,OAAA;gBAAA+E,QAAA,EACGvE,KAAK,CAACkC,kBAAkB,IAAIlC,KAAK,CAACkC,kBAAkB,CAAC4D,MAAM,GAAG,CAAC,GAC9D9F,KAAK,CAACkC,kBAAkB,CAAC+B,GAAG,CAAC,CAAC8B,GAAG,EAAEC,KAAK,kBACtCxG,OAAA;kBACIgF,SAAS,EAAC,sBAAsB;kBAChCyB,OAAO,EAAEA,CAAA,KAAMrG,QAAQ,CAAC,iBAAiBmG,GAAG,CAACvE,EAAE,EAAE,CAAE;kBAAA+C,QAAA,gBACrD/E,OAAA;oBAAA+E,QAAA,EAAKkB,MAAM,CAACM,GAAG,CAACG,WAAW,IAAI,KAAK;kBAAC;oBAAAzB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC3CpF,OAAA;oBAAA+E,QAAA,EAAKZ,uBAAuB,CAACoC,GAAG,CAACI,gBAAgB;kBAAC;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACxDpF,OAAA;oBAAA+E,QAAA,EAAKjE,cAAc,CAAC6E,MAAM,CAACY,GAAG,CAACK,MAAM,IAAI,CAAC,CAAC;kBAAC;oBAAA3B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAClDpF,OAAA;oBAAA+E,QAAA,eACE/E,OAAA;sBAAMgF,SAAS,EAAE,eAAeiB,MAAM,CAACM,GAAG,CAACJ,MAAM,CAAC,KAAK,UAAU,GAAG,SAAS,GAC5CF,MAAM,CAACM,GAAG,CAACJ,MAAM,CAAC,KAAK,UAAU,GAAG,OAAO,GAC3CF,MAAM,CAACM,GAAG,CAACJ,MAAM,CAAC,KAAK,SAAS,GAAG,SAAS,GAC5CF,MAAM,CAACM,GAAG,CAACJ,MAAM,CAAC,KAAK,WAAW,GAAG,MAAM,GAAG,OAAO,EAAG;sBAAApB,QAAA,EACtFkB,MAAM,CAACM,GAAG,CAACJ,MAAM,IAAI,KAAK;oBAAC;sBAAAlB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACxB;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACL,CAAC,eACLpF,OAAA;oBAAA+E,QAAA,EAAKwB,GAAG,CAACM,UAAU,GAAG,IAAIC,IAAI,CAACb,MAAM,CAACM,GAAG,CAACM,UAAU,CAAC,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAAG;kBAAK;oBAAA9B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA,GAdlFoB,KAAK;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAeV,CACL,CAAC,gBAEFpF,OAAA;kBAAA+E,QAAA,eACE/E,OAAA;oBAAIgH,OAAO,EAAE,CAAE;oBAAChC,SAAS,EAAC,aAAa;oBAAAD,QAAA,EAAC;kBAA4B;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvE;cACL;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB,CAAC;AAAClF,EAAA,CAvWID,SAAmB;EAAA,QACNnB,WAAW,EACXK,OAAO;AAAA;AAAA8H,EAAA,GAFpBhH,SAAmB;AAyWzB,eAAeA,SAAS;AAAC,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}