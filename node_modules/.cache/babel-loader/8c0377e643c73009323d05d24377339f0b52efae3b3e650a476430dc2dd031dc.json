{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/pages/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChartBarIcon, CurrencyDollarIcon, UserGroupIcon, ClipboardDocumentCheckIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { USER_ROLES } from '../utils/constants/roles';\nimport { APPLICATION_TYPE_LABELS } from '../utils/constants/applications';\n\n// Componentes de UI\nimport MainLayout from '../components/layout/MainLayout';\nimport MetricCard from '../components/ui/charts/MetricCard';\nimport StatusDistributionChart from '../components/ui/charts/StatusDistributionChart';\nimport MonthlyApplicationsChart from '../components/ui/charts/MonthlyApplicationsChart';\nimport AmountRangeChart from '../components/ui/charts/AmountRangeChart';\nimport AdvisorPerformanceChart from '../components/ui/charts/AdvisorPerformanceChart';\n\n// Servicios\nimport { getGeneralDashboardStats, getAdvisorDashboardStats, getCompanyDashboardStats } from '../services/dashboardService';\n\n// Interfaces adicionales\n\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\n\n// Tipo combinado para stats con todas las propiedades posibles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _stats$applications;\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState(null);\n  const [error, setError] = useState(null);\n  const [partialData, setPartialData] = useState(false);\n\n  // Formatear moneda (pesos)\n  const formatCurrency = value => {\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n      minimumFractionDigits: 2,\n      // Siempre mostrar 2 decimales\n      maximumFractionDigits: 2 // Siempre mostrar 2 decimales\n    }).format(numValue);\n  };\n\n  // Comprobar si el objeto es de tipo AdvisorStats\n  const isAdvisorStats = obj => {\n    return 'conversionRate' in obj && typeof obj.conversionRate === 'number';\n  };\n\n  // Cargar estadísticas según rol del usuario\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        setPartialData(false);\n        let dashboardData;\n        try {\n          if (user.role === USER_ROLES.ADVISOR) {\n            // Estadísticas específicas del asesor\n            dashboardData = await getAdvisorDashboardStats(user.id);\n          } else if (user.role === USER_ROLES.COMPANY_ADMIN && user.entityId) {\n            // Estadísticas específicas de la empresa (entityId contiene el company_id)\n            dashboardData = await getCompanyDashboardStats(user.entityId);\n          } else {\n            // Estadísticas generales para admin del sistema\n            dashboardData = await getGeneralDashboardStats();\n          }\n        } catch (statsError) {\n          console.error('Error fetching dashboard stats:', statsError);\n          // Create fallback data\n          setPartialData(true);\n          dashboardData = {\n            totalApplications: 0,\n            applicationsByStatus: [],\n            avgAmount: 0,\n            minAmount: 0,\n            maxAmount: 0,\n            recentApplications: [],\n            applicationsByMonth: [],\n            totalApproved: 0,\n            totalRejected: 0,\n            totalPending: 0,\n            pendingApproval: 0,\n            totalClients: 0\n          };\n        }\n\n        // Preparar datos de muestra para los gráficos mientras implementamos los datos reales\n        const extendedData = {\n          ...dashboardData,\n          applications: {\n            pending: dashboardData.totalPending || 0,\n            approved: dashboardData.totalApproved || 0,\n            rejected: dashboardData.totalRejected || 0,\n            in_review: (dashboardData.totalPending || 0) - (dashboardData.pendingApproval || 0)\n          },\n          previousMonthApproved: Math.floor((dashboardData.totalApproved || 0) * 0.8),\n          // Simulación\n          amountRanges: [{\n            range: '0-5,000',\n            count: Math.floor(Math.random() * 30) + 10\n          }, {\n            range: '5,001-10,000',\n            count: Math.floor(Math.random() * 25) + 15\n          }, {\n            range: '10,001-20,000',\n            count: Math.floor(Math.random() * 20) + 20\n          }, {\n            range: '20,001-30,000',\n            count: Math.floor(Math.random() * 15) + 10\n          }, {\n            range: '30,001-50,000',\n            count: Math.floor(Math.random() * 10) + 5\n          }, {\n            range: '50,001+',\n            count: Math.floor(Math.random() * 5) + 2\n          }],\n          advisorPerformance: [{\n            advisor_name: 'Asesor 1',\n            total_applications: Math.floor(Math.random() * 30) + 20,\n            approved_applications: Math.floor(Math.random() * 20) + 10\n          }, {\n            advisor_name: 'Asesor 2',\n            total_applications: Math.floor(Math.random() * 30) + 15,\n            approved_applications: Math.floor(Math.random() * 15) + 5\n          }, {\n            advisor_name: 'Asesor 3',\n            total_applications: Math.floor(Math.random() * 25) + 10,\n            approved_applications: Math.floor(Math.random() * 10) + 5\n          }, {\n            advisor_name: 'Asesor 4',\n            total_applications: Math.floor(Math.random() * 20) + 5,\n            approved_applications: Math.floor(Math.random() * 10) + 2\n          }, {\n            advisor_name: 'Asesor 5',\n            total_applications: Math.floor(Math.random() * 15) + 5,\n            approved_applications: Math.floor(Math.random() * 8) + 1\n          }]\n        };\n        setStats(extendedData);\n      } catch (err) {\n        console.error('Error al cargar estadísticas:', err);\n        setError('Error al cargar las estadísticas del dashboard. Intente refrescar la página.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, [navigate, user]);\n\n  // Obtener la etiqueta legible para el tipo de aplicación\n  const getApplicationTypeLabel = type => {\n    if (!type) return 'N/A';\n\n    // Normalizar el tipo a minúsculas para comparación\n    const normalizedType = type.toLowerCase();\n\n    // Verificar si es alguno de los tipos definidos en APPLICATION_TYPE_LABELS\n    for (const [key, value] of Object.entries(APPLICATION_TYPE_LABELS)) {\n      if (key.toLowerCase() === normalizedType || key.toLowerCase().includes(normalizedType) || normalizedType.includes(key.toLowerCase())) {\n        return value;\n      }\n    }\n\n    // Mapeo adicional para otros valores comunes\n    const typeMappings = {\n      'selected_plans': 'Crédito a Plazos',\n      'product_simulations': 'Simulación',\n      'auto_loan': 'Crédito Auto',\n      'car_backed_loan': 'Crédito con Garantía',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n\n    // Buscar una coincidencia parcial\n    for (const [key, value] of Object.entries(typeMappings)) {\n      if (normalizedType.includes(key) || key.includes(normalizedType)) {\n        return value;\n      }\n    }\n\n    // Si no hay coincidencia, retornar el valor original\n    return type;\n  };\n\n  // Si está cargando, mostrar indicador\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading loading-spinner loading-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si hay error, mostrar mensaje\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si no hay datos, mostrar mensaje\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No hay datos disponibles para mostrar en el dashboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), partialData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Total de Solicitudes\",\n          value: stats.totalApplications,\n          icon: /*#__PURE__*/_jsxDEV(ChartBarIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this),\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Solicitudes Aprobadas\",\n          value: ((_stats$applications = stats.applications) === null || _stats$applications === void 0 ? void 0 : _stats$applications.approved) || 0,\n          previousValue: stats.previousMonthApproved,\n          icon: /*#__PURE__*/_jsxDEV(ClipboardDocumentCheckIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 19\n          }, this),\n          color: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Monto Promedio\",\n          value: stats.avgAmount,\n          formatValue: formatCurrency,\n          icon: /*#__PURE__*/_jsxDEV(CurrencyDollarIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this),\n          color: \"indigo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), isAdvisorStats(stats) ? /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Tasa de Conversi\\xF3n\",\n          value: stats.conversionRate,\n          isPercentage: true,\n          icon: /*#__PURE__*/_jsxDEV(UserGroupIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }, this),\n          color: \"purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Total de Clientes\",\n          value: 'totalClients' in stats && stats.totalClients ? Number(stats.totalClients) : 'No clients',\n          icon: /*#__PURE__*/_jsxDEV(UserGroupIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 21\n          }, this),\n          color: \"purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Solicitudes por Mes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), stats.applicationsByMonth && Array.isArray(stats.applicationsByMonth) && /*#__PURE__*/_jsxDEV(MonthlyApplicationsChart, {\n              data: stats.applicationsByMonth.map(item => ({\n                month: String(item.month || ''),\n                count: Number(item.count || 0)\n              })),\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Distribuci\\xF3n por Estado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), console.log('applicationsByStatus:', stats.applicationsByStatus), /*#__PURE__*/_jsxDEV(StatusDistributionChart, {\n              data: stats.applicationsByStatus.map(item => ({\n                status: String(item.status || ''),\n                count: Number(item.count || 0)\n              })),\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Distribuci\\xF3n por Monto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), stats.amountRanges && /*#__PURE__*/_jsxDEV(AmountRangeChart, {\n              data: stats.amountRanges,\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), (user === null || user === void 0 ? void 0 : user.role) === USER_ROLES.SUPERADMIN && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Rendimiento de Asesores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), stats.advisorPerformance && /*#__PURE__*/_jsxDEV(AdvisorPerformanceChart, {\n              data: stats.advisorPerformance,\n              height: 300,\n              title: \"\",\n              maxBars: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card bg-base-100 shadow-md mt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title text-lg font-semibold\",\n            children: \"Solicitudes Recientes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-zebra w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Cliente\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Tipo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Monto\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Estado\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Fecha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: stats.recentApplications && stats.recentApplications.length > 0 ? stats.recentApplications.map((app, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"hover cursor-pointer\",\n                  onClick: () => navigate(`/applications/${app.id}`),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: String(app.client_name || 'N/A')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: getApplicationTypeLabel(app.application_type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatCurrency(Number(app.amount || 0))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge badge-${String(app.status) === 'approved' ? 'success' : String(app.status) === 'rejected' ? 'error' : String(app.status) === 'pending' ? 'warning' : String(app.status) === 'in_review' ? 'info' : 'ghost'}`,\n                      children: String(app.status || 'N/A')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: app.created_at ? new Date(String(app.created_at)).toLocaleDateString() : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: 5,\n                    className: \"text-center\",\n                    children: \"No hay solicitudes recientes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"2uONEl0IvT3ffK3kW+iswzhuMjw=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ChartBarIcon","CurrencyDollarIcon","UserGroupIcon","ClipboardDocumentCheckIcon","useAuth","USER_ROLES","APPLICATION_TYPE_LABELS","MainLayout","MetricCard","StatusDistributionChart","MonthlyApplicationsChart","AmountRangeChart","AdvisorPerformanceChart","getGeneralDashboardStats","getAdvisorDashboardStats","getCompanyDashboardStats","jsxDEV","_jsxDEV","Dashboard","_s","_stats$applications","navigate","user","isLoading","setIsLoading","stats","setStats","error","setError","partialData","setPartialData","formatCurrency","value","numValue","parseFloat","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","isAdvisorStats","obj","conversionRate","fetchDashboardData","dashboardData","role","ADVISOR","id","COMPANY_ADMIN","entityId","statsError","console","totalApplications","applicationsByStatus","avgAmount","minAmount","maxAmount","recentApplications","applicationsByMonth","totalApproved","totalRejected","totalPending","pendingApproval","totalClients","extendedData","applications","pending","approved","rejected","in_review","previousMonthApproved","Math","floor","amountRanges","range","count","random","advisorPerformance","advisor_name","total_applications","approved_applications","err","getApplicationTypeLabel","type","normalizedType","toLowerCase","key","Object","entries","includes","typeMappings","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","icon","color","previousValue","formatValue","isPercentage","Number","Array","isArray","data","map","item","month","String","height","log","status","SUPERADMIN","maxBars","length","app","index","onClick","client_name","application_type","amount","created_at","Date","toLocaleDateString","colSpan","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChartBarIcon, CurrencyDollarIcon, UserGroupIcon, ClipboardDocumentCheckIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { USER_ROLES } from '../utils/constants/roles';\nimport { APPLICATION_TYPE_LABELS } from '../utils/constants/applications';\n\n// Componentes de UI\nimport MainLayout from '../components/layout/MainLayout';\nimport MetricCard from '../components/ui/charts/MetricCard';\nimport StatusDistributionChart from '../components/ui/charts/StatusDistributionChart';\nimport MonthlyApplicationsChart from '../components/ui/charts/MonthlyApplicationsChart';\nimport AmountRangeChart from '../components/ui/charts/AmountRangeChart';\nimport AdvisorPerformanceChart from '../components/ui/charts/AdvisorPerformanceChart';\n\n// Servicios\nimport {\n  DashboardStats,\n  AdvisorStats,\n  CompanyStats,\n  getGeneralDashboardStats,\n  getAdvisorDashboardStats,\n  getCompanyDashboardStats,\n} from '../services/dashboardService';\n\n// Interfaces adicionales\ninterface AmountRange {\n  range: string;\n  count: number;\n}\n\ninterface AdvisorPerformance {\n  advisor_name: string;\n  total_applications: number;\n  approved_applications?: number;\n}\n\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\ninterface ExtendedStats {\n  applications?: { [key: string]: number };\n  previousMonthApproved?: number;\n  amountRanges?: AmountRange[];\n  advisorPerformance?: AdvisorPerformance[];\n}\n\n// Tipo combinado para stats con todas las propiedades posibles\ntype DashboardStatsType = (DashboardStats | AdvisorStats | CompanyStats) & ExtendedStats;\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState<DashboardStatsType | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [partialData, setPartialData] = useState(false);\n\n  // Formatear moneda (pesos)\n  const formatCurrency = (value: number | string) => {\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n      minimumFractionDigits: 2, // Siempre mostrar 2 decimales\n      maximumFractionDigits: 2, // Siempre mostrar 2 decimales\n    }).format(numValue);\n  };\n\n  // Comprobar si el objeto es de tipo AdvisorStats\n  const isAdvisorStats = (obj: DashboardStatsType): obj is AdvisorStats & ExtendedStats => {\n    return 'conversionRate' in obj && typeof obj.conversionRate === 'number';\n  };\n\n  // Cargar estadísticas según rol del usuario\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        setPartialData(false);\n\n        let dashboardData;\n\n        try {\n          if (user.role === USER_ROLES.ADVISOR) {\n            // Estadísticas específicas del asesor\n            dashboardData = await getAdvisorDashboardStats(user.id);\n          } else if (user.role === USER_ROLES.COMPANY_ADMIN && user.entityId) {\n            // Estadísticas específicas de la empresa (entityId contiene el company_id)\n            dashboardData = await getCompanyDashboardStats(user.entityId);\n          } else {\n            // Estadísticas generales para admin del sistema\n            dashboardData = await getGeneralDashboardStats();\n          }\n        } catch (statsError) {\n          console.error('Error fetching dashboard stats:', statsError);\n          // Create fallback data\n          setPartialData(true);\n          dashboardData = {\n            totalApplications: 0,\n            applicationsByStatus: [],\n            avgAmount: 0,\n            minAmount: 0,\n            maxAmount: 0,\n            recentApplications: [],\n            applicationsByMonth: [],\n            totalApproved: 0,\n            totalRejected: 0,\n            totalPending: 0,\n            pendingApproval: 0,\n            totalClients: 0\n          };\n        }\n\n        // Preparar datos de muestra para los gráficos mientras implementamos los datos reales\n        const extendedData: DashboardStatsType = {\n          ...dashboardData,\n          applications: {\n            pending: dashboardData.totalPending || 0,\n            approved: dashboardData.totalApproved || 0,\n            rejected: dashboardData.totalRejected || 0,\n            in_review: (dashboardData.totalPending || 0) - (dashboardData.pendingApproval || 0),\n          },\n          previousMonthApproved: Math.floor((dashboardData.totalApproved || 0) * 0.8), // Simulación\n          amountRanges: [\n            { range: '0-5,000', count: Math.floor(Math.random() * 30) + 10 },\n            { range: '5,001-10,000', count: Math.floor(Math.random() * 25) + 15 },\n            { range: '10,001-20,000', count: Math.floor(Math.random() * 20) + 20 },\n            { range: '20,001-30,000', count: Math.floor(Math.random() * 15) + 10 },\n            { range: '30,001-50,000', count: Math.floor(Math.random() * 10) + 5 },\n            { range: '50,001+', count: Math.floor(Math.random() * 5) + 2 },\n          ],\n          advisorPerformance: [\n            { advisor_name: 'Asesor 1', total_applications: Math.floor(Math.random() * 30) + 20, approved_applications: Math.floor(Math.random() * 20) + 10 },\n            { advisor_name: 'Asesor 2', total_applications: Math.floor(Math.random() * 30) + 15, approved_applications: Math.floor(Math.random() * 15) + 5 },\n            { advisor_name: 'Asesor 3', total_applications: Math.floor(Math.random() * 25) + 10, approved_applications: Math.floor(Math.random() * 10) + 5 },\n            { advisor_name: 'Asesor 4', total_applications: Math.floor(Math.random() * 20) + 5, approved_applications: Math.floor(Math.random() * 10) + 2 },\n            { advisor_name: 'Asesor 5', total_applications: Math.floor(Math.random() * 15) + 5, approved_applications: Math.floor(Math.random() * 8) + 1 },\n          ]\n        };\n\n        setStats(extendedData);\n      } catch (err) {\n        console.error('Error al cargar estadísticas:', err);\n        setError('Error al cargar las estadísticas del dashboard. Intente refrescar la página.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, [navigate, user]);\n\n  // Obtener la etiqueta legible para el tipo de aplicación\n  const getApplicationTypeLabel = (type: string | null | undefined): string => {\n    if (!type) return 'N/A';\n    \n    // Normalizar el tipo a minúsculas para comparación\n    const normalizedType = type.toLowerCase();\n    \n    // Verificar si es alguno de los tipos definidos en APPLICATION_TYPE_LABELS\n    for (const [key, value] of Object.entries(APPLICATION_TYPE_LABELS)) {\n      if (key.toLowerCase() === normalizedType || key.toLowerCase().includes(normalizedType) || normalizedType.includes(key.toLowerCase())) {\n        return value;\n      }\n    }\n    \n    // Mapeo adicional para otros valores comunes\n    const typeMappings: Record<string, string> = {\n      'selected_plans': 'Crédito a Plazos',\n      'product_simulations': 'Simulación',\n      'auto_loan': 'Crédito Auto',\n      'car_backed_loan': 'Crédito con Garantía',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n    \n    // Buscar una coincidencia parcial\n    for (const [key, value] of Object.entries(typeMappings)) {\n      if (normalizedType.includes(key) || key.includes(normalizedType)) {\n        return value;\n      }\n    }\n    \n    // Si no hay coincidencia, retornar el valor original\n    return type;\n  };\n\n  // Si está cargando, mostrar indicador\n  if (isLoading) {\n    return (\n      <MainLayout>\n        <div className=\"flex justify-center items-center h-full p-8\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"loading loading-spinner loading-lg\"></span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si hay error, mostrar mensaje\n  if (error) {\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-error\">\n            <span>{error}</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si no hay datos, mostrar mensaje\n  if (!stats) {\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-info\">\n            <span>No hay datos disponibles para mostrar en el dashboard.</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"p-6 space-y-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">Dashboard</h1>\n\n        {partialData && (\n          <div className=\"alert alert-warning mb-4\">\n            <span>Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.</span>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert alert-error mb-4\">\n            <span>{error}</span>\n          </div>\n        )}\n\n        {/* Tarjetas de métricas principales */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <MetricCard\n            title=\"Total de Solicitudes\"\n            value={stats.totalApplications}\n            icon={<ChartBarIcon className=\"h-5 w-5\" />}\n            color=\"blue\"\n          />\n          <MetricCard\n            title=\"Solicitudes Aprobadas\"\n            value={stats.applications?.approved || 0}\n            previousValue={stats.previousMonthApproved}\n            icon={<ClipboardDocumentCheckIcon className=\"h-5 w-5\" />}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Monto Promedio\"\n            value={stats.avgAmount}\n            formatValue={formatCurrency}\n            icon={<CurrencyDollarIcon className=\"h-5 w-5\" />}\n            color=\"indigo\"\n          />\n          {isAdvisorStats(stats) ? (\n            <MetricCard\n              title=\"Tasa de Conversión\"\n              value={stats.conversionRate}\n              isPercentage={true}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          ) : (\n            <MetricCard\n              title=\"Total de Clientes\"\n              value={'totalClients' in stats && stats.totalClients ? Number(stats.totalClients) : 'No clients'}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          )}\n        </div>\n\n        {/* Gráficos principales */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Solicitudes por Mes</h2>\n              {/* Validar que applicationsByMonth existe y es un array */}\n              {stats.applicationsByMonth && Array.isArray(stats.applicationsByMonth) && (\n                <MonthlyApplicationsChart\n                  data={stats.applicationsByMonth.map(item => ({\n                    month: String(item.month || ''),\n                    count: Number(item.count || 0)\n                  }))}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Estado</h2>\n              {console.log('applicationsByStatus:', stats.applicationsByStatus)}\n              <StatusDistributionChart\n                data={stats.applicationsByStatus.map(item => ({\n                  status: String(item.status || ''),\n                  count: Number(item.count || 0)\n                }))}\n                height={300}\n                title=\"\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Gráficos secundarios */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Monto</h2>\n              {stats.amountRanges && (\n                <AmountRangeChart\n                  data={stats.amountRanges}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          {/* Rendimiento de asesores (solo para superadmin) */}\n          {user?.role === USER_ROLES.SUPERADMIN && (\n            <div className=\"card bg-base-100 shadow-md\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title text-lg font-semibold\">Rendimiento de Asesores</h2>\n                {stats.advisorPerformance && (\n                  <AdvisorPerformanceChart\n                    data={stats.advisorPerformance}\n                    height={300}\n                    title=\"\"\n                    maxBars={8}\n                  />\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Tabla de solicitudes recientes */}\n        <div className=\"card bg-base-100 shadow-md mt-6\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title text-lg font-semibold\">Solicitudes Recientes</h2>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"table table-zebra w-full\">\n                <thead>\n                  <tr>\n                    <th>Cliente</th>\n                    <th>Tipo</th>\n                    <th>Monto</th>\n                    <th>Estado</th>\n                    <th>Fecha</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {stats.recentApplications && stats.recentApplications.length > 0 ? (\n                    stats.recentApplications.map((app, index) => (\n                      <tr key={index} \n                          className=\"hover cursor-pointer\"\n                          onClick={() => navigate(`/applications/${app.id}`)}>\n                        <td>{String(app.client_name || 'N/A')}</td>\n                        <td>{getApplicationTypeLabel(app.application_type)}</td>\n                        <td>{formatCurrency(Number(app.amount || 0))}</td>\n                        <td>\n                          <span className={`badge badge-${String(app.status) === 'approved' ? 'success' : \n                                                           String(app.status) === 'rejected' ? 'error' : \n                                                           String(app.status) === 'pending' ? 'warning' : \n                                                           String(app.status) === 'in_review' ? 'info' : 'ghost'}`}>\n                            {String(app.status || 'N/A')}\n                          </span>\n                        </td>\n                        <td>{app.created_at ? new Date(String(app.created_at)).toLocaleDateString() : 'N/A'}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={5} className=\"text-center\">No hay solicitudes recientes</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}