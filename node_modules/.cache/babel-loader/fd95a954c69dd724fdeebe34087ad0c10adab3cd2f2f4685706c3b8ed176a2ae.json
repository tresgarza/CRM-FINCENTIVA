{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/NotificationPopup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n// Map NotificationType to basic types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapNotificationTypeToBasic = type => {\n  switch (type) {\n    case 'info':\n    case 'new_application':\n    case 'new_message':\n      return 'info';\n    case 'success':\n    case 'approval_required':\n    case 'application_status_updated':\n      return 'success';\n    case 'warning':\n      return 'warning';\n    case 'error':\n    case 'application_comment':\n      return 'error';\n    default:\n      return 'info';\n  }\n};\nconst NotificationPopup = ({\n  title,\n  message,\n  type = 'info',\n  duration = 5000,\n  // Por defecto, 5 segundos\n  onClose,\n  playSound = true,\n  soundType = 'notification'\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(true);\n  const [exiting, setExiting] = useState(false);\n\n  // Configurar el auto-cierre\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        closeNotification();\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n  }, [duration]);\n\n  // Reproducir sonido de notificación\n  useEffect(() => {\n    if (playSound) {\n      // Check if document has been interacted with or if we're in development\n      const hasInteracted = document.documentElement.hasAttribute('data-user-interacted');\n      const isDevelopment = process.env.NODE_ENV === 'development';\n\n      // Only try to play sound if user has interacted or we're in development\n      if (hasInteracted || isDevelopment) {\n        try {\n          // Create a single standardized audio element\n          const audio = new Audio();\n\n          // Set the source based on the sound type\n          switch (soundType) {\n            case 'notification':\n              audio.src = '/sounds/notification.mp3';\n              break;\n            case 'alert':\n              audio.src = '/sounds/alert.mp3';\n              break;\n            case 'approval':\n              audio.src = '/sounds/approval.mp3';\n              break;\n            default:\n              audio.src = '/sounds/notification.mp3';\n          }\n\n          // Add basic error handling\n          audio.addEventListener('error', () => {\n            console.error('Error playing notification sound');\n          });\n\n          // Preload the audio\n          audio.load();\n\n          // Try to play the sound with volume control for better compatibility\n          audio.volume = 0.5;\n\n          // We need to wait for the load event before playing\n          audio.addEventListener('canplaythrough', () => {\n            // Try to play with catch for browsers that block autoplay\n            const playPromise = audio.play();\n            if (playPromise !== undefined) {\n              playPromise.catch(err => {\n                console.error('Error playing notification sound:', err.message);\n              });\n            }\n          }, {\n            once: true\n          });\n        } catch (error) {\n          console.error('Failed to initialize sound:', error);\n        }\n      } else {\n        console.log('Sound not played - user has not interacted with the page yet');\n      }\n    }\n  }, [playSound, soundType]);\n  const closeNotification = () => {\n    setExiting(true);\n    // Agregar un pequeño retraso para la animación de salida\n    setTimeout(() => {\n      setIsVisible(false);\n      if (onClose) onClose();\n    }, 300);\n  };\n  if (!isVisible) return null;\n\n  // Mapeo de estilos según el tipo\n  const typeStyles = {\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-800',\n      title: 'text-blue-900'\n    },\n    success: {\n      bg: 'bg-green-50',\n      border: 'border-green-200',\n      text: 'text-green-800',\n      title: 'text-green-900'\n    },\n    warning: {\n      bg: 'bg-yellow-50',\n      border: 'border-yellow-200',\n      text: 'text-yellow-800',\n      title: 'text-yellow-900'\n    },\n    error: {\n      bg: 'bg-red-50',\n      border: 'border-red-200',\n      text: 'text-red-800',\n      title: 'text-red-900'\n    }\n  };\n\n  // Map complex notification types to the basic ones\n  const basicType = mapNotificationTypeToBasic(type);\n\n  // Use the mapped type to get styles\n  const styles = typeStyles[basicType] || typeStyles.info;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-5 right-5 z-50 max-w-md w-full animate-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.bg} ${styles.border} ${styles.text} rounded-lg shadow-lg p-4 border ${exiting ? 'animate-popup-exit' : 'animate-popup-entry'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-base font-semibold ${styles.title}`,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 text-sm\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeNotification,\n          className: \"flex-shrink-0 ml-2 text-gray-400 hover:text-gray-500 focus:outline-none\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationPopup, \"bcPZT+kBBVGg6BPgoIbVXJ3hBdw=\");\n_c = NotificationPopup;\nexport default NotificationPopup;\nvar _c;\n$RefreshReg$(_c, \"NotificationPopup\");","map":{"version":3,"names":["React","useEffect","useState","XMarkIcon","jsxDEV","_jsxDEV","mapNotificationTypeToBasic","type","NotificationPopup","title","message","duration","onClose","playSound","soundType","_s","isVisible","setIsVisible","exiting","setExiting","timer","setTimeout","closeNotification","clearTimeout","hasInteracted","document","documentElement","hasAttribute","isDevelopment","process","env","NODE_ENV","audio","Audio","src","addEventListener","console","error","load","volume","playPromise","play","undefined","catch","err","once","log","typeStyles","info","bg","border","text","success","warning","basicType","styles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/NotificationPopup.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n// Map NotificationType to basic types\nconst mapNotificationTypeToBasic = (type: string): 'info' | 'success' | 'warning' | 'error' => {\n  switch (type) {\n    case 'info':\n    case 'new_application':\n    case 'new_message':\n      return 'info';\n    case 'success':\n    case 'approval_required':\n    case 'application_status_updated':\n      return 'success';\n    case 'warning':\n      return 'warning';\n    case 'error':\n    case 'application_comment':\n      return 'error';\n    default:\n      return 'info';\n  }\n};\n\ninterface NotificationPopupProps {\n  title: string;\n  message: string;\n  type?: 'info' | 'success' | 'warning' | 'error' | string;\n  duration?: number; // Duración en milisegundos\n  onClose?: () => void;\n  playSound?: boolean;\n  soundType?: 'notification' | 'alert' | 'approval'; // Diferentes tipos de sonido\n}\n\nconst NotificationPopup: React.FC<NotificationPopupProps> = ({\n  title,\n  message,\n  type = 'info',\n  duration = 5000, // Por defecto, 5 segundos\n  onClose,\n  playSound = true,\n  soundType = 'notification'\n}) => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [exiting, setExiting] = useState(false);\n\n  // Configurar el auto-cierre\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        closeNotification();\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n  }, [duration]);\n\n  // Reproducir sonido de notificación\n  useEffect(() => {\n    if (playSound) {\n      // Check if document has been interacted with or if we're in development\n      const hasInteracted = document.documentElement.hasAttribute('data-user-interacted');\n      const isDevelopment = process.env.NODE_ENV === 'development';\n      \n      // Only try to play sound if user has interacted or we're in development\n      if (hasInteracted || isDevelopment) {\n        try {\n          // Create a single standardized audio element\n          const audio = new Audio();\n          \n          // Set the source based on the sound type\n          switch (soundType) {\n            case 'notification':\n              audio.src = '/sounds/notification.mp3';\n              break;\n            case 'alert':\n              audio.src = '/sounds/alert.mp3';\n              break;\n            case 'approval':\n              audio.src = '/sounds/approval.mp3';\n              break;\n            default:\n              audio.src = '/sounds/notification.mp3';\n          }\n          \n          // Add basic error handling\n          audio.addEventListener('error', () => {\n            console.error('Error playing notification sound');\n          });\n          \n          // Preload the audio\n          audio.load();\n          \n          // Try to play the sound with volume control for better compatibility\n          audio.volume = 0.5;\n          \n          // We need to wait for the load event before playing\n          audio.addEventListener('canplaythrough', () => {\n            // Try to play with catch for browsers that block autoplay\n            const playPromise = audio.play();\n            if (playPromise !== undefined) {\n              playPromise.catch(err => {\n                console.error('Error playing notification sound:', err.message);\n              });\n            }\n          }, { once: true });\n        } catch (error) {\n          console.error('Failed to initialize sound:', error);\n        }\n      } else {\n        console.log('Sound not played - user has not interacted with the page yet');\n      }\n    }\n  }, [playSound, soundType]);\n\n  const closeNotification = () => {\n    setExiting(true);\n    // Agregar un pequeño retraso para la animación de salida\n    setTimeout(() => {\n      setIsVisible(false);\n      if (onClose) onClose();\n    }, 300);\n  };\n\n  if (!isVisible) return null;\n\n  // Mapeo de estilos según el tipo\n  const typeStyles = {\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-800',\n      title: 'text-blue-900'\n    },\n    success: {\n      bg: 'bg-green-50',\n      border: 'border-green-200',\n      text: 'text-green-800',\n      title: 'text-green-900'\n    },\n    warning: {\n      bg: 'bg-yellow-50',\n      border: 'border-yellow-200',\n      text: 'text-yellow-800',\n      title: 'text-yellow-900'\n    },\n    error: {\n      bg: 'bg-red-50',\n      border: 'border-red-200',\n      text: 'text-red-800',\n      title: 'text-red-900'\n    }\n  };\n\n  // Map complex notification types to the basic ones\n  const basicType = mapNotificationTypeToBasic(type);\n  \n  // Use the mapped type to get styles\n  const styles = typeStyles[basicType] || typeStyles.info;\n\n  return (\n    <div className=\"fixed top-5 right-5 z-50 max-w-md w-full animate-popup\">\n      <div\n        className={`${styles.bg} ${styles.border} ${styles.text} rounded-lg shadow-lg p-4 border ${\n          exiting ? 'animate-popup-exit' : 'animate-popup-entry'\n        }`}\n      >\n        <div className=\"flex justify-between items-start\">\n          <div className=\"flex-1\">\n            <h3 className={`text-base font-semibold ${styles.title}`}>{title}</h3>\n            <div className=\"mt-1 text-sm\">{message}</div>\n          </div>\n          <button\n            onClick={closeNotification}\n            className=\"flex-shrink-0 ml-2 text-gray-400 hover:text-gray-500 focus:outline-none\"\n          >\n            <XMarkIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationPopup; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}