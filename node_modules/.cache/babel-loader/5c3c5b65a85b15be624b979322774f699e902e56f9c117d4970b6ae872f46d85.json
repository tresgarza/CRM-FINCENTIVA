{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/KanbanBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getApprovalStatus } from '../../services/applicationService';\nimport { STATUS_COLORS, APPLICATION_STATUS, STATUS_LABELS } from '../../utils/constants/statuses';\nimport { usePermissions } from '../../contexts/PermissionsContext';\nimport { useAuth } from '../../contexts/AuthContext';\n\n// Función para escapar cadenas de texto para SQL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction escapeSQLString(str) {\n  if (!str) return '';\n  return str.replace(/'/g, \"''\");\n}\n\n// Interfaz para el estado de aprobación\n\n// Crear un tipo para aplicaciones con su estado de aprobación\n\nconst KanbanBoard = ({\n  applications,\n  onStatusChange\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [appsWithApproval, setAppsWithApproval] = useState([]);\n  const [processingAppId, setProcessingAppId] = useState(null);\n  const {\n    shouldFilterByEntity,\n    getEntityFilter,\n    isAdvisor,\n    isCompanyAdmin\n  } = usePermissions();\n  const {\n    user\n  } = useAuth();\n  const dragItemRef = useRef(null);\n  const dragImageRef = useRef(null);\n  const draggedItemIndexRef = useRef(-1);\n  const draggedItemNewStatusRef = useRef('');\n  const [autoTransitionMessage, setAutoTransitionMessage] = useState(null);\n\n  // Reemplazar los useEffects problemáticos con una única función más clara\n  useEffect(() => {\n    // Si no hay aplicaciones, no hacer nada\n    if (!applications || applications.length === 0) {\n      setAppsWithApproval([]);\n      return;\n    }\n    console.log('Procesando aplicaciones recibidas:', applications.map(app => ({\n      id: app.id,\n      status: app.status,\n      client: app.client_name,\n      amount: app.requested_amount\n    })));\n\n    // Procesar todas las aplicaciones para normalizar su estado\n    const processedApps = applications.map(app => {\n      // Normalizar estados - cualquier aplicación en estado pending o solicitud debe ir a new\n      let normalizedStatus = app.status;\n      if (!normalizedStatus || normalizedStatus === 'pending' || normalizedStatus === 'solicitud') {\n        normalizedStatus = APPLICATION_STATUS.NEW;\n        console.log(`Normalizando aplicación ${app.id} (${app.client_name}) de estado \"${app.status}\" a \"new\"`);\n      }\n      return {\n        ...app,\n        status: normalizedStatus\n      };\n    });\n\n    // Cargar los estados de aprobación para cada aplicación\n    const loadApprovalStatuses = async () => {\n      const entityFilter = shouldFilterByEntity() ? getEntityFilter() : null;\n      try {\n        const updatedApps = await Promise.all(processedApps.map(async app => {\n          try {\n            const approvalStatus = await getApprovalStatus(app.id, entityFilter);\n            return {\n              ...app,\n              approvalStatus\n            };\n          } catch (error) {\n            console.error(`Error loading approval status for app ${app.id}:`, error);\n            return app;\n          }\n        }));\n        console.log(`Aplicaciones procesadas: ${updatedApps.length}`);\n        setAppsWithApproval(updatedApps);\n      } catch (error) {\n        console.error(\"Error cargando estados de aprobación:\", error);\n        // En caso de error, al menos utilizar las aplicaciones con estados normalizados\n        setAppsWithApproval(processedApps.map(app => ({\n          ...app\n        })));\n      }\n    };\n    loadApprovalStatuses();\n  }, [applications, shouldFilterByEntity, getEntityFilter]);\n\n  // Simplificar la lógica de agrupación para evitar pérdida de datos\n  const groupedApplications = React.useMemo(() => {\n    console.log('Agrupando aplicaciones:', appsWithApproval.map(app => ({\n      id: app.id,\n      status: app.status,\n      client: app.client_name\n    })));\n\n    // Crear un objeto con todos los estados posibles como claves y arrays vacíos como valores\n    const initialGroups = Object.values(APPLICATION_STATUS).reduce((acc, status) => {\n      acc[status] = [];\n      return acc;\n    }, {});\n\n    // Luego añadir las aplicaciones a sus grupos correspondientes\n    return appsWithApproval.reduce((acc, app) => {\n      if (app.isMoving && app.targetStatus) {\n        // Si está en movimiento, colocarla en la columna de destino\n        acc[app.targetStatus].push(app);\n      } else {\n        // Si no, usar el estado normal, normalizando \"pending\" y \"solicitud\" a \"new\"\n        let status = app.status || APPLICATION_STATUS.NEW;\n\n        // Normalizar estados \"pending\" y \"solicitud\" a \"new\"\n        if (status === 'pending' || status === 'solicitud') {\n          status = APPLICATION_STATUS.NEW;\n        }\n        acc[status].push(app);\n      }\n      return acc;\n    }, initialGroups);\n  }, [appsWithApproval]);\n\n  // Optimizar la creación de columnas para incluir correctamente todas las aplicaciones\n  const columns = React.useMemo(() => {\n    // Registrar la cantidad de aplicaciones en cada grupo para depuración\n    console.log('Conteo de aplicaciones por estado:');\n    Object.entries(groupedApplications).forEach(([status, apps]) => {\n      console.log(`${status}: ${apps.length}`);\n    });\n\n    // Diferentes configuraciones de columnas según el rol\n    if (isCompanyAdmin()) {\n      var _groupedApplications$;\n      // Configuración para administradores de empresa\n      const companyAdminColumns = [{\n        id: APPLICATION_STATUS.NEW,\n        title: STATUS_LABELS[APPLICATION_STATUS.NEW],\n        color: STATUS_COLORS[APPLICATION_STATUS.NEW] || 'neutral',\n        applications: [...(groupedApplications[APPLICATION_STATUS.NEW] || []), ...(groupedApplications[APPLICATION_STATUS.PENDING] || []), ...(groupedApplications[APPLICATION_STATUS.SOLICITUD] || [])]\n      }, {\n        id: APPLICATION_STATUS.IN_REVIEW,\n        title: STATUS_LABELS[APPLICATION_STATUS.IN_REVIEW],\n        color: STATUS_COLORS[APPLICATION_STATUS.IN_REVIEW] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.IN_REVIEW] || []\n      }, {\n        id: APPLICATION_STATUS.APPROVED,\n        title: 'Aprobado por mi',\n        color: STATUS_COLORS[APPLICATION_STATUS.APPROVED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.APPROVED] || []\n      }, {\n        id: APPLICATION_STATUS.POR_DISPERSAR,\n        title: STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR],\n        color: STATUS_COLORS[APPLICATION_STATUS.POR_DISPERSAR] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.POR_DISPERSAR] || []\n      }, {\n        id: APPLICATION_STATUS.COMPLETED,\n        title: STATUS_LABELS[APPLICATION_STATUS.COMPLETED],\n        color: STATUS_COLORS[APPLICATION_STATUS.COMPLETED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.COMPLETED] || []\n      }, {\n        id: APPLICATION_STATUS.EXPIRED,\n        title: STATUS_LABELS[APPLICATION_STATUS.EXPIRED],\n        color: STATUS_COLORS[APPLICATION_STATUS.EXPIRED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.EXPIRED] || []\n      }];\n\n      // Agregar columna \"Rechazado\" si hay aplicaciones rechazadas\n      if (((_groupedApplications$ = groupedApplications[APPLICATION_STATUS.REJECTED]) === null || _groupedApplications$ === void 0 ? void 0 : _groupedApplications$.length) > 0) {\n        companyAdminColumns.splice(3, 0, {\n          id: APPLICATION_STATUS.REJECTED,\n          title: STATUS_LABELS[APPLICATION_STATUS.REJECTED],\n          color: STATUS_COLORS[APPLICATION_STATUS.REJECTED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.REJECTED] || []\n        });\n      }\n      console.log('Columnas para admin de empresa:', companyAdminColumns.map(col => ({\n        id: col.id,\n        count: col.applications.length\n      })));\n      return companyAdminColumns;\n    }\n\n    // Para asesores, mostrar todas las columnas estándar\n    const advisorColumns = [{\n      id: APPLICATION_STATUS.NEW,\n      title: STATUS_LABELS[APPLICATION_STATUS.NEW],\n      color: STATUS_COLORS[APPLICATION_STATUS.NEW] || 'neutral',\n      applications: [...(groupedApplications[APPLICATION_STATUS.NEW] || []), ...(groupedApplications[APPLICATION_STATUS.PENDING] || []), ...(groupedApplications[APPLICATION_STATUS.SOLICITUD] || [])]\n    }, {\n      id: APPLICATION_STATUS.IN_REVIEW,\n      title: STATUS_LABELS[APPLICATION_STATUS.IN_REVIEW],\n      color: STATUS_COLORS[APPLICATION_STATUS.IN_REVIEW] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.IN_REVIEW] || []\n    }, {\n      id: APPLICATION_STATUS.APPROVED,\n      title: STATUS_LABELS[APPLICATION_STATUS.APPROVED],\n      color: STATUS_COLORS[APPLICATION_STATUS.APPROVED] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.APPROVED] || []\n    }, {\n      id: APPLICATION_STATUS.REJECTED,\n      title: STATUS_LABELS[APPLICATION_STATUS.REJECTED],\n      color: STATUS_COLORS[APPLICATION_STATUS.REJECTED] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.REJECTED] || []\n    }, {\n      id: APPLICATION_STATUS.POR_DISPERSAR,\n      title: STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR],\n      color: STATUS_COLORS[APPLICATION_STATUS.POR_DISPERSAR] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.POR_DISPERSAR] || []\n    }, {\n      id: APPLICATION_STATUS.COMPLETED,\n      title: STATUS_LABELS[APPLICATION_STATUS.COMPLETED],\n      color: STATUS_COLORS[APPLICATION_STATUS.COMPLETED] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.COMPLETED] || []\n    }, {\n      id: APPLICATION_STATUS.EXPIRED,\n      title: STATUS_LABELS[APPLICATION_STATUS.EXPIRED],\n      color: STATUS_COLORS[APPLICATION_STATUS.EXPIRED] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.EXPIRED] || []\n    }, {\n      id: APPLICATION_STATUS.CANCELLED,\n      title: STATUS_LABELS[APPLICATION_STATUS.CANCELLED],\n      color: STATUS_COLORS[APPLICATION_STATUS.CANCELLED] || 'neutral',\n      applications: groupedApplications[APPLICATION_STATUS.CANCELLED] || []\n    }];\n    console.log('Columnas para asesor:', advisorColumns.map(col => ({\n      id: col.id,\n      count: col.applications.length\n    })));\n    return advisorColumns;\n  }, [groupedApplications, isCompanyAdmin]);\n\n  // Función para actualizar localmente el estado de aprobación de una aplicación\n  const updateLocalApprovalStatus = (applicationId, updates) => {\n    setAppsWithApproval(prev => prev.map(app => app.id === applicationId ? {\n      ...app,\n      approvalStatus: {\n        ...(app.approvalStatus || {\n          approvedByAdvisor: false,\n          approvedByCompany: false\n        }),\n        ...updates\n      }\n    } : app));\n  };\n  const handleDragStart = (e, application, idx) => {\n    // Guardar la aplicación que estamos arrastrando\n    draggedItemIndexRef.current = idx;\n\n    // Almacenar el elemento que estamos arrastrando para gestionar mejor el evento\n    dragItemRef.current = e.currentTarget;\n\n    // Establecer los datos que queremos transferir\n    e.dataTransfer.setData('text/plain', application.id);\n    e.dataTransfer.effectAllowed = 'move';\n\n    // Crear una copia visual para el arrastre\n    if (!dragImageRef.current) {\n      dragImageRef.current = e.currentTarget.cloneNode(true);\n      dragImageRef.current.style.position = 'absolute';\n      dragImageRef.current.style.top = '-1000px';\n      dragImageRef.current.style.opacity = '0.8';\n      dragImageRef.current.style.transform = 'scale(0.9)';\n      dragImageRef.current.style.width = `${e.currentTarget.offsetWidth}px`;\n      document.body.appendChild(dragImageRef.current);\n    }\n\n    // Establecer la imagen de arrastre\n    if (dragImageRef.current) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      e.dataTransfer.setDragImage(dragImageRef.current, rect.width / 2, 20);\n    }\n\n    // Añadir clase CSS para mostrar visualmente que el elemento está siendo arrastrado\n    if (e.currentTarget) {\n      e.currentTarget.classList.add('dragging');\n    }\n  };\n  const handleDragEnd = e => {\n    // Eliminar clase CSS de arrastre\n    if (dragItemRef.current) {\n      dragItemRef.current.classList.remove('dragging');\n      dragItemRef.current = null;\n    }\n    if (e.currentTarget) {\n      e.currentTarget.classList.remove('dragging');\n    }\n\n    // Eliminar el elemento clonado para el arrastre\n    if (dragImageRef.current) {\n      document.body.removeChild(dragImageRef.current);\n      dragImageRef.current = null;\n    }\n    draggedItemIndexRef.current = -1;\n    draggedItemNewStatusRef.current = '';\n  };\n  const handleDragOver = (e, columnStatus) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n\n    // Guardar el nuevo estado para la actualización optimista\n    if (draggedItemNewStatusRef.current !== columnStatus) {\n      draggedItemNewStatusRef.current = columnStatus;\n    }\n\n    // Añadir clase visual para indicar la columna destino\n    if (e.currentTarget.classList.contains('kanban-column')) {\n      document.querySelectorAll('.kanban-column').forEach(col => {\n        col.classList.remove('drag-over');\n      });\n      e.currentTarget.classList.add('drag-over');\n    }\n  };\n\n  // Actualizar la función canDragCard para permitir mover tarjetas de status \"nuevo\" para admin de empresa\n  const canDragCard = app => {\n    // Los asesores pueden mover todas las tarjetas excepto las que están en movimiento\n    if (isAdvisor()) {\n      return !app.isMoving;\n    }\n\n    // Para administradores de empresa:\n    if (isCompanyAdmin()) {\n      // No puede mover tarjetas que ya están en movimiento\n      if (app.isMoving) return false;\n\n      // Puede mover tarjetas en estado \"nuevo\" (new)\n      if (app.status === APPLICATION_STATUS.NEW) return true;\n\n      // Puede mover tarjetas en revisión (in_review)\n      if (app.status === APPLICATION_STATUS.IN_REVIEW) return true;\n\n      // Puede mover tarjetas a estado aprobado por empresa\n      if (app.status === APPLICATION_STATUS.APPROVED) return true;\n\n      // No puede mover tarjetas en estos estados\n      if (app.status === APPLICATION_STATUS.REJECTED || app.status === APPLICATION_STATUS.POR_DISPERSAR || app.status === APPLICATION_STATUS.COMPLETED || app.status === APPLICATION_STATUS.EXPIRED || app.status === APPLICATION_STATUS.CANCELLED) {\n        return false;\n      }\n\n      // Por defecto, permitir movimiento para cualquier otro estado\n      return true;\n    }\n\n    // Para otros roles, no permitir mover tarjetas\n    return false;\n  };\n\n  // Modificar handleDrop para asegurar que se cumplan las reglas correctas\n  const handleDrop = async (e, newStatus) => {\n    e.preventDefault();\n\n    // Recuperar datos de la aplicación que se está moviendo\n    const dragData = JSON.parse(e.dataTransfer.getData('application'));\n    const {\n      application,\n      sourceStatus,\n      index\n    } = dragData;\n\n    // Validar que la aplicación existe\n    if (!application || !application.id) {\n      console.error('Datos de aplicación inválidos:', dragData);\n      return;\n    }\n\n    // No hacer nada si no hay cambio de estado\n    if (sourceStatus === newStatus) return;\n\n    // Restricciones de movimiento según rol\n    if (isCompanyAdmin()) {\n      // Administradores de empresa: reglas específicas para ellos\n\n      // No pueden mover a estado rechazado (solo asesores)\n      if (newStatus === APPLICATION_STATUS.REJECTED) {\n        setErrorMessage('Los administradores de empresa no pueden mover solicitudes a Rechazado');\n        return;\n      }\n\n      // No pueden mover a \"Por Dispersar\" directamente, esto debe ser automático\n      if (newStatus === APPLICATION_STATUS.POR_DISPERSAR && sourceStatus !== APPLICATION_STATUS.APPROVED) {\n        setErrorMessage('Las solicitudes solo pueden pasar a \"Por Dispersar\" cuando son aprobadas por asesor y empresa');\n        return;\n      }\n\n      // Reglas para tarjetas en estado \"nuevo\"\n      if (sourceStatus === APPLICATION_STATUS.NEW) {\n        // De \"Nuevo\" solo pueden mover a \"En Revisión\" o \"Aprobado por mi\"\n        if (newStatus !== APPLICATION_STATUS.IN_REVIEW && newStatus !== APPLICATION_STATUS.APPROVED) {\n          setErrorMessage('Las solicitudes nuevas solo pueden moverse a \"En Revisión\" o \"Aprobado por mi\"');\n          return;\n        }\n      }\n\n      // Reglas para tarjetas en estado \"en revisión\"\n      if (sourceStatus === APPLICATION_STATUS.IN_REVIEW) {\n        // De \"En Revisión\" solo pueden mover a \"Aprobado por mi\" o de regreso a \"Nuevo\"\n        if (newStatus !== APPLICATION_STATUS.APPROVED && newStatus !== APPLICATION_STATUS.NEW) {\n          setErrorMessage('Las solicitudes en revisión solo pueden moverse a \"Aprobado por mi\" o \"Nuevo\"');\n          return;\n        }\n      }\n\n      // Reglas para tarjetas en estado \"aprobado\"\n      if (sourceStatus === APPLICATION_STATUS.APPROVED) {\n        // De \"Aprobado por mi\" solo pueden mover de regreso a \"En Revisión\" o \"Nuevo\" \n        if (newStatus !== APPLICATION_STATUS.IN_REVIEW && newStatus !== APPLICATION_STATUS.NEW) {\n          setErrorMessage('Las solicitudes aprobadas por empresa solo pueden moverse a \"En Revisión\" o \"Nuevo\"');\n          return;\n        }\n      }\n    }\n\n    // Actualización optimista del estado local\n    const updatedApps = [...appsWithApproval];\n    const appIndex = updatedApps.findIndex(app => app.id === application.id);\n    if (appIndex !== -1) {\n      // Marcar la aplicación como en movimiento y con estado de destino\n      updatedApps[appIndex] = {\n        ...updatedApps[appIndex],\n        isMoving: true,\n        targetStatus: newStatus\n      };\n      setAppsWithApproval(updatedApps);\n\n      // Preparar actualización de aprobación para pasar a \"por dispersar\"\n      if (newStatus === APPLICATION_STATUS.APPROVED) {\n        // Actualizar estado de aprobación según el rol del usuario\n        if (isAdvisor()) {\n          updateLocalApprovalStatus(application.id, {\n            approvedByAdvisor: true\n          });\n        } else if (isCompanyAdmin()) {\n          updateLocalApprovalStatus(application.id, {\n            approvedByCompany: true\n          });\n        }\n      }\n    }\n    try {\n      // Llamar a la función para actualizar el estado de la aplicación\n      if (onStatusChange) {\n        await onStatusChange(application, newStatus);\n\n        // Si todo sale bien, actualizar el estado local\n        const finalUpdatedApps = [...appsWithApproval];\n        const finalAppIndex = finalUpdatedApps.findIndex(app => app.id === application.id);\n        if (finalAppIndex !== -1) {\n          // Actualizar el estado y quitar los marcadores de movimiento\n          finalUpdatedApps[finalAppIndex] = {\n            ...finalUpdatedApps[finalAppIndex],\n            status: newStatus,\n            isMoving: false,\n            targetStatus: undefined\n          };\n          setAppsWithApproval(finalUpdatedApps);\n\n          // Si ambos aprobadores han aprobado, mover automáticamente a \"Por Dispersar\"\n          const appApprovalStatus = finalUpdatedApps[finalAppIndex].approvalStatus;\n          if (appApprovalStatus && appApprovalStatus.approvedByAdvisor && appApprovalStatus.approvedByCompany && newStatus === APPLICATION_STATUS.APPROVED) {\n            // Configurar mensaje de transición automática y moverla después de un breve retraso\n            setAutoTransitionMessage(`La solicitud de ${application.client_name} ha sido aprobada por ambas partes y avanzará automáticamente a \"Por Dispersar\"`);\n\n            // Esperar un momento y luego mover automáticamente\n            setTimeout(async () => {\n              try {\n                if (onStatusChange) {\n                  await onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n\n                  // Actualizar el estado local tras el movimiento automático\n                  const autoUpdatedApps = [...appsWithApproval];\n                  const autoAppIndex = autoUpdatedApps.findIndex(app => app.id === application.id);\n                  if (autoAppIndex !== -1) {\n                    autoUpdatedApps[autoAppIndex] = {\n                      ...autoUpdatedApps[autoAppIndex],\n                      status: APPLICATION_STATUS.POR_DISPERSAR\n                    };\n                    setAppsWithApproval(autoUpdatedApps);\n                  }\n                }\n              } catch (error) {\n                console.error('Error al mover automáticamente a Por Dispersar:', error);\n                setErrorMessage('Error al mover automáticamente la solicitud a Por Dispersar');\n              } finally {\n                // Limpiar mensaje de transición\n                setTimeout(() => setAutoTransitionMessage(null), 5000);\n              }\n            }, 3000);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error al cambiar el estado de la aplicación:', error);\n      setErrorMessage('Error al cambiar el estado de la aplicación');\n\n      // Revertir cambios optimistas en caso de error\n      const revertApps = [...appsWithApproval];\n      const revertAppIndex = revertApps.findIndex(app => app.id === application.id);\n      if (revertAppIndex !== -1) {\n        revertApps[revertAppIndex] = {\n          ...revertApps[revertAppIndex],\n          isMoving: false,\n          targetStatus: undefined\n        };\n        setAppsWithApproval(revertApps);\n      }\n    }\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN'\n    }).format(amount);\n  };\n\n  // Renderizar los indicadores de aprobación\n  const renderApprovalIndicators = app => {\n    if (!app.approvalStatus) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mt-1 space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip tooltip-top flex items-center\",\n        \"data-tip\": app.approvalStatus.approvedByAdvisor ? \"Aprobado por asesor\" : \"Pendiente de aprobación por asesor\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs mr-1\",\n          children: \"Asesor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${app.approvalStatus.approvedByAdvisor ? 'bg-success animate-pulse' : 'bg-warning'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip tooltip-top flex items-center\",\n        \"data-tip\": app.approvalStatus.approvedByCompany ? \"Aprobado por empresa\" : \"Pendiente de aprobación por empresa\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs mr-1\",\n          children: \"Empresa:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${app.approvalStatus.approvedByCompany ? 'bg-success animate-pulse' : 'bg-warning'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), app.approvalStatus.approvedByAdvisor && app.approvalStatus.approvedByCompany && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip tooltip-top ml-2\",\n        \"data-tip\": \"Aprobada por ambos\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge badge-success badge-sm\",\n          children: \"Aprobado Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 7\n    }, this);\n  };\n  const getProductLabel = type => {\n    const labels = {\n      'selected_plans': 'Crédito a Plazos',\n      'product_simulations': 'Simulación',\n      'auto_loan': 'Crédito Auto',\n      'car_backed_loan': 'Crédito con Garantía',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n    return labels[type] || type;\n  };\n\n  // Función para obtener el color apropiado para la tarjeta según estado y aprobaciones\n  const getCardColor = app => {\n    const status = app.status || '';\n\n    // Colores específicos según el estado\n    switch (status.toLowerCase()) {\n      case APPLICATION_STATUS.REJECTED:\n        return 'border-error bg-red-50';\n      case APPLICATION_STATUS.APPROVED:\n        // Si está aprobado, verificar el estado de las aprobaciones\n        if (app.approvalStatus) {\n          const {\n            approvedByAdvisor,\n            approvedByCompany\n          } = app.approvalStatus;\n          if (approvedByAdvisor && approvedByCompany) {\n            return 'border-success bg-green-100'; // Aprobado por ambos\n          } else if (approvedByAdvisor) {\n            return 'border-success bg-green-50'; // Aprobado solo por asesor\n          } else if (approvedByCompany) {\n            return 'border-info bg-blue-50'; // Aprobado solo por empresa\n          }\n        }\n        return 'border-success bg-green-50';\n      case APPLICATION_STATUS.IN_REVIEW:\n        return 'border-info bg-blue-50';\n      case APPLICATION_STATUS.NEW:\n        return 'border-warning bg-yellow-50';\n      case APPLICATION_STATUS.PENDING:\n        return 'border-warning bg-amber-50';\n      case APPLICATION_STATUS.POR_DISPERSAR:\n        return 'border-accent bg-purple-50';\n      case APPLICATION_STATUS.COMPLETED:\n        return 'border-primary bg-indigo-50';\n      case APPLICATION_STATUS.EXPIRED:\n        return 'border-error bg-red-100';\n      case APPLICATION_STATUS.CANCELLED:\n        return 'border-neutral bg-gray-100';\n      default:\n        // Si el estado no coincide con ninguno de los anteriores, usar el color de la columna\n        return `border-${app.status || 'neutral'}`;\n    }\n  };\n\n  // Función para determinar si una tarjeta está habilitada para ser movida\n  const getDraggableClasses = app => {\n    const canDrag = canDragCard(app) && !!onStatusChange && app.id !== processingAppId;\n    if (canDrag) {\n      return 'cursor-grab hover:shadow-lg kanban-card-draggable';\n    } else {\n      return 'cursor-not-allowed opacity-80 kanban-card-locked';\n    }\n  };\n\n  // Función para obtener el texto del tooltip según el estado de la tarjeta\n  const getDragTooltip = app => {\n    if (app.id === processingAppId) {\n      return \"Esta tarjeta está siendo procesada\";\n    }\n    if (!onStatusChange) {\n      return \"No tienes permisos para mover tarjetas\";\n    }\n    if (isCompanyAdmin()) {\n      if (app.status === APPLICATION_STATUS.REJECTED) {\n        return \"Las tarjetas rechazadas solo pueden ser movidas por asesores\";\n      }\n      if ([APPLICATION_STATUS.POR_DISPERSAR, APPLICATION_STATUS.COMPLETED, APPLICATION_STATUS.EXPIRED, APPLICATION_STATUS.CANCELLED].includes(app.status)) {\n        return `No puedes mover tarjetas que están en estado \"${STATUS_LABELS[app.status]}\"`;\n      }\n    }\n    return \"Arrastra para cambiar el estado\";\n  };\n  if (applications.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-base-200 p-6 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-medium text-center\",\n        children: \"No hay solicitudes para mostrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500 mt-2\",\n        children: \"No se encontraron solicitudes en el sistema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Añadir estilos CSS para el scrollbar personalizado y mejoras visuales\n  const customStyles = `\n    .custom-scrollbar::-webkit-scrollbar {\n      width: 8px;\n      height: 8px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-track {\n      background: #f1f1f1;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb {\n      background: #888;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n    \n    .kanban-card {\n      transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out, box-shadow 0.3s ease-in-out, border-color 0.3s ease;\n      touch-action: none;\n      user-select: none;\n      will-change: transform, opacity; /* Optimización para hardware rendering */\n    }\n    \n    .kanban-card-draggable:active {\n      cursor: grabbing;\n    }\n    \n    .kanban-card-locked {\n      position: relative;\n    }\n    \n    .kanban-card-locked::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 12px;\n      height: 12px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23999'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n    }\n    \n    .kanban-card.dragging {\n      opacity: 0.8;\n      transform: scale(1.03);\n      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      z-index: 50;\n    }\n    \n    .kanban-column {\n      transition: all 0.2s ease;\n      border-radius: 0.75rem;\n      will-change: transform, background-color; /* Optimización para hardware rendering */\n    }\n    \n    .kanban-column.drag-over {\n      background-color: rgba(var(--b2, 217 217 217) / 0.5);\n      transform: scale(1.01);\n      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n    }\n\n    .kanban-container {\n      scroll-behavior: smooth;\n    }\n\n    @media (min-width: 768px) {\n      .kanban-card:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n      }\n    }\n    \n    /* Animaciones para cambios de estado */\n    @keyframes fadeIn {\n      0% { opacity: 0; }\n      100% { opacity: 1; }\n    }\n    \n    @keyframes slideIn {\n      0% { transform: translateY(10px); opacity: 0; }\n      100% { transform: translateY(0); opacity: 1; }\n    }\n    \n    @keyframes processingPulse {\n      0% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0.4); }\n      70% { box-shadow: 0 0 0 6px rgba(124, 58, 237, 0); }\n      100% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0); }\n    }\n    \n    .kanban-card {\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    .processing-toast {\n      position: fixed;\n      bottom: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    .auto-transition-toast {\n      position: fixed;\n      bottom: 70px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: #dcfce7;\n      border: 1px solid #86efac;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    /* Mejoras para vista mobile */\n    @media (max-width: 640px) {\n      .kanban-column {\n        min-height: 300px;\n      }\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full overflow-x-auto custom-scrollbar relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: customStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 7\n    }, this), processingAppId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing-toast\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading loading-spinner loading-sm text-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium\",\n        children: \"Actualizando estado...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 9\n    }, this), autoTransitionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-transition-toast\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading loading-spinner loading-sm text-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium\",\n        children: autoTransitionMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 alert alert-error shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"stroke-current flex-shrink-0 h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: \"2\",\n            d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-none\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm\",\n          onClick: () => setErrorMessage(null),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 2xl:grid-cols-6 gap-4 pb-4 kanban-container p-4\",\n      style: {\n        minWidth: '1000px'\n      },\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bg-base-100 rounded-xl shadow-md border-t-4 border-${column.color} border-l border-r border-b flex flex-col h-full kanban-column`,\n        onDragOver: e => {\n          handleDragOver(e, column.id);\n        },\n        onDragLeave: e => {\n          e.currentTarget.classList.remove('drag-over');\n        },\n        onDrop: e => {\n          handleDrop(e, column.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-center py-3 px-4 font-bold rounded-t-lg flex items-center justify-between bg-${column.color} bg-opacity-10`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-${column.color} font-bold text-lg`,\n            children: column.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge badge-${column.color} badge-lg`,\n            children: column.applications.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 space-y-3 min-h-[500px] max-h-[calc(100vh-220px)] overflow-y-auto custom-scrollbar flex-grow\",\n          children: column.applications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center h-full opacity-50 border-2 border-dashed border-base-300 rounded-lg p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-12 w-12 mx-auto text-gray-400\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 1,\n                  d: \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-2\",\n                children: \"No hay solicitudes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 17\n          }, this) : column.applications.map((app, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-tip\": getDragTooltip(app),\n            className: `card shadow hover:shadow-lg transition-all ${getCardColor(app)} border-l-4 border-t border-r border-b hover:border-primary kanban-card relative ${app.id === processingAppId ? 'processing' : ''} ${app.isMoving ? 'opacity-90' : ''} ${getDraggableClasses(app)}`,\n            draggable: !!onStatusChange && app.id !== processingAppId && canDragCard(app),\n            onDragStart: e => handleDragStart(e, app, index),\n            onDragEnd: handleDragEnd,\n            style: {\n              animation: app.id === processingAppId ? 'processingPulse 1.5s infinite' : ''\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1 font-semibold\",\n                    children: app.client_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge badge-${column.color} badge-md`,\n                    children: getProductLabel(app.application_type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 929,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600 mb-1 flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1 inline\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 937,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 936,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"truncate max-w-[180px] font-medium\",\n                    children: app.company_name || \"Sin empresa\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 939,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 935,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1 text-primary\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 947,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 946,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-base font-bold text-primary\",\n                    children: formatCurrency(app.requested_amount)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 949,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 945,\n                  columnNumber: 25\n                }, this), renderApprovalIndicators(app), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-actions justify-end mt-3\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/applications/${app.id}`,\n                    className: \"btn btn-sm btn-primary w-full\",\n                    children: \"Ver Detalle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 958,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 957,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 21\n            }, this)\n          }, app.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 13\n        }, this)]\n      }, column.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 848,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"9HJAHsGKha/OdaiZwZ4vKu+iN2M=\", false, function () {\n  return [usePermissions, useAuth];\n});\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","getApprovalStatus","STATUS_COLORS","APPLICATION_STATUS","STATUS_LABELS","usePermissions","useAuth","jsxDEV","_jsxDEV","escapeSQLString","str","replace","KanbanBoard","applications","onStatusChange","_s","isLoading","setIsLoading","errorMessage","setErrorMessage","appsWithApproval","setAppsWithApproval","processingAppId","setProcessingAppId","shouldFilterByEntity","getEntityFilter","isAdvisor","isCompanyAdmin","user","dragItemRef","dragImageRef","draggedItemIndexRef","draggedItemNewStatusRef","autoTransitionMessage","setAutoTransitionMessage","length","console","log","map","app","id","status","client","client_name","amount","requested_amount","processedApps","normalizedStatus","NEW","loadApprovalStatuses","entityFilter","updatedApps","Promise","all","approvalStatus","error","groupedApplications","useMemo","initialGroups","Object","values","reduce","acc","isMoving","targetStatus","push","columns","entries","forEach","apps","_groupedApplications$","companyAdminColumns","title","color","PENDING","SOLICITUD","IN_REVIEW","APPROVED","POR_DISPERSAR","COMPLETED","EXPIRED","REJECTED","splice","col","count","advisorColumns","CANCELLED","updateLocalApprovalStatus","applicationId","updates","prev","approvedByAdvisor","approvedByCompany","handleDragStart","e","application","idx","current","currentTarget","dataTransfer","setData","effectAllowed","cloneNode","style","position","top","opacity","transform","width","offsetWidth","document","body","appendChild","rect","getBoundingClientRect","setDragImage","classList","add","handleDragEnd","remove","removeChild","handleDragOver","columnStatus","preventDefault","stopPropagation","dropEffect","contains","querySelectorAll","canDragCard","handleDrop","newStatus","dragData","JSON","parse","getData","sourceStatus","index","appIndex","findIndex","finalUpdatedApps","finalAppIndex","undefined","appApprovalStatus","setTimeout","autoUpdatedApps","autoAppIndex","revertApps","revertAppIndex","formatCurrency","Intl","NumberFormat","currency","format","renderApprovalIndicators","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getProductLabel","type","labels","getCardColor","toLowerCase","getDraggableClasses","canDrag","getDragTooltip","includes","customStyles","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","minWidth","column","onDragOver","onDragLeave","onDrop","stroke","draggable","onDragStart","onDragEnd","animation","application_type","company_name","to","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Application, getApprovalStatus, approveByAdvisor, approveByCompany } from '../../services/applicationService';\nimport { STATUS_COLORS, APPLICATION_STATUS, STATUS_LABELS } from '../../utils/constants/statuses';\nimport { usePermissions } from '../../contexts/PermissionsContext';\nimport { useAuth } from '../../contexts/AuthContext';\n\n// Función para escapar cadenas de texto para SQL\nfunction escapeSQLString(str: string) {\n  if (!str) return '';\n  return str.replace(/'/g, \"''\");\n}\n\ninterface KanbanBoardProps {\n  applications: Application[];\n  onStatusChange?: (application: Application, newStatus: string) => Promise<void>;\n}\n\n// Interfaz para el estado de aprobación\ninterface ApprovalStatus {\n  approvedByAdvisor: boolean;\n  approvedByCompany: boolean;\n}\n\n// Crear un tipo para aplicaciones con su estado de aprobación\ntype ApplicationWithApproval = Application & {\n  approvalStatus?: ApprovalStatus;\n  isMoving?: boolean;\n  targetStatus?: string;\n};\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({ applications, onStatusChange }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  const [appsWithApproval, setAppsWithApproval] = useState<ApplicationWithApproval[]>([]);\n  const [processingAppId, setProcessingAppId] = useState<string | null>(null);\n  const { shouldFilterByEntity, getEntityFilter, isAdvisor, isCompanyAdmin } = usePermissions();\n  const { user } = useAuth();\n  const dragItemRef = useRef<HTMLDivElement | null>(null);\n  const dragImageRef = useRef<HTMLDivElement | null>(null);\n  const draggedItemIndexRef = useRef<number>(-1);\n  const draggedItemNewStatusRef = useRef<string>('');\n  const [autoTransitionMessage, setAutoTransitionMessage] = useState<string | null>(null);\n  \n  // Reemplazar los useEffects problemáticos con una única función más clara\n  useEffect(() => {\n    // Si no hay aplicaciones, no hacer nada\n    if (!applications || applications.length === 0) {\n      setAppsWithApproval([]);\n      return;\n    }\n    \n    console.log('Procesando aplicaciones recibidas:', applications.map(app => ({\n      id: app.id,\n      status: app.status,\n      client: app.client_name,\n      amount: app.requested_amount\n    })));\n    \n    // Procesar todas las aplicaciones para normalizar su estado\n    const processedApps = applications.map(app => {\n      // Normalizar estados - cualquier aplicación en estado pending o solicitud debe ir a new\n      let normalizedStatus = app.status;\n      \n      if (!normalizedStatus || \n          normalizedStatus === 'pending' || \n          normalizedStatus === 'solicitud') {\n        normalizedStatus = APPLICATION_STATUS.NEW;\n        console.log(`Normalizando aplicación ${app.id} (${app.client_name}) de estado \"${app.status}\" a \"new\"`);\n      }\n      \n      return {\n        ...app,\n        status: normalizedStatus\n      };\n    });\n    \n    // Cargar los estados de aprobación para cada aplicación\n    const loadApprovalStatuses = async () => {\n      const entityFilter = shouldFilterByEntity() ? getEntityFilter() : null;\n      \n      try {\n        const updatedApps = await Promise.all(\n          processedApps.map(async (app) => {\n            try {\n              const approvalStatus = await getApprovalStatus(app.id, entityFilter);\n              return { ...app, approvalStatus };\n            } catch (error) {\n              console.error(`Error loading approval status for app ${app.id}:`, error);\n              return app;\n            }\n          })\n        );\n        \n        console.log(`Aplicaciones procesadas: ${updatedApps.length}`);\n        setAppsWithApproval(updatedApps);\n      } catch (error) {\n        console.error(\"Error cargando estados de aprobación:\", error);\n        // En caso de error, al menos utilizar las aplicaciones con estados normalizados\n        setAppsWithApproval(processedApps.map(app => ({ ...app })));\n      }\n    };\n    \n    loadApprovalStatuses();\n  }, [applications, shouldFilterByEntity, getEntityFilter]);\n  \n  // Simplificar la lógica de agrupación para evitar pérdida de datos\n  const groupedApplications = React.useMemo(() => {\n    console.log('Agrupando aplicaciones:', appsWithApproval.map(app => ({\n      id: app.id,\n      status: app.status,\n      client: app.client_name\n    })));\n    \n    // Crear un objeto con todos los estados posibles como claves y arrays vacíos como valores\n    const initialGroups = Object.values(APPLICATION_STATUS).reduce((acc, status) => {\n      acc[status] = [];\n      return acc;\n    }, {} as Record<string, ApplicationWithApproval[]>);\n    \n    // Luego añadir las aplicaciones a sus grupos correspondientes\n    return appsWithApproval.reduce((acc, app) => {\n      if (app.isMoving && app.targetStatus) {\n        // Si está en movimiento, colocarla en la columna de destino\n        acc[app.targetStatus].push(app);\n      } else {\n        // Si no, usar el estado normal, normalizando \"pending\" y \"solicitud\" a \"new\"\n        let status = app.status || APPLICATION_STATUS.NEW;\n        \n        // Normalizar estados \"pending\" y \"solicitud\" a \"new\"\n        if (status === 'pending' || status === 'solicitud') {\n          status = APPLICATION_STATUS.NEW;\n        }\n        \n        acc[status].push(app);\n      }\n      return acc;\n    }, initialGroups);\n  }, [appsWithApproval]);\n  \n  // Optimizar la creación de columnas para incluir correctamente todas las aplicaciones\n  const columns = React.useMemo(() => {\n    // Registrar la cantidad de aplicaciones en cada grupo para depuración\n    console.log('Conteo de aplicaciones por estado:');\n    Object.entries(groupedApplications).forEach(([status, apps]) => {\n      console.log(`${status}: ${apps.length}`);\n    });\n    \n    // Diferentes configuraciones de columnas según el rol\n    if (isCompanyAdmin()) {\n      // Configuración para administradores de empresa\n      const companyAdminColumns = [\n        {\n          id: APPLICATION_STATUS.NEW,\n          title: STATUS_LABELS[APPLICATION_STATUS.NEW],\n          color: STATUS_COLORS[APPLICATION_STATUS.NEW] || 'neutral',\n          applications: [\n            ...groupedApplications[APPLICATION_STATUS.NEW] || [],\n            ...groupedApplications[APPLICATION_STATUS.PENDING] || [],\n            ...groupedApplications[APPLICATION_STATUS.SOLICITUD] || []\n          ]\n        },\n        {\n          id: APPLICATION_STATUS.IN_REVIEW,\n          title: STATUS_LABELS[APPLICATION_STATUS.IN_REVIEW],\n          color: STATUS_COLORS[APPLICATION_STATUS.IN_REVIEW] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.IN_REVIEW] || []\n        },\n        {\n          id: APPLICATION_STATUS.APPROVED,\n          title: 'Aprobado por mi',\n          color: STATUS_COLORS[APPLICATION_STATUS.APPROVED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.APPROVED] || []\n        },\n        {\n          id: APPLICATION_STATUS.POR_DISPERSAR,\n          title: STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR],\n          color: STATUS_COLORS[APPLICATION_STATUS.POR_DISPERSAR] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.POR_DISPERSAR] || []\n        },\n        {\n          id: APPLICATION_STATUS.COMPLETED,\n          title: STATUS_LABELS[APPLICATION_STATUS.COMPLETED],\n          color: STATUS_COLORS[APPLICATION_STATUS.COMPLETED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.COMPLETED] || []\n        },\n        {\n          id: APPLICATION_STATUS.EXPIRED,\n          title: STATUS_LABELS[APPLICATION_STATUS.EXPIRED],\n          color: STATUS_COLORS[APPLICATION_STATUS.EXPIRED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.EXPIRED] || []\n        }\n      ];\n      \n      // Agregar columna \"Rechazado\" si hay aplicaciones rechazadas\n      if (groupedApplications[APPLICATION_STATUS.REJECTED]?.length > 0) {\n        companyAdminColumns.splice(3, 0, {\n          id: APPLICATION_STATUS.REJECTED,\n          title: STATUS_LABELS[APPLICATION_STATUS.REJECTED],\n          color: STATUS_COLORS[APPLICATION_STATUS.REJECTED] || 'neutral',\n          applications: groupedApplications[APPLICATION_STATUS.REJECTED] || []\n        });\n      }\n      \n      console.log('Columnas para admin de empresa:', companyAdminColumns.map(col => ({\n        id: col.id,\n        count: col.applications.length\n      })));\n      \n      return companyAdminColumns;\n    }\n    \n    // Para asesores, mostrar todas las columnas estándar\n    const advisorColumns = [\n      {\n        id: APPLICATION_STATUS.NEW,\n        title: STATUS_LABELS[APPLICATION_STATUS.NEW],\n        color: STATUS_COLORS[APPLICATION_STATUS.NEW] || 'neutral',\n        applications: [\n          ...groupedApplications[APPLICATION_STATUS.NEW] || [],\n          ...groupedApplications[APPLICATION_STATUS.PENDING] || [],\n          ...groupedApplications[APPLICATION_STATUS.SOLICITUD] || []\n        ]\n      },\n      {\n        id: APPLICATION_STATUS.IN_REVIEW,\n        title: STATUS_LABELS[APPLICATION_STATUS.IN_REVIEW],\n        color: STATUS_COLORS[APPLICATION_STATUS.IN_REVIEW] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.IN_REVIEW] || []\n      },\n      {\n        id: APPLICATION_STATUS.APPROVED,\n        title: STATUS_LABELS[APPLICATION_STATUS.APPROVED],\n        color: STATUS_COLORS[APPLICATION_STATUS.APPROVED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.APPROVED] || []\n      },\n      {\n        id: APPLICATION_STATUS.REJECTED,\n        title: STATUS_LABELS[APPLICATION_STATUS.REJECTED],\n        color: STATUS_COLORS[APPLICATION_STATUS.REJECTED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.REJECTED] || []\n      },\n      {\n        id: APPLICATION_STATUS.POR_DISPERSAR,\n        title: STATUS_LABELS[APPLICATION_STATUS.POR_DISPERSAR],\n        color: STATUS_COLORS[APPLICATION_STATUS.POR_DISPERSAR] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.POR_DISPERSAR] || []\n      },\n      {\n        id: APPLICATION_STATUS.COMPLETED,\n        title: STATUS_LABELS[APPLICATION_STATUS.COMPLETED],\n        color: STATUS_COLORS[APPLICATION_STATUS.COMPLETED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.COMPLETED] || []\n      },\n      {\n        id: APPLICATION_STATUS.EXPIRED,\n        title: STATUS_LABELS[APPLICATION_STATUS.EXPIRED],\n        color: STATUS_COLORS[APPLICATION_STATUS.EXPIRED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.EXPIRED] || []\n      },\n      {\n        id: APPLICATION_STATUS.CANCELLED,\n        title: STATUS_LABELS[APPLICATION_STATUS.CANCELLED],\n        color: STATUS_COLORS[APPLICATION_STATUS.CANCELLED] || 'neutral',\n        applications: groupedApplications[APPLICATION_STATUS.CANCELLED] || []\n      }\n    ];\n    \n    console.log('Columnas para asesor:', advisorColumns.map(col => ({\n      id: col.id,\n      count: col.applications.length\n    })));\n    \n    return advisorColumns;\n  }, [groupedApplications, isCompanyAdmin]);\n  \n  // Función para actualizar localmente el estado de aprobación de una aplicación\n  const updateLocalApprovalStatus = (applicationId: string, updates: Partial<{ approvedByAdvisor: boolean, approvedByCompany: boolean }>) => {\n    setAppsWithApproval(prev => \n      prev.map(app => \n        app.id === applicationId\n          ? {\n              ...app,\n              approvalStatus: {\n                ...(app.approvalStatus || { approvedByAdvisor: false, approvedByCompany: false }),\n                ...updates\n              }\n            }\n          : app\n      )\n    );\n  };\n  \n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>, application: ApplicationWithApproval, idx: number) => {\n    // Guardar la aplicación que estamos arrastrando\n    draggedItemIndexRef.current = idx;\n    \n    // Almacenar el elemento que estamos arrastrando para gestionar mejor el evento\n    dragItemRef.current = e.currentTarget;\n    \n    // Establecer los datos que queremos transferir\n    e.dataTransfer.setData('text/plain', application.id);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // Crear una copia visual para el arrastre\n    if (!dragImageRef.current) {\n      dragImageRef.current = e.currentTarget.cloneNode(true) as HTMLDivElement;\n      dragImageRef.current.style.position = 'absolute';\n      dragImageRef.current.style.top = '-1000px';\n      dragImageRef.current.style.opacity = '0.8';\n      dragImageRef.current.style.transform = 'scale(0.9)';\n      dragImageRef.current.style.width = `${e.currentTarget.offsetWidth}px`;\n      document.body.appendChild(dragImageRef.current);\n    }\n    \n    // Establecer la imagen de arrastre\n    if (dragImageRef.current) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      e.dataTransfer.setDragImage(dragImageRef.current, rect.width / 2, 20);\n    }\n    \n    // Añadir clase CSS para mostrar visualmente que el elemento está siendo arrastrado\n    if (e.currentTarget) {\n      e.currentTarget.classList.add('dragging');\n    }\n  };\n  \n  const handleDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\n    // Eliminar clase CSS de arrastre\n    if (dragItemRef.current) {\n      dragItemRef.current.classList.remove('dragging');\n      dragItemRef.current = null;\n    }\n    \n    if (e.currentTarget) {\n      e.currentTarget.classList.remove('dragging');\n    }\n    \n    // Eliminar el elemento clonado para el arrastre\n    if (dragImageRef.current) {\n      document.body.removeChild(dragImageRef.current);\n      dragImageRef.current = null;\n    }\n    \n    draggedItemIndexRef.current = -1;\n    draggedItemNewStatusRef.current = '';\n  };\n  \n  const handleDragOver = (e: React.DragEvent, columnStatus: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n    \n    // Guardar el nuevo estado para la actualización optimista\n    if (draggedItemNewStatusRef.current !== columnStatus) {\n      draggedItemNewStatusRef.current = columnStatus;\n    }\n    \n    // Añadir clase visual para indicar la columna destino\n    if (e.currentTarget.classList.contains('kanban-column')) {\n      document.querySelectorAll('.kanban-column').forEach(col => {\n        col.classList.remove('drag-over');\n      });\n      e.currentTarget.classList.add('drag-over');\n    }\n  };\n  \n  // Actualizar la función canDragCard para permitir mover tarjetas de status \"nuevo\" para admin de empresa\n  const canDragCard = (app: ApplicationWithApproval): boolean => {\n    // Los asesores pueden mover todas las tarjetas excepto las que están en movimiento\n    if (isAdvisor()) {\n      return !app.isMoving;\n    }\n    \n    // Para administradores de empresa:\n    if (isCompanyAdmin()) {\n      // No puede mover tarjetas que ya están en movimiento\n      if (app.isMoving) return false;\n      \n      // Puede mover tarjetas en estado \"nuevo\" (new)\n      if (app.status === APPLICATION_STATUS.NEW) return true;\n      \n      // Puede mover tarjetas en revisión (in_review)\n      if (app.status === APPLICATION_STATUS.IN_REVIEW) return true;\n      \n      // Puede mover tarjetas a estado aprobado por empresa\n      if (app.status === APPLICATION_STATUS.APPROVED) return true;\n      \n      // No puede mover tarjetas en estos estados\n      if (app.status === APPLICATION_STATUS.REJECTED ||\n          app.status === APPLICATION_STATUS.POR_DISPERSAR ||\n          app.status === APPLICATION_STATUS.COMPLETED ||\n          app.status === APPLICATION_STATUS.EXPIRED ||\n          app.status === APPLICATION_STATUS.CANCELLED) {\n        return false;\n      }\n      \n      // Por defecto, permitir movimiento para cualquier otro estado\n      return true;\n    }\n    \n    // Para otros roles, no permitir mover tarjetas\n    return false;\n  };\n  \n  // Modificar handleDrop para asegurar que se cumplan las reglas correctas\n  const handleDrop = async (e: React.DragEvent<HTMLDivElement>, newStatus: string) => {\n    e.preventDefault();\n    \n    // Recuperar datos de la aplicación que se está moviendo\n    const dragData = JSON.parse(e.dataTransfer.getData('application'));\n    const { application, sourceStatus, index } = dragData;\n    \n    // Validar que la aplicación existe\n    if (!application || !application.id) {\n      console.error('Datos de aplicación inválidos:', dragData);\n      return;\n    }\n    \n    // No hacer nada si no hay cambio de estado\n    if (sourceStatus === newStatus) return;\n    \n    // Restricciones de movimiento según rol\n    if (isCompanyAdmin()) {\n      // Administradores de empresa: reglas específicas para ellos\n      \n      // No pueden mover a estado rechazado (solo asesores)\n      if (newStatus === APPLICATION_STATUS.REJECTED) {\n        setErrorMessage('Los administradores de empresa no pueden mover solicitudes a Rechazado');\n        return;\n      }\n      \n      // No pueden mover a \"Por Dispersar\" directamente, esto debe ser automático\n      if (newStatus === APPLICATION_STATUS.POR_DISPERSAR && sourceStatus !== APPLICATION_STATUS.APPROVED) {\n        setErrorMessage('Las solicitudes solo pueden pasar a \"Por Dispersar\" cuando son aprobadas por asesor y empresa');\n        return;\n      }\n      \n      // Reglas para tarjetas en estado \"nuevo\"\n      if (sourceStatus === APPLICATION_STATUS.NEW) {\n        // De \"Nuevo\" solo pueden mover a \"En Revisión\" o \"Aprobado por mi\"\n        if (newStatus !== APPLICATION_STATUS.IN_REVIEW && newStatus !== APPLICATION_STATUS.APPROVED) {\n          setErrorMessage('Las solicitudes nuevas solo pueden moverse a \"En Revisión\" o \"Aprobado por mi\"');\n          return;\n        }\n      }\n      \n      // Reglas para tarjetas en estado \"en revisión\"\n      if (sourceStatus === APPLICATION_STATUS.IN_REVIEW) {\n        // De \"En Revisión\" solo pueden mover a \"Aprobado por mi\" o de regreso a \"Nuevo\"\n        if (newStatus !== APPLICATION_STATUS.APPROVED && newStatus !== APPLICATION_STATUS.NEW) {\n          setErrorMessage('Las solicitudes en revisión solo pueden moverse a \"Aprobado por mi\" o \"Nuevo\"');\n          return;\n        }\n      }\n      \n      // Reglas para tarjetas en estado \"aprobado\"\n      if (sourceStatus === APPLICATION_STATUS.APPROVED) {\n        // De \"Aprobado por mi\" solo pueden mover de regreso a \"En Revisión\" o \"Nuevo\" \n        if (newStatus !== APPLICATION_STATUS.IN_REVIEW && newStatus !== APPLICATION_STATUS.NEW) {\n          setErrorMessage('Las solicitudes aprobadas por empresa solo pueden moverse a \"En Revisión\" o \"Nuevo\"');\n          return;\n        }\n      }\n    }\n    \n    // Actualización optimista del estado local\n    const updatedApps = [...appsWithApproval];\n    const appIndex = updatedApps.findIndex(app => app.id === application.id);\n    \n    if (appIndex !== -1) {\n      // Marcar la aplicación como en movimiento y con estado de destino\n      updatedApps[appIndex] = {\n        ...updatedApps[appIndex],\n        isMoving: true,\n        targetStatus: newStatus\n      };\n      \n      setAppsWithApproval(updatedApps);\n      \n      // Preparar actualización de aprobación para pasar a \"por dispersar\"\n      if (newStatus === APPLICATION_STATUS.APPROVED) {\n        // Actualizar estado de aprobación según el rol del usuario\n        if (isAdvisor()) {\n          updateLocalApprovalStatus(application.id, { approvedByAdvisor: true });\n        } else if (isCompanyAdmin()) {\n          updateLocalApprovalStatus(application.id, { approvedByCompany: true });\n        }\n      }\n    }\n    \n    try {\n      // Llamar a la función para actualizar el estado de la aplicación\n      if (onStatusChange) {\n        await onStatusChange(application, newStatus);\n        \n        // Si todo sale bien, actualizar el estado local\n        const finalUpdatedApps = [...appsWithApproval];\n        const finalAppIndex = finalUpdatedApps.findIndex(app => app.id === application.id);\n        \n        if (finalAppIndex !== -1) {\n          // Actualizar el estado y quitar los marcadores de movimiento\n          finalUpdatedApps[finalAppIndex] = {\n            ...finalUpdatedApps[finalAppIndex],\n            status: newStatus,\n            isMoving: false,\n            targetStatus: undefined\n          };\n          \n          setAppsWithApproval(finalUpdatedApps);\n          \n          // Si ambos aprobadores han aprobado, mover automáticamente a \"Por Dispersar\"\n          const appApprovalStatus = finalUpdatedApps[finalAppIndex].approvalStatus;\n          if (appApprovalStatus && \n              appApprovalStatus.approvedByAdvisor && \n              appApprovalStatus.approvedByCompany && \n              newStatus === APPLICATION_STATUS.APPROVED) {\n            \n            // Configurar mensaje de transición automática y moverla después de un breve retraso\n            setAutoTransitionMessage(`La solicitud de ${application.client_name} ha sido aprobada por ambas partes y avanzará automáticamente a \"Por Dispersar\"`);\n            \n            // Esperar un momento y luego mover automáticamente\n            setTimeout(async () => {\n              try {\n                if (onStatusChange) {\n                  await onStatusChange(application, APPLICATION_STATUS.POR_DISPERSAR);\n                  \n                  // Actualizar el estado local tras el movimiento automático\n                  const autoUpdatedApps = [...appsWithApproval];\n                  const autoAppIndex = autoUpdatedApps.findIndex(app => app.id === application.id);\n                  \n                  if (autoAppIndex !== -1) {\n                    autoUpdatedApps[autoAppIndex] = {\n                      ...autoUpdatedApps[autoAppIndex],\n                      status: APPLICATION_STATUS.POR_DISPERSAR\n                    };\n                    \n                    setAppsWithApproval(autoUpdatedApps);\n                  }\n                }\n              } catch (error) {\n                console.error('Error al mover automáticamente a Por Dispersar:', error);\n                setErrorMessage('Error al mover automáticamente la solicitud a Por Dispersar');\n              } finally {\n                // Limpiar mensaje de transición\n                setTimeout(() => setAutoTransitionMessage(null), 5000);\n              }\n            }, 3000);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error al cambiar el estado de la aplicación:', error);\n      setErrorMessage('Error al cambiar el estado de la aplicación');\n      \n      // Revertir cambios optimistas en caso de error\n      const revertApps = [...appsWithApproval];\n      const revertAppIndex = revertApps.findIndex(app => app.id === application.id);\n      \n      if (revertAppIndex !== -1) {\n        revertApps[revertAppIndex] = {\n          ...revertApps[revertAppIndex],\n          isMoving: false,\n          targetStatus: undefined\n        };\n        \n        setAppsWithApproval(revertApps);\n      }\n    }\n  };\n  \n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n    }).format(amount);\n  };\n  \n  // Renderizar los indicadores de aprobación\n  const renderApprovalIndicators = (app: ApplicationWithApproval) => {\n    if (!app.approvalStatus) return null;\n    \n    return (\n      <div className=\"flex items-center mt-1 space-x-2\">\n        <div className=\"tooltip tooltip-top flex items-center\" data-tip={app.approvalStatus.approvedByAdvisor ? \"Aprobado por asesor\" : \"Pendiente de aprobación por asesor\"}>\n          <span className=\"text-xs mr-1\">Asesor:</span>\n          <div className={`w-3 h-3 rounded-full ${app.approvalStatus.approvedByAdvisor ? 'bg-success animate-pulse' : 'bg-warning'}`}></div>\n        </div>\n        <div className=\"tooltip tooltip-top flex items-center\" data-tip={app.approvalStatus.approvedByCompany ? \"Aprobado por empresa\" : \"Pendiente de aprobación por empresa\"}>\n          <span className=\"text-xs mr-1\">Empresa:</span>\n          <div className={`w-3 h-3 rounded-full ${app.approvalStatus.approvedByCompany ? 'bg-success animate-pulse' : 'bg-warning'}`}></div>\n        </div>\n        \n        {/* Indicador de doble aprobación */}\n        {app.approvalStatus.approvedByAdvisor && app.approvalStatus.approvedByCompany && (\n          <div className=\"tooltip tooltip-top ml-2\" data-tip=\"Aprobada por ambos\">\n            <div className=\"badge badge-success badge-sm\">Aprobado Total</div>\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  const getProductLabel = (type: string) => {\n    const labels: Record<string, string> = {\n      'selected_plans': 'Crédito a Plazos',\n      'product_simulations': 'Simulación',\n      'auto_loan': 'Crédito Auto',\n      'car_backed_loan': 'Crédito con Garantía',\n      'personal_loan': 'Préstamo Personal',\n      'cash_advance': 'Adelanto de Efectivo'\n    };\n    \n    return labels[type] || type;\n  };\n  \n  // Función para obtener el color apropiado para la tarjeta según estado y aprobaciones\n  const getCardColor = (app: ApplicationWithApproval) => {\n    const status = app.status || '';\n    \n    // Colores específicos según el estado\n    switch (status.toLowerCase()) {\n      case APPLICATION_STATUS.REJECTED:\n        return 'border-error bg-red-50';\n      case APPLICATION_STATUS.APPROVED:\n        // Si está aprobado, verificar el estado de las aprobaciones\n        if (app.approvalStatus) {\n          const { approvedByAdvisor, approvedByCompany } = app.approvalStatus;\n          if (approvedByAdvisor && approvedByCompany) {\n            return 'border-success bg-green-100'; // Aprobado por ambos\n          } else if (approvedByAdvisor) {\n            return 'border-success bg-green-50'; // Aprobado solo por asesor\n          } else if (approvedByCompany) {\n            return 'border-info bg-blue-50'; // Aprobado solo por empresa\n          }\n        }\n        return 'border-success bg-green-50';\n      case APPLICATION_STATUS.IN_REVIEW:\n        return 'border-info bg-blue-50';\n      case APPLICATION_STATUS.NEW:\n        return 'border-warning bg-yellow-50';\n      case APPLICATION_STATUS.PENDING:\n        return 'border-warning bg-amber-50';\n      case APPLICATION_STATUS.POR_DISPERSAR:\n        return 'border-accent bg-purple-50';\n      case APPLICATION_STATUS.COMPLETED:\n        return 'border-primary bg-indigo-50';\n      case APPLICATION_STATUS.EXPIRED:\n        return 'border-error bg-red-100';\n      case APPLICATION_STATUS.CANCELLED:\n        return 'border-neutral bg-gray-100';\n      default:\n        // Si el estado no coincide con ninguno de los anteriores, usar el color de la columna\n        return `border-${app.status || 'neutral'}`;\n    }\n  };\n  \n  // Función para determinar si una tarjeta está habilitada para ser movida\n  const getDraggableClasses = (app: ApplicationWithApproval): string => {\n    const canDrag = canDragCard(app) && !!onStatusChange && app.id !== processingAppId;\n    \n    if (canDrag) {\n      return 'cursor-grab hover:shadow-lg kanban-card-draggable';\n    } else {\n      return 'cursor-not-allowed opacity-80 kanban-card-locked';\n    }\n  };\n  \n  // Función para obtener el texto del tooltip según el estado de la tarjeta\n  const getDragTooltip = (app: ApplicationWithApproval): string => {\n    if (app.id === processingAppId) {\n      return \"Esta tarjeta está siendo procesada\";\n    }\n    \n    if (!onStatusChange) {\n      return \"No tienes permisos para mover tarjetas\";\n    }\n    \n    if (isCompanyAdmin()) {\n      if (app.status === APPLICATION_STATUS.REJECTED) {\n        return \"Las tarjetas rechazadas solo pueden ser movidas por asesores\";\n      }\n      \n      if ([\n        APPLICATION_STATUS.POR_DISPERSAR,\n        APPLICATION_STATUS.COMPLETED,\n        APPLICATION_STATUS.EXPIRED,\n        APPLICATION_STATUS.CANCELLED\n      ].includes(app.status as APPLICATION_STATUS)) {\n        return `No puedes mover tarjetas que están en estado \"${STATUS_LABELS[app.status as keyof typeof STATUS_LABELS]}\"`;\n      }\n    }\n    \n    return \"Arrastra para cambiar el estado\";\n  };\n  \n  if (applications.length === 0) {\n    return (\n      <div className=\"bg-base-200 p-6 rounded-lg\">\n        <h3 className=\"text-xl font-medium text-center\">No hay solicitudes para mostrar</h3>\n        <p className=\"text-center text-gray-500 mt-2\">No se encontraron solicitudes en el sistema</p>\n      </div>\n    );\n  }\n  \n  // Añadir estilos CSS para el scrollbar personalizado y mejoras visuales\n  const customStyles = `\n    .custom-scrollbar::-webkit-scrollbar {\n      width: 8px;\n      height: 8px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-track {\n      background: #f1f1f1;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb {\n      background: #888;\n      border-radius: 10px;\n    }\n    \n    .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n    \n    .kanban-card {\n      transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out, box-shadow 0.3s ease-in-out, border-color 0.3s ease;\n      touch-action: none;\n      user-select: none;\n      will-change: transform, opacity; /* Optimización para hardware rendering */\n    }\n    \n    .kanban-card-draggable:active {\n      cursor: grabbing;\n    }\n    \n    .kanban-card-locked {\n      position: relative;\n    }\n    \n    .kanban-card-locked::after {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      width: 12px;\n      height: 12px;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23999'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z' /%3E%3C/svg%3E\");\n      background-size: contain;\n      background-repeat: no-repeat;\n      opacity: 0.7;\n    }\n    \n    .kanban-card.dragging {\n      opacity: 0.8;\n      transform: scale(1.03);\n      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      z-index: 50;\n    }\n    \n    .kanban-column {\n      transition: all 0.2s ease;\n      border-radius: 0.75rem;\n      will-change: transform, background-color; /* Optimización para hardware rendering */\n    }\n    \n    .kanban-column.drag-over {\n      background-color: rgba(var(--b2, 217 217 217) / 0.5);\n      transform: scale(1.01);\n      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n    }\n\n    .kanban-container {\n      scroll-behavior: smooth;\n    }\n\n    @media (min-width: 768px) {\n      .kanban-card:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n      }\n    }\n    \n    /* Animaciones para cambios de estado */\n    @keyframes fadeIn {\n      0% { opacity: 0; }\n      100% { opacity: 1; }\n    }\n    \n    @keyframes slideIn {\n      0% { transform: translateY(10px); opacity: 0; }\n      100% { transform: translateY(0); opacity: 1; }\n    }\n    \n    @keyframes processingPulse {\n      0% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0.4); }\n      70% { box-shadow: 0 0 0 6px rgba(124, 58, 237, 0); }\n      100% { box-shadow: 0 0 0 0 rgba(124, 58, 237, 0); }\n    }\n    \n    .kanban-card {\n      animation: fadeIn 0.3s ease-out;\n    }\n    \n    .processing-toast {\n      position: fixed;\n      bottom: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    .auto-transition-toast {\n      position: fixed;\n      bottom: 70px;\n      left: 50%;\n      transform: translateX(-50%);\n      padding: 10px 20px;\n      background-color: #dcfce7;\n      border: 1px solid #86efac;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      animation: slideIn 0.3s ease-out;\n    }\n    \n    /* Mejoras para vista mobile */\n    @media (max-width: 640px) {\n      .kanban-column {\n        min-height: 300px;\n      }\n    }\n  `;\n  \n  return (\n    <div className=\"w-full overflow-x-auto custom-scrollbar relative\">\n      <style>{customStyles}</style>\n      \n      {/* Reemplazar el overlay de carga con una notificación flotante más sutil */}\n      {processingAppId && (\n        <div className=\"processing-toast\">\n          <span className=\"loading loading-spinner loading-sm text-primary\"></span>\n          <p className=\"font-medium\">Actualizando estado...</p>\n        </div>\n      )}\n      \n      {/* Notificación para transiciones automáticas */}\n      {autoTransitionMessage && (\n        <div className=\"auto-transition-toast\">\n          <span className=\"loading loading-spinner loading-sm text-success\"></span>\n          <p className=\"font-medium\">{autoTransitionMessage}</p>\n        </div>\n      )}\n      \n      {errorMessage && (\n        <div className=\"mb-4 alert alert-error shadow-lg\">\n          <div>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"stroke-current flex-shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span>{errorMessage}</span>\n          </div>\n          <div className=\"flex-none\">\n            <button className=\"btn btn-sm\" onClick={() => setErrorMessage(null)}>Cerrar</button>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 2xl:grid-cols-6 gap-4 pb-4 kanban-container p-4\" style={{ minWidth: '1000px' }}>\n        {columns.map(column => (\n          <div \n            key={column.id}\n            className={`bg-base-100 rounded-xl shadow-md border-t-4 border-${column.color} border-l border-r border-b flex flex-col h-full kanban-column`}\n            onDragOver={(e) => {\n              handleDragOver(e, column.id);\n            }}\n            onDragLeave={(e) => {\n              e.currentTarget.classList.remove('drag-over');\n            }}\n            onDrop={(e) => {\n              handleDrop(e, column.id);\n            }}\n          >\n            {/* Cabecera de columna con indicador de color */}\n            <div className={`text-center py-3 px-4 font-bold rounded-t-lg flex items-center justify-between bg-${column.color} bg-opacity-10`}>\n              <span className={`text-${column.color} font-bold text-lg`}>{column.title}</span>\n              <span className={`badge badge-${column.color} badge-lg`}>{column.applications.length}</span>\n            </div>\n            \n            <div className=\"p-3 space-y-3 min-h-[500px] max-h-[calc(100vh-220px)] overflow-y-auto custom-scrollbar flex-grow\">\n              {column.applications.length === 0 ? (\n                <div className=\"flex items-center justify-center h-full opacity-50 border-2 border-dashed border-base-300 rounded-lg p-6\">\n                  <div className=\"text-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 mx-auto text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    <p className=\"text-sm mt-2\">No hay solicitudes</p>\n                  </div>\n                </div>\n              ) : (\n                column.applications.map((app, index) => (\n                  <div\n                    key={app.id}\n                    data-tip={getDragTooltip(app)}\n                    className={`card shadow hover:shadow-lg transition-all ${getCardColor(app)} border-l-4 border-t border-r border-b hover:border-primary kanban-card relative ${app.id === processingAppId ? 'processing' : ''} ${app.isMoving ? 'opacity-90' : ''} ${getDraggableClasses(app)}`}\n                    draggable={!!onStatusChange && app.id !== processingAppId && canDragCard(app)}\n                    onDragStart={(e) => handleDragStart(e, app, index)}\n                    onDragEnd={handleDragEnd}\n                    style={{\n                      animation: app.id === processingAppId ? 'processingPulse 1.5s infinite' : ''\n                    }}\n                  >\n                    <div className=\"card-body p-4\">\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"flex-1 font-semibold\">{app.client_name}</div>\n                          <span className={`badge badge-${column.color} badge-md`}>{getProductLabel(app.application_type)}</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"mt-2\">\n                        {/* Info de la empresa */}\n                        <div className=\"text-sm text-gray-600 mb-1 flex items-center\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 inline\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                          </svg>\n                          <span className=\"truncate max-w-[180px] font-medium\">\n                            {app.company_name || \"Sin empresa\"}\n                          </span>\n                        </div>\n                        \n                        {/* Monto */}\n                        <div className=\"flex items-center mb-2\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 text-primary\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                          </svg>\n                          <span className=\"text-base font-bold text-primary\">\n                            {formatCurrency(app.requested_amount)}\n                          </span>\n                        </div>\n                        \n                        {/* Indicadores de estado de aprobación */}\n                        {renderApprovalIndicators(app)}\n                        \n                        <div className=\"card-actions justify-end mt-3\">\n                          <Link to={`/applications/${app.id}`} className=\"btn btn-sm btn-primary w-full\">\n                            Ver Detalle\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default KanbanBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}