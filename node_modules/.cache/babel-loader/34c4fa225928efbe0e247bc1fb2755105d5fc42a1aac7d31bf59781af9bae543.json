{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useLocation,useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import MainLayout from'../components/layout/MainLayout';import ClientForm from'../components/clients/ClientForm';import{createClient,updateClient}from'../services/clientService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Default company ID (Herramental)\nconst DEFAULT_COMPANY_ID=\"70b2aa97-a5b6-4b5e-91db-be8acbd3701a\";const NewClient=()=>{const navigate=useNavigate();const{user}=useAuth();const[isSubmitting,setIsSubmitting]=useState(false);const[sectionSubmitting,setSectionSubmitting]=useState(false);const[error,setError]=useState(null);const[successMessage,setSuccessMessage]=useState(null);const[draftClient,setDraftClient]=useState(null);const[temporaryClientId,setTemporaryClientId]=useState(null);const[documents,setDocuments]=useState([]);const location=useLocation();// Cargar datos del cliente en borrador si existen en localStorage al iniciar\nuseEffect(()=>{try{const savedDraft=localStorage.getItem('draftClient');const savedClientId=localStorage.getItem('temporaryClientId');const savedDocuments=localStorage.getItem('temporaryDocuments');if(savedDraft){console.log('Recuperando datos del cliente del localStorage:',savedDraft);setDraftClient(JSON.parse(savedDraft));}if(savedClientId){console.log('Recuperando ID de cliente temporal:',savedClientId);setTemporaryClientId(savedClientId);}if(savedDocuments){console.log('Recuperando documentos temporales del localStorage');// No podemos guardar los objetos File directamente en localStorage, \n// así que los documentos se gestionan en memoria hasta el envío final\n}}catch(e){console.error('Error loading draft from localStorage:',e);}},[]);const handleSubmit=async(data,clientDocuments)=>{setIsSubmitting(true);setError(null);console.log('Submitting client data:',data);try{// Si el usuario es asesor o admin de empresa, asignar los IDs correspondientes\nconst clientData={...data};// Handle advisor_id assignment\nif(user&&user.role==='ADVISOR'){clientData.advisor_id=user.id;}// Handle the company_id requirement - only set default if not selected in form\nif(!clientData.company_id){console.log('No company selected in form, applying default/user company logic');if(user){if(user.role==='COMPANY_ADMIN'){clientData.company_id=user.entityId;console.log('Using company_id from COMPANY_ADMIN user:',clientData.company_id);}else{// For other roles without company selection, use default\nclientData.company_id=DEFAULT_COMPANY_ID;console.log('Using default company_id for user with role:',user.role);}}else{// No user information available, use default company_id\nclientData.company_id=DEFAULT_COMPANY_ID;console.log('No user context, using default company_id');}}else{console.log('Using company_id selected in form:',clientData.company_id);}// Si ya tenemos un cliente temporal, actualizar en vez de crear\nlet newClient;if(temporaryClientId){console.log(`Updating temporary client with ID ${temporaryClientId}`);newClient=await updateClient(temporaryClientId,clientData,clientDocuments,user===null||user===void 0?void 0:user.id);console.log('Client updated successfully:',newClient);}else{// Crear nuevo cliente\nconsole.log('Creando nuevo cliente sin ID temporal');newClient=await createClient(clientData,clientDocuments,user===null||user===void 0?void 0:user.id);console.log('Client created successfully:',newClient);}// Check if there's a warning message (e.g., some documents failed to upload)\nif(newClient.warningMessage){setSuccessMessage(newClient.warningMessage);setIsSubmitting(false);// No limpiamos localStorage ni navegamos para que el usuario pueda intentar subir documentos nuevamente\nreturn;}console.log('Client created/updated successfully:',newClient);// Clear local storage\nlocalStorage.removeItem('draftClient');localStorage.removeItem('clientFormStep');localStorage.removeItem('temporaryClientId');localStorage.removeItem('temporaryDocuments');// Redireccionar a la lista de clientes\nnavigate('/clients');}catch(error){console.error('Error al crear cliente:',error);setError(error.message||'Error al crear el cliente. Por favor, intente de nuevo.');}finally{setIsSubmitting(false);}};const handleSavePartial=async(data,step)=>{try{setSectionSubmitting(true);setError(null);// Limpiar errores anteriores\nconsole.log(`Saving partial data for step ${step}:`,data);// Asegurarnos de que tenemos todos los campos requeridos\nconst partialData=collectFieldsForStep(data,step);// Asignar campos importantes si no están presentes\nif(user&&user.role==='ADVISOR'&&!partialData.advisor_id){partialData.advisor_id=user.id;}if(!partialData.company_id){if(user&&user.role==='COMPANY_ADMIN'){partialData.company_id=user.entityId;}else{partialData.company_id=DEFAULT_COMPANY_ID;}}// Update our local draft client data\nconst updatedDraftClient={...draftClient,...partialData};setDraftClient(updatedDraftClient);// Guardar los datos en Supabase\ntry{// Si ya tenemos un ID de cliente temporal, actualizar\nif(temporaryClientId){console.log(`Updating temporary client with ID ${temporaryClientId}`);const updatedClient=await updateClient(temporaryClientId,partialData);console.log('Client updated successfully:',updatedClient);if(!updatedClient){throw new Error('No se recibió respuesta después de la actualización');}// Check if there's a warning message\nif(updatedClient.warningMessage){setSuccessMessage(updatedClient.warningMessage);}else{setSuccessMessage(`Los datos de la sección ${step} se han guardado correctamente.`);}// Clear success message after 3 seconds\nsetTimeout(()=>{setSuccessMessage(null);},3000);}// Si es la primera vez que guardamos, crear un cliente temporal\nelse if(step===1){console.log('Creating temporary client');// Nos aseguramos de tener al menos nombre y apellido para el cliente temporal\nif(!partialData.first_name||!partialData.paternal_surname){setError('Debe proporcionar al menos nombre y apellido paterno para guardar.');setSectionSubmitting(false);return null;}const newClient=await createClient(partialData,[],user===null||user===void 0?void 0:user.id);console.log('Temporary client created successfully:',newClient);if(newClient&&newClient.id){setTemporaryClientId(newClient.id);localStorage.setItem('temporaryClientId',newClient.id);}else{throw new Error('No se recibió un ID de cliente después de la creación');}}else{console.log('No se puede guardar en Supabase sin haber completado el paso 1 primero');// En este caso, solo guardamos en localStorage\n}// Save to local storage for persistence\nlocalStorage.setItem('draftClient',JSON.stringify(updatedDraftClient));return updatedDraftClient;}catch(e){console.error('Error saving to Supabase:',e);// Log more details about the error\nif(e.message)console.error('Error message:',e.message);if(e.cause)console.error('Error cause:',e.cause);if(e.stack)console.error('Error stack:',e.stack);// Try to get more information if it's a Supabase error\nif(e.code||e.details||e.hint){console.error('Supabase error details:',{code:e.code,details:e.details,hint:e.hint});}setError(`Error al guardar los datos en el servidor: ${e.message||'Error desconocido'}`);// Aún así actualizamos localStorage\ntry{localStorage.setItem('draftClient',JSON.stringify(updatedDraftClient));}catch(storageError){console.error('Error saving to localStorage:',storageError);}return null;}}catch(error){console.error('Error saving partial data:',error);setError('Error al guardar los datos parciales.');return null;}finally{setSectionSubmitting(false);}};// Helper to ensure we have all required fields\nconst ensureRequiredFields=clientData=>{// Handle advisor_id assignment\nif(user&&user.role==='ADVISOR'){clientData.advisor_id=user.id;}// Handle the company_id requirement - only set default if not selected in form\nif(!clientData.company_id){console.log('🔍 No se seleccionó empresa en el formulario, aplicando lógica predeterminada');if(user){if(user.role==='COMPANY_ADMIN'){clientData.company_id=user.entityId;console.log('🔍 Usando company_id del usuario COMPANY_ADMIN:',clientData.company_id);}else{// For other roles without company selection, use default\nclientData.company_id=DEFAULT_COMPANY_ID;console.log('🔍 Usando company_id predeterminado para usuario con rol:',user.role);}}else{// No user information available, use default company_id\nclientData.company_id=DEFAULT_COMPANY_ID;console.log('🔍 Sin contexto de usuario, usando company_id predeterminado');}}else{console.log('🔍 Usando company_id seleccionado en el formulario:',clientData.company_id);}};// Helper to collect fields based on step\nconst collectFieldsForStep=(data,step)=>{const result={};// Always preserve these fields if they exist\nif(data.id)result.id=data.id;if(data.company_id)result.company_id=data.company_id;if(data.advisor_id)result.advisor_id=data.advisor_id;switch(step){case 1:// Personal data\nconst personalFields=['first_name','paternal_surname','maternal_surname','email','phone','rfc','curp','birth_date','gender','marital_status','address','city','state','postal_code'];personalFields.forEach(field=>{if(field in data){result[field]=data[field];}});break;case 2:// Financial details\nconst financialFields=['employment_type','employment_years','monthly_income','additional_income','monthly_expenses','other_loan_balances'];financialFields.forEach(field=>{if(field in data){result[field]=data[field];}});break;case 3:// Bank details\nconst bankFields=['bank_name','bank_clabe','bank_account_number','bank_account_type','bank_account_origin'];bankFields.forEach(field=>{if(field in data){result[field]=data[field];}});break;default:console.warn(`🔍 Paso desconocido para guardado parcial: ${step}`);}return result;};return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-6\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>navigate('/clients'),className:\"btn btn-sm btn-outline mr-4\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5 mr-1\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\",clipRule:\"evenodd\"})}),\"Volver\"]}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:\"Nuevo Cliente\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-error\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-6 w-6\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"})}),/*#__PURE__*/_jsx(\"span\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setError(null),className:\"ml-auto\",children:\"\\xD7\"})]})}),successMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-success\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-6 w-6\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"})}),/*#__PURE__*/_jsx(\"span\",{children:successMessage}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSuccessMessage(null),className:\"ml-auto\",children:\"\\xD7\"})]})}),temporaryClientId&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-info\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-6 w-6\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"Cliente guardado como borrador. Complete y env\\xEDe el formulario para finalizar.\"})]})}),/*#__PURE__*/_jsx(ClientForm,{initialData:draftClient||undefined,onSubmit:handleSubmit,onSavePartial:handleSavePartial,isSubmitting:isSubmitting})]})});};export default NewClient;","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","useAuth","MainLayout","ClientForm","createClient","updateClient","jsx","_jsx","jsxs","_jsxs","DEFAULT_COMPANY_ID","NewClient","navigate","user","isSubmitting","setIsSubmitting","sectionSubmitting","setSectionSubmitting","error","setError","successMessage","setSuccessMessage","draftClient","setDraftClient","temporaryClientId","setTemporaryClientId","documents","setDocuments","location","savedDraft","localStorage","getItem","savedClientId","savedDocuments","console","log","JSON","parse","e","handleSubmit","data","clientDocuments","clientData","role","advisor_id","id","company_id","entityId","newClient","warningMessage","removeItem","message","handleSavePartial","step","partialData","collectFieldsForStep","updatedDraftClient","updatedClient","Error","setTimeout","first_name","paternal_surname","setItem","stringify","cause","stack","code","details","hint","storageError","ensureRequiredFields","result","personalFields","forEach","field","financialFields","bankFields","warn","children","className","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","stroke","strokeLinecap","strokeLinejoin","strokeWidth","initialData","undefined","onSubmit","onSavePartial"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/NewClient.tsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport MainLayout from '../components/layout/MainLayout';\nimport ClientForm from '../components/clients/ClientForm';\nimport { Client, ClientDocument, createClient, updateClient, uploadClientDocuments } from '../services/clientService';\nimport Alert from '../components/ui/Alert';\n\n// Default company ID (Herramental)\nconst DEFAULT_COMPANY_ID = \"70b2aa97-a5b6-4b5e-91db-be8acbd3701a\";\n\nconst NewClient: React.FC = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [sectionSubmitting, setSectionSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [draftClient, setDraftClient] = useState<Partial<Client> | null>(null);\n  const [temporaryClientId, setTemporaryClientId] = useState<string | null>(null);\n  const [documents, setDocuments] = useState<ClientDocument[]>([]);\n  const location = useLocation();\n\n  // Cargar datos del cliente en borrador si existen en localStorage al iniciar\n  useEffect(() => {\n    try {\n      const savedDraft = localStorage.getItem('draftClient');\n      const savedClientId = localStorage.getItem('temporaryClientId');\n      const savedDocuments = localStorage.getItem('temporaryDocuments');\n      \n      if (savedDraft) {\n        console.log('Recuperando datos del cliente del localStorage:', savedDraft);\n        setDraftClient(JSON.parse(savedDraft));\n      }\n      \n      if (savedClientId) {\n        console.log('Recuperando ID de cliente temporal:', savedClientId);\n        setTemporaryClientId(savedClientId);\n      }\n      \n      if (savedDocuments) {\n        console.log('Recuperando documentos temporales del localStorage');\n        // No podemos guardar los objetos File directamente en localStorage, \n        // así que los documentos se gestionan en memoria hasta el envío final\n      }\n    } catch (e) {\n      console.error('Error loading draft from localStorage:', e);\n    }\n  }, []);\n\n  const handleSubmit = async (data: Partial<Client>, clientDocuments: ClientDocument[]) => {\n    setIsSubmitting(true);\n    setError(null);\n    console.log('Submitting client data:', data);\n    \n    try {\n      // Si el usuario es asesor o admin de empresa, asignar los IDs correspondientes\n      const clientData: Partial<Client> = { ...data };\n      \n      // Handle advisor_id assignment\n      if (user && user.role === 'ADVISOR') {\n        clientData.advisor_id = user.id;\n      }\n      \n      // Handle the company_id requirement - only set default if not selected in form\n      if (!clientData.company_id) {\n        console.log('No company selected in form, applying default/user company logic');\n        \n        if (user) {\n          if (user.role === 'COMPANY_ADMIN') {\n            clientData.company_id = user.entityId;\n            console.log('Using company_id from COMPANY_ADMIN user:', clientData.company_id);\n          } else {\n            // For other roles without company selection, use default\n            clientData.company_id = DEFAULT_COMPANY_ID;\n            console.log('Using default company_id for user with role:', user.role);\n          }\n        } else {\n          // No user information available, use default company_id\n          clientData.company_id = DEFAULT_COMPANY_ID;\n          console.log('No user context, using default company_id');\n        }\n      } else {\n        console.log('Using company_id selected in form:', clientData.company_id);\n      }\n      \n      // Si ya tenemos un cliente temporal, actualizar en vez de crear\n      let newClient;\n      if (temporaryClientId) {\n        console.log(`Updating temporary client with ID ${temporaryClientId}`);\n        newClient = await updateClient(temporaryClientId, clientData, clientDocuments, user?.id);\n        console.log('Client updated successfully:', newClient);\n      } else {\n        // Crear nuevo cliente\n        console.log('Creando nuevo cliente sin ID temporal');\n        newClient = await createClient(clientData as Omit<Client, 'id' | 'created_at'>, clientDocuments, user?.id);\n        console.log('Client created successfully:', newClient);\n      }\n      \n      // Check if there's a warning message (e.g., some documents failed to upload)\n      if (newClient.warningMessage) {\n        setSuccessMessage(newClient.warningMessage);\n        setIsSubmitting(false);\n        // No limpiamos localStorage ni navegamos para que el usuario pueda intentar subir documentos nuevamente\n        return;\n      }\n      \n      console.log('Client created/updated successfully:', newClient);\n      \n      // Clear local storage\n      localStorage.removeItem('draftClient');\n      localStorage.removeItem('clientFormStep');\n      localStorage.removeItem('temporaryClientId');\n      localStorage.removeItem('temporaryDocuments');\n      \n      // Redireccionar a la lista de clientes\n      navigate('/clients');\n    } catch (error: any) {\n      console.error('Error al crear cliente:', error);\n      setError(error.message || 'Error al crear el cliente. Por favor, intente de nuevo.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleSavePartial = async (data: Partial<Client>, step: number) => {\n    try {\n      setSectionSubmitting(true);\n      setError(null); // Limpiar errores anteriores\n      console.log(`Saving partial data for step ${step}:`, data);\n      \n      // Asegurarnos de que tenemos todos los campos requeridos\n      const partialData = collectFieldsForStep(data, step);\n      \n      // Asignar campos importantes si no están presentes\n      if (user && user.role === 'ADVISOR' && !partialData.advisor_id) {\n        partialData.advisor_id = user.id;\n      }\n      \n      if (!partialData.company_id) {\n        if (user && user.role === 'COMPANY_ADMIN') {\n          partialData.company_id = user.entityId;\n        } else {\n          partialData.company_id = DEFAULT_COMPANY_ID;\n        }\n      }\n      \n      // Update our local draft client data\n      const updatedDraftClient = { ...draftClient, ...partialData };\n      setDraftClient(updatedDraftClient);\n      \n      // Guardar los datos en Supabase\n      try {\n        // Si ya tenemos un ID de cliente temporal, actualizar\n        if (temporaryClientId) {\n          console.log(`Updating temporary client with ID ${temporaryClientId}`);\n          const updatedClient = await updateClient(temporaryClientId, partialData);\n          console.log('Client updated successfully:', updatedClient);\n          \n          if (!updatedClient) {\n            throw new Error('No se recibió respuesta después de la actualización');\n          }\n          \n          // Check if there's a warning message\n          if (updatedClient.warningMessage) {\n            setSuccessMessage(updatedClient.warningMessage);\n          } else {\n            setSuccessMessage(`Los datos de la sección ${step} se han guardado correctamente.`);\n          }\n          \n          // Clear success message after 3 seconds\n          setTimeout(() => {\n            setSuccessMessage(null);\n          }, 3000);\n        } \n        // Si es la primera vez que guardamos, crear un cliente temporal\n        else if (step === 1) {\n          console.log('Creating temporary client');\n          \n          // Nos aseguramos de tener al menos nombre y apellido para el cliente temporal\n          if (!partialData.first_name || !partialData.paternal_surname) {\n            setError('Debe proporcionar al menos nombre y apellido paterno para guardar.');\n            setSectionSubmitting(false);\n            return null;\n          }\n          \n          const newClient = await createClient(partialData as Omit<Client, 'id' | 'created_at'>, [], user?.id);\n          console.log('Temporary client created successfully:', newClient);\n          \n          if (newClient && newClient.id) {\n            setTemporaryClientId(newClient.id);\n            localStorage.setItem('temporaryClientId', newClient.id);\n          } else {\n            throw new Error('No se recibió un ID de cliente después de la creación');\n          }\n        } else {\n          console.log('No se puede guardar en Supabase sin haber completado el paso 1 primero');\n          // En este caso, solo guardamos en localStorage\n        }\n        \n        // Save to local storage for persistence\n        localStorage.setItem('draftClient', JSON.stringify(updatedDraftClient));\n        \n        return updatedDraftClient;\n      } catch (e: any) {\n        console.error('Error saving to Supabase:', e);\n        \n        // Log more details about the error\n        if (e.message) console.error('Error message:', e.message);\n        if (e.cause) console.error('Error cause:', e.cause);\n        if (e.stack) console.error('Error stack:', e.stack);\n        \n        // Try to get more information if it's a Supabase error\n        if (e.code || e.details || e.hint) {\n          console.error('Supabase error details:', {\n            code: e.code,\n            details: e.details,\n            hint: e.hint\n          });\n        }\n        \n        setError(`Error al guardar los datos en el servidor: ${e.message || 'Error desconocido'}`);\n        \n        // Aún así actualizamos localStorage\n        try {\n          localStorage.setItem('draftClient', JSON.stringify(updatedDraftClient));\n        } catch (storageError) {\n          console.error('Error saving to localStorage:', storageError);\n        }\n        \n        return null;\n      }\n    } catch (error: any) {\n      console.error('Error saving partial data:', error);\n      setError('Error al guardar los datos parciales.');\n      return null;\n    } finally {\n      setSectionSubmitting(false);\n    }\n  };\n  \n  // Helper to ensure we have all required fields\n  const ensureRequiredFields = (clientData: Partial<Client>) => {\n    // Handle advisor_id assignment\n    if (user && user.role === 'ADVISOR') {\n      clientData.advisor_id = user.id;\n    }\n    \n    // Handle the company_id requirement - only set default if not selected in form\n    if (!clientData.company_id) {\n      console.log('🔍 No se seleccionó empresa en el formulario, aplicando lógica predeterminada');\n      \n      if (user) {\n        if (user.role === 'COMPANY_ADMIN') {\n          clientData.company_id = user.entityId;\n          console.log('🔍 Usando company_id del usuario COMPANY_ADMIN:', clientData.company_id);\n        } else {\n          // For other roles without company selection, use default\n          clientData.company_id = DEFAULT_COMPANY_ID;\n          console.log('🔍 Usando company_id predeterminado para usuario con rol:', user.role);\n        }\n      } else {\n        // No user information available, use default company_id\n        clientData.company_id = DEFAULT_COMPANY_ID;\n        console.log('🔍 Sin contexto de usuario, usando company_id predeterminado');\n      }\n    } else {\n      console.log('🔍 Usando company_id seleccionado en el formulario:', clientData.company_id);\n    }\n  };\n  \n  // Helper to collect fields based on step\n  const collectFieldsForStep = (data: Partial<Client>, step: number): Partial<Client> => {\n    const result: Partial<Client> = {};\n    \n    // Always preserve these fields if they exist\n    if (data.id) result.id = data.id;\n    if (data.company_id) result.company_id = data.company_id;\n    if (data.advisor_id) result.advisor_id = data.advisor_id;\n    \n    switch(step) {\n      case 1: // Personal data\n        const personalFields = [\n          'first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone',\n          'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address',\n          'city', 'state', 'postal_code'\n        ];\n        personalFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      case 2: // Financial details\n        const financialFields = [\n          'employment_type', 'employment_years', 'monthly_income',\n          'additional_income', 'monthly_expenses', 'other_loan_balances'\n        ];\n        financialFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      case 3: // Bank details\n        const bankFields = [\n          'bank_name', 'bank_clabe', 'bank_account_number',\n          'bank_account_type', 'bank_account_origin'\n        ];\n        bankFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      default:\n        console.warn(`🔍 Paso desconocido para guardado parcial: ${step}`);\n    }\n    \n    return result;\n  };\n\n  return (\n    <MainLayout>\n      <div className=\"p-6\">\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={() => navigate('/clients')} \n            className=\"btn btn-sm btn-outline mr-4\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n            </svg>\n            Volver\n          </button>\n          <h1 className=\"text-2xl font-bold\">Nuevo Cliente</h1>\n        </div>\n        \n        {/* Display error message */}\n        {error && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-error\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{error}</span>\n              <button onClick={() => setError(null)} className=\"ml-auto\">×</button>\n            </div>\n          </div>\n        )}\n        \n        {/* Display success message */}\n        {successMessage && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-success\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{successMessage}</span>\n              <button onClick={() => setSuccessMessage(null)} className=\"ml-auto\">×</button>\n            </div>\n          </div>\n        )}\n        \n        {temporaryClientId && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-info\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>Cliente guardado como borrador. Complete y envíe el formulario para finalizar.</span>\n            </div>\n          </div>\n        )}\n        \n        <ClientForm \n          initialData={draftClient || undefined}\n          onSubmit={handleSubmit}\n          onSavePartial={handleSavePartial}\n          isSubmitting={isSubmitting}\n        />\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default NewClient; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAcC,SAAS,KAAQ,OAAO,CAC9D,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,OAASC,OAAO,KAAQ,yBAAyB,CACjD,MAAO,CAAAC,UAAU,KAAM,iCAAiC,CACxD,MAAO,CAAAC,UAAU,KAAM,kCAAkC,CACzD,OAAiCC,YAAY,CAAEC,YAAY,KAA+B,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGtH;AACA,KAAM,CAAAC,kBAAkB,CAAG,sCAAsC,CAEjE,KAAM,CAAAC,SAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEa,IAAK,CAAC,CAAGZ,OAAO,CAAC,CAAC,CAC1B,KAAM,CAACa,YAAY,CAAEC,eAAe,CAAC,CAAGlB,QAAQ,CAAU,KAAK,CAAC,CAChE,KAAM,CAACmB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGpB,QAAQ,CAAU,KAAK,CAAC,CAC1E,KAAM,CAACqB,KAAK,CAAEC,QAAQ,CAAC,CAAGtB,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAACuB,cAAc,CAAEC,iBAAiB,CAAC,CAAGxB,QAAQ,CAAgB,IAAI,CAAC,CACzE,KAAM,CAACyB,WAAW,CAAEC,cAAc,CAAC,CAAG1B,QAAQ,CAAyB,IAAI,CAAC,CAC5E,KAAM,CAAC2B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG5B,QAAQ,CAAgB,IAAI,CAAC,CAC/E,KAAM,CAAC6B,SAAS,CAAEC,YAAY,CAAC,CAAG9B,QAAQ,CAAmB,EAAE,CAAC,CAChE,KAAM,CAAA+B,QAAQ,CAAG7B,WAAW,CAAC,CAAC,CAE9B;AACAD,SAAS,CAAC,IAAM,CACd,GAAI,CACF,KAAM,CAAA+B,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACtD,KAAM,CAAAC,aAAa,CAAGF,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAC/D,KAAM,CAAAE,cAAc,CAAGH,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAEjE,GAAIF,UAAU,CAAE,CACdK,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAEN,UAAU,CAAC,CAC1EN,cAAc,CAACa,IAAI,CAACC,KAAK,CAACR,UAAU,CAAC,CAAC,CACxC,CAEA,GAAIG,aAAa,CAAE,CACjBE,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAEH,aAAa,CAAC,CACjEP,oBAAoB,CAACO,aAAa,CAAC,CACrC,CAEA,GAAIC,cAAc,CAAE,CAClBC,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC,CACjE;AACA;AACF,CACF,CAAE,MAAOG,CAAC,CAAE,CACVJ,OAAO,CAAChB,KAAK,CAAC,wCAAwC,CAAEoB,CAAC,CAAC,CAC5D,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAOC,IAAqB,CAAEC,eAAiC,GAAK,CACvF1B,eAAe,CAAC,IAAI,CAAC,CACrBI,QAAQ,CAAC,IAAI,CAAC,CACde,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEK,IAAI,CAAC,CAE5C,GAAI,CACF;AACA,KAAM,CAAAE,UAA2B,CAAG,CAAE,GAAGF,IAAK,CAAC,CAE/C;AACA,GAAI3B,IAAI,EAAIA,IAAI,CAAC8B,IAAI,GAAK,SAAS,CAAE,CACnCD,UAAU,CAACE,UAAU,CAAG/B,IAAI,CAACgC,EAAE,CACjC,CAEA;AACA,GAAI,CAACH,UAAU,CAACI,UAAU,CAAE,CAC1BZ,OAAO,CAACC,GAAG,CAAC,kEAAkE,CAAC,CAE/E,GAAItB,IAAI,CAAE,CACR,GAAIA,IAAI,CAAC8B,IAAI,GAAK,eAAe,CAAE,CACjCD,UAAU,CAACI,UAAU,CAAGjC,IAAI,CAACkC,QAAQ,CACrCb,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAEO,UAAU,CAACI,UAAU,CAAC,CACjF,CAAC,IAAM,CACL;AACAJ,UAAU,CAACI,UAAU,CAAGpC,kBAAkB,CAC1CwB,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAEtB,IAAI,CAAC8B,IAAI,CAAC,CACxE,CACF,CAAC,IAAM,CACL;AACAD,UAAU,CAACI,UAAU,CAAGpC,kBAAkB,CAC1CwB,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC,CAC1D,CACF,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAEO,UAAU,CAACI,UAAU,CAAC,CAC1E,CAEA;AACA,GAAI,CAAAE,SAAS,CACb,GAAIxB,iBAAiB,CAAE,CACrBU,OAAO,CAACC,GAAG,CAAC,qCAAqCX,iBAAiB,EAAE,CAAC,CACrEwB,SAAS,CAAG,KAAM,CAAA3C,YAAY,CAACmB,iBAAiB,CAAEkB,UAAU,CAAED,eAAe,CAAE5B,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEgC,EAAE,CAAC,CACxFX,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEa,SAAS,CAAC,CACxD,CAAC,IAAM,CACL;AACAd,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACpDa,SAAS,CAAG,KAAM,CAAA5C,YAAY,CAACsC,UAAU,CAAuCD,eAAe,CAAE5B,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEgC,EAAE,CAAC,CAC1GX,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEa,SAAS,CAAC,CACxD,CAEA;AACA,GAAIA,SAAS,CAACC,cAAc,CAAE,CAC5B5B,iBAAiB,CAAC2B,SAAS,CAACC,cAAc,CAAC,CAC3ClC,eAAe,CAAC,KAAK,CAAC,CACtB;AACA,OACF,CAEAmB,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAEa,SAAS,CAAC,CAE9D;AACAlB,YAAY,CAACoB,UAAU,CAAC,aAAa,CAAC,CACtCpB,YAAY,CAACoB,UAAU,CAAC,gBAAgB,CAAC,CACzCpB,YAAY,CAACoB,UAAU,CAAC,mBAAmB,CAAC,CAC5CpB,YAAY,CAACoB,UAAU,CAAC,oBAAoB,CAAC,CAE7C;AACAtC,QAAQ,CAAC,UAAU,CAAC,CACtB,CAAE,MAAOM,KAAU,CAAE,CACnBgB,OAAO,CAAChB,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CC,QAAQ,CAACD,KAAK,CAACiC,OAAO,EAAI,yDAAyD,CAAC,CACtF,CAAC,OAAS,CACRpC,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAqC,iBAAiB,CAAG,KAAAA,CAAOZ,IAAqB,CAAEa,IAAY,GAAK,CACvE,GAAI,CACFpC,oBAAoB,CAAC,IAAI,CAAC,CAC1BE,QAAQ,CAAC,IAAI,CAAC,CAAE;AAChBe,OAAO,CAACC,GAAG,CAAC,gCAAgCkB,IAAI,GAAG,CAAEb,IAAI,CAAC,CAE1D;AACA,KAAM,CAAAc,WAAW,CAAGC,oBAAoB,CAACf,IAAI,CAAEa,IAAI,CAAC,CAEpD;AACA,GAAIxC,IAAI,EAAIA,IAAI,CAAC8B,IAAI,GAAK,SAAS,EAAI,CAACW,WAAW,CAACV,UAAU,CAAE,CAC9DU,WAAW,CAACV,UAAU,CAAG/B,IAAI,CAACgC,EAAE,CAClC,CAEA,GAAI,CAACS,WAAW,CAACR,UAAU,CAAE,CAC3B,GAAIjC,IAAI,EAAIA,IAAI,CAAC8B,IAAI,GAAK,eAAe,CAAE,CACzCW,WAAW,CAACR,UAAU,CAAGjC,IAAI,CAACkC,QAAQ,CACxC,CAAC,IAAM,CACLO,WAAW,CAACR,UAAU,CAAGpC,kBAAkB,CAC7C,CACF,CAEA;AACA,KAAM,CAAA8C,kBAAkB,CAAG,CAAE,GAAGlC,WAAW,CAAE,GAAGgC,WAAY,CAAC,CAC7D/B,cAAc,CAACiC,kBAAkB,CAAC,CAElC;AACA,GAAI,CACF;AACA,GAAIhC,iBAAiB,CAAE,CACrBU,OAAO,CAACC,GAAG,CAAC,qCAAqCX,iBAAiB,EAAE,CAAC,CACrE,KAAM,CAAAiC,aAAa,CAAG,KAAM,CAAApD,YAAY,CAACmB,iBAAiB,CAAE8B,WAAW,CAAC,CACxEpB,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEsB,aAAa,CAAC,CAE1D,GAAI,CAACA,aAAa,CAAE,CAClB,KAAM,IAAI,CAAAC,KAAK,CAAC,qDAAqD,CAAC,CACxE,CAEA;AACA,GAAID,aAAa,CAACR,cAAc,CAAE,CAChC5B,iBAAiB,CAACoC,aAAa,CAACR,cAAc,CAAC,CACjD,CAAC,IAAM,CACL5B,iBAAiB,CAAC,2BAA2BgC,IAAI,iCAAiC,CAAC,CACrF,CAEA;AACAM,UAAU,CAAC,IAAM,CACftC,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,CAAE,IAAI,CAAC,CACV,CACA;AAAA,IACK,IAAIgC,IAAI,GAAK,CAAC,CAAE,CACnBnB,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAExC;AACA,GAAI,CAACmB,WAAW,CAACM,UAAU,EAAI,CAACN,WAAW,CAACO,gBAAgB,CAAE,CAC5D1C,QAAQ,CAAC,oEAAoE,CAAC,CAC9EF,oBAAoB,CAAC,KAAK,CAAC,CAC3B,MAAO,KAAI,CACb,CAEA,KAAM,CAAA+B,SAAS,CAAG,KAAM,CAAA5C,YAAY,CAACkD,WAAW,CAAuC,EAAE,CAAEzC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEgC,EAAE,CAAC,CACpGX,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAEa,SAAS,CAAC,CAEhE,GAAIA,SAAS,EAAIA,SAAS,CAACH,EAAE,CAAE,CAC7BpB,oBAAoB,CAACuB,SAAS,CAACH,EAAE,CAAC,CAClCf,YAAY,CAACgC,OAAO,CAAC,mBAAmB,CAAEd,SAAS,CAACH,EAAE,CAAC,CACzD,CAAC,IAAM,CACL,KAAM,IAAI,CAAAa,KAAK,CAAC,uDAAuD,CAAC,CAC1E,CACF,CAAC,IAAM,CACLxB,OAAO,CAACC,GAAG,CAAC,wEAAwE,CAAC,CACrF;AACF,CAEA;AACAL,YAAY,CAACgC,OAAO,CAAC,aAAa,CAAE1B,IAAI,CAAC2B,SAAS,CAACP,kBAAkB,CAAC,CAAC,CAEvE,MAAO,CAAAA,kBAAkB,CAC3B,CAAE,MAAOlB,CAAM,CAAE,CACfJ,OAAO,CAAChB,KAAK,CAAC,2BAA2B,CAAEoB,CAAC,CAAC,CAE7C;AACA,GAAIA,CAAC,CAACa,OAAO,CAAEjB,OAAO,CAAChB,KAAK,CAAC,gBAAgB,CAAEoB,CAAC,CAACa,OAAO,CAAC,CACzD,GAAIb,CAAC,CAAC0B,KAAK,CAAE9B,OAAO,CAAChB,KAAK,CAAC,cAAc,CAAEoB,CAAC,CAAC0B,KAAK,CAAC,CACnD,GAAI1B,CAAC,CAAC2B,KAAK,CAAE/B,OAAO,CAAChB,KAAK,CAAC,cAAc,CAAEoB,CAAC,CAAC2B,KAAK,CAAC,CAEnD;AACA,GAAI3B,CAAC,CAAC4B,IAAI,EAAI5B,CAAC,CAAC6B,OAAO,EAAI7B,CAAC,CAAC8B,IAAI,CAAE,CACjClC,OAAO,CAAChB,KAAK,CAAC,yBAAyB,CAAE,CACvCgD,IAAI,CAAE5B,CAAC,CAAC4B,IAAI,CACZC,OAAO,CAAE7B,CAAC,CAAC6B,OAAO,CAClBC,IAAI,CAAE9B,CAAC,CAAC8B,IACV,CAAC,CAAC,CACJ,CAEAjD,QAAQ,CAAC,8CAA8CmB,CAAC,CAACa,OAAO,EAAI,mBAAmB,EAAE,CAAC,CAE1F;AACA,GAAI,CACFrB,YAAY,CAACgC,OAAO,CAAC,aAAa,CAAE1B,IAAI,CAAC2B,SAAS,CAACP,kBAAkB,CAAC,CAAC,CACzE,CAAE,MAAOa,YAAY,CAAE,CACrBnC,OAAO,CAAChB,KAAK,CAAC,+BAA+B,CAAEmD,YAAY,CAAC,CAC9D,CAEA,MAAO,KAAI,CACb,CACF,CAAE,MAAOnD,KAAU,CAAE,CACnBgB,OAAO,CAAChB,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDC,QAAQ,CAAC,uCAAuC,CAAC,CACjD,MAAO,KAAI,CACb,CAAC,OAAS,CACRF,oBAAoB,CAAC,KAAK,CAAC,CAC7B,CACF,CAAC,CAED;AACA,KAAM,CAAAqD,oBAAoB,CAAI5B,UAA2B,EAAK,CAC5D;AACA,GAAI7B,IAAI,EAAIA,IAAI,CAAC8B,IAAI,GAAK,SAAS,CAAE,CACnCD,UAAU,CAACE,UAAU,CAAG/B,IAAI,CAACgC,EAAE,CACjC,CAEA;AACA,GAAI,CAACH,UAAU,CAACI,UAAU,CAAE,CAC1BZ,OAAO,CAACC,GAAG,CAAC,+EAA+E,CAAC,CAE5F,GAAItB,IAAI,CAAE,CACR,GAAIA,IAAI,CAAC8B,IAAI,GAAK,eAAe,CAAE,CACjCD,UAAU,CAACI,UAAU,CAAGjC,IAAI,CAACkC,QAAQ,CACrCb,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAEO,UAAU,CAACI,UAAU,CAAC,CACvF,CAAC,IAAM,CACL;AACAJ,UAAU,CAACI,UAAU,CAAGpC,kBAAkB,CAC1CwB,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAEtB,IAAI,CAAC8B,IAAI,CAAC,CACrF,CACF,CAAC,IAAM,CACL;AACAD,UAAU,CAACI,UAAU,CAAGpC,kBAAkB,CAC1CwB,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC,CAC7E,CACF,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAEO,UAAU,CAACI,UAAU,CAAC,CAC3F,CACF,CAAC,CAED;AACA,KAAM,CAAAS,oBAAoB,CAAGA,CAACf,IAAqB,CAAEa,IAAY,GAAsB,CACrF,KAAM,CAAAkB,MAAuB,CAAG,CAAC,CAAC,CAElC;AACA,GAAI/B,IAAI,CAACK,EAAE,CAAE0B,MAAM,CAAC1B,EAAE,CAAGL,IAAI,CAACK,EAAE,CAChC,GAAIL,IAAI,CAACM,UAAU,CAAEyB,MAAM,CAACzB,UAAU,CAAGN,IAAI,CAACM,UAAU,CACxD,GAAIN,IAAI,CAACI,UAAU,CAAE2B,MAAM,CAAC3B,UAAU,CAAGJ,IAAI,CAACI,UAAU,CAExD,OAAOS,IAAI,EACT,IAAK,EAAC,CAAE;AACN,KAAM,CAAAmB,cAAc,CAAG,CACrB,YAAY,CAAE,kBAAkB,CAAE,kBAAkB,CAAE,OAAO,CAAE,OAAO,CACtE,KAAK,CAAE,MAAM,CAAE,YAAY,CAAE,QAAQ,CAAE,gBAAgB,CAAE,SAAS,CAClE,MAAM,CAAE,OAAO,CAAE,aAAa,CAC/B,CACDA,cAAc,CAACC,OAAO,CAACC,KAAK,EAAI,CAC9B,GAAIA,KAAK,GAAI,CAAAlC,IAAI,CAAE,CAChB+B,MAAM,CAASG,KAAK,CAAC,CAAIlC,IAAI,CAASkC,KAAK,CAAC,CAC/C,CACF,CAAC,CAAC,CACF,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAC,eAAe,CAAG,CACtB,iBAAiB,CAAE,kBAAkB,CAAE,gBAAgB,CACvD,mBAAmB,CAAE,kBAAkB,CAAE,qBAAqB,CAC/D,CACDA,eAAe,CAACF,OAAO,CAACC,KAAK,EAAI,CAC/B,GAAIA,KAAK,GAAI,CAAAlC,IAAI,CAAE,CAChB+B,MAAM,CAASG,KAAK,CAAC,CAAIlC,IAAI,CAASkC,KAAK,CAAC,CAC/C,CACF,CAAC,CAAC,CACF,MAEF,IAAK,EAAC,CAAE;AACN,KAAM,CAAAE,UAAU,CAAG,CACjB,WAAW,CAAE,YAAY,CAAE,qBAAqB,CAChD,mBAAmB,CAAE,qBAAqB,CAC3C,CACDA,UAAU,CAACH,OAAO,CAACC,KAAK,EAAI,CAC1B,GAAIA,KAAK,GAAI,CAAAlC,IAAI,CAAE,CAChB+B,MAAM,CAASG,KAAK,CAAC,CAAIlC,IAAI,CAASkC,KAAK,CAAC,CAC/C,CACF,CAAC,CAAC,CACF,MAEF,QACExC,OAAO,CAAC2C,IAAI,CAAC,8CAA8CxB,IAAI,EAAE,CAAC,CACtE,CAEA,MAAO,CAAAkB,MAAM,CACf,CAAC,CAED,mBACEhE,IAAA,CAACL,UAAU,EAAA4E,QAAA,cACTrE,KAAA,QAAKsE,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClBrE,KAAA,QAAKsE,SAAS,CAAC,wBAAwB,CAAAD,QAAA,eACrCrE,KAAA,WACEuE,OAAO,CAAEA,CAAA,GAAMpE,QAAQ,CAAC,UAAU,CAAE,CACpCmE,SAAS,CAAC,6BAA6B,CAAAD,QAAA,eAEvCvE,IAAA,QAAK0E,KAAK,CAAC,4BAA4B,CAACF,SAAS,CAAC,cAAc,CAACG,OAAO,CAAC,WAAW,CAACC,IAAI,CAAC,cAAc,CAAAL,QAAA,cACtGvE,IAAA,SAAM6E,QAAQ,CAAC,SAAS,CAACC,CAAC,CAAC,uIAAuI,CAACC,QAAQ,CAAC,SAAS,CAAE,CAAC,CACrL,CAAC,SAER,EAAQ,CAAC,cACT/E,IAAA,OAAIwE,SAAS,CAAC,oBAAoB,CAAAD,QAAA,CAAC,eAAa,CAAI,CAAC,EAClD,CAAC,CAGL5D,KAAK,eACJX,IAAA,QAAKwE,SAAS,CAAC,MAAM,CAAAD,QAAA,cACnBrE,KAAA,QAAKsE,SAAS,CAAC,mBAAmB,CAAAD,QAAA,eAChCvE,IAAA,QAAK0E,KAAK,CAAC,4BAA4B,CAACF,SAAS,CAAC,SAAS,CAACI,IAAI,CAAC,MAAM,CAACD,OAAO,CAAC,WAAW,CAACK,MAAM,CAAC,cAAc,CAAAT,QAAA,cAC/GvE,IAAA,SAAMiF,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAE,CAAE,CAACL,CAAC,CAAC,2DAA2D,CAAE,CAAC,CAChI,CAAC,cACN9E,IAAA,SAAAuE,QAAA,CAAO5D,KAAK,CAAO,CAAC,cACpBX,IAAA,WAAQyE,OAAO,CAAEA,CAAA,GAAM7D,QAAQ,CAAC,IAAI,CAAE,CAAC4D,SAAS,CAAC,SAAS,CAAAD,QAAA,CAAC,MAAC,CAAQ,CAAC,EAClE,CAAC,CACH,CACN,CAGA1D,cAAc,eACbb,IAAA,QAAKwE,SAAS,CAAC,MAAM,CAAAD,QAAA,cACnBrE,KAAA,QAAKsE,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAClCvE,IAAA,QAAK0E,KAAK,CAAC,4BAA4B,CAACF,SAAS,CAAC,SAAS,CAACI,IAAI,CAAC,MAAM,CAACD,OAAO,CAAC,WAAW,CAACK,MAAM,CAAC,cAAc,CAAAT,QAAA,cAC/GvE,IAAA,SAAMiF,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAE,CAAE,CAACL,CAAC,CAAC,+CAA+C,CAAE,CAAC,CACpH,CAAC,cACN9E,IAAA,SAAAuE,QAAA,CAAO1D,cAAc,CAAO,CAAC,cAC7Bb,IAAA,WAAQyE,OAAO,CAAEA,CAAA,GAAM3D,iBAAiB,CAAC,IAAI,CAAE,CAAC0D,SAAS,CAAC,SAAS,CAAAD,QAAA,CAAC,MAAC,CAAQ,CAAC,EAC3E,CAAC,CACH,CACN,CAEAtD,iBAAiB,eAChBjB,IAAA,QAAKwE,SAAS,CAAC,MAAM,CAAAD,QAAA,cACnBrE,KAAA,QAAKsE,SAAS,CAAC,kBAAkB,CAAAD,QAAA,eAC/BvE,IAAA,QAAK0E,KAAK,CAAC,4BAA4B,CAACF,SAAS,CAAC,SAAS,CAACI,IAAI,CAAC,MAAM,CAACD,OAAO,CAAC,WAAW,CAACK,MAAM,CAAC,cAAc,CAAAT,QAAA,cAC/GvE,IAAA,SAAMiF,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAE,CAAE,CAACL,CAAC,CAAC,2DAA2D,CAAE,CAAC,CAChI,CAAC,cACN9E,IAAA,SAAAuE,QAAA,CAAM,mFAA8E,CAAM,CAAC,EACxF,CAAC,CACH,CACN,cAEDvE,IAAA,CAACJ,UAAU,EACTwF,WAAW,CAAErE,WAAW,EAAIsE,SAAU,CACtCC,QAAQ,CAAEtD,YAAa,CACvBuD,aAAa,CAAE1C,iBAAkB,CACjCtC,YAAY,CAAEA,YAAa,CAC5B,CAAC,EACC,CAAC,CACI,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAH,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}