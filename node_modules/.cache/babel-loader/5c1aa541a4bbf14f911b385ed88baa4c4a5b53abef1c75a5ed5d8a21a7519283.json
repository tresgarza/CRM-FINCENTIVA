{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Agregar listener para prevenir cierre de sesión al recargar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.addEventListener('beforeunload', () => {\n  // Asegurar que se mantengan los datos de sesión al recargar\n  // No hacemos nada específico aquí, solo nos aseguramos que el evento se active\n  // para mantener la coherencia con nuestra implementación de persistencia\n});\n\n// Agregar detector para mantener sesión entre navegaciones\nlet lastActivity = localStorage.getItem('last_activity');\nif (lastActivity) {\n  // Actualizar timestamp de actividad si existe una sesión\n  localStorage.setItem('last_activity', new Date().toISOString());\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","window","addEventListener","lastActivity","localStorage","getItem","setItem","Date","toISOString","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Agregar listener para prevenir cierre de sesión al recargar\nwindow.addEventListener('beforeunload', () => {\n  // Asegurar que se mantengan los datos de sesión al recargar\n  // No hacemos nada específico aquí, solo nos aseguramos que el evento se active\n  // para mantener la coherencia con nuestra implementación de persistencia\n});\n\n// Agregar detector para mantener sesión entre navegaciones\nlet lastActivity = localStorage.getItem('last_activity');\nif (lastActivity) {\n  // Actualizar timestamp de actividad si existe una sesión\n  localStorage.setItem('last_activity', new Date().toISOString());\n}\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAE,MAAM;EAC5C;EACA;EACA;AAAA,CACD,CAAC;;AAEF;AACA,IAAIC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;AACxD,IAAIF,YAAY,EAAE;EAChB;EACAC,YAAY,CAACE,OAAO,CAAC,eAAe,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;AACjE;AAEA,MAAMC,IAAI,GAAGb,QAAQ,CAACc,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AACDH,IAAI,CAACI,MAAM,cACTb,OAAA,CAACL,KAAK,CAACmB,UAAU;EAAAC,QAAA,eACff,OAAA,CAACH,GAAG;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACArB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}