{"ast":null,"code":"'use client';\n\nimport * as combobox from '@zag-js/combobox';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId, useEffect } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nimport { useFieldContext } from '../field/use-field-context.js';\nconst useCombobox = props => {\n  const {\n    collection,\n    ...comboboxProps\n  } = props;\n  const {\n    dir\n  } = useLocaleContext();\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const field = useFieldContext();\n  const initialContext = {\n    id: useId(),\n    ids: {\n      label: field?.ids.label,\n      input: field?.ids.control\n    },\n    disabled: field?.disabled,\n    readOnly: field?.readOnly,\n    required: field?.required,\n    invalid: field?.invalid,\n    dir,\n    getRootNode,\n    collection,\n    open: props.defaultOpen,\n    value: props.defaultValue,\n    \"open.controlled\": props.open !== void 0,\n    ...comboboxProps\n  };\n  const context = (() => {\n    const {\n      collection: _,\n      ...restProps\n    } = initialContext;\n    return {\n      ...restProps,\n      value: props.value,\n      onValueChange: useEvent(props.onValueChange),\n      onInputValueChange: useEvent(props.onInputValueChange, {\n        sync: true\n      }),\n      onHighlightChange: useEvent(props.onHighlightChange),\n      onOpenChange: useEvent(props.onOpenChange)\n    };\n  })();\n  const [state, send, service] = useMachine(combobox.machine(initialContext), {\n    context\n  });\n  useEffect(() => {\n    service.setContext({\n      collection\n    });\n  }, [collection]);\n  return combobox.connect(state, send, normalizeProps);\n};\nexport { useCombobox };","map":{"version":3,"names":["combobox","useMachine","normalizeProps","useId","useEffect","useEnvironmentContext","useLocaleContext","useEvent","useFieldContext","useCombobox","props","collection","comboboxProps","dir","getRootNode","field","initialContext","id","ids","label","input","control","disabled","readOnly","required","invalid","open","defaultOpen","value","defaultValue","context","_","restProps","onValueChange","onInputValueChange","sync","onHighlightChange","onOpenChange","state","send","service","machine","setContext","connect"],"sources":["/Users/diegogg98/NEW CRM MAR18/node_modules/@ark-ui/react/dist/components/combobox/use-combobox.js"],"sourcesContent":["'use client';\nimport * as combobox from '@zag-js/combobox';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId, useEffect } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nimport { useFieldContext } from '../field/use-field-context.js';\n\nconst useCombobox = (props) => {\n  const { collection, ...comboboxProps } = props;\n  const { dir } = useLocaleContext();\n  const { getRootNode } = useEnvironmentContext();\n  const field = useFieldContext();\n  const initialContext = {\n    id: useId(),\n    ids: {\n      label: field?.ids.label,\n      input: field?.ids.control\n    },\n    disabled: field?.disabled,\n    readOnly: field?.readOnly,\n    required: field?.required,\n    invalid: field?.invalid,\n    dir,\n    getRootNode,\n    collection,\n    open: props.defaultOpen,\n    value: props.defaultValue,\n    \"open.controlled\": props.open !== void 0,\n    ...comboboxProps\n  };\n  const context = (() => {\n    const { collection: _, ...restProps } = initialContext;\n    return {\n      ...restProps,\n      value: props.value,\n      onValueChange: useEvent(props.onValueChange),\n      onInputValueChange: useEvent(props.onInputValueChange, { sync: true }),\n      onHighlightChange: useEvent(props.onHighlightChange),\n      onOpenChange: useEvent(props.onOpenChange)\n    };\n  })();\n  const [state, send, service] = useMachine(combobox.machine(initialContext), {\n    context\n  });\n  useEffect(() => {\n    service.setContext({ collection });\n  }, [collection]);\n  return combobox.connect(state, send, normalizeProps);\n};\n\nexport { useCombobox };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,KAAK,EAAEC,SAAS,QAAQ,OAAO;AACxC,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAM;IAAEC,UAAU;IAAE,GAAGC;EAAc,CAAC,GAAGF,KAAK;EAC9C,MAAM;IAAEG;EAAI,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAClC,MAAM;IAAEQ;EAAY,CAAC,GAAGT,qBAAqB,CAAC,CAAC;EAC/C,MAAMU,KAAK,GAAGP,eAAe,CAAC,CAAC;EAC/B,MAAMQ,cAAc,GAAG;IACrBC,EAAE,EAAEd,KAAK,CAAC,CAAC;IACXe,GAAG,EAAE;MACHC,KAAK,EAAEJ,KAAK,EAAEG,GAAG,CAACC,KAAK;MACvBC,KAAK,EAAEL,KAAK,EAAEG,GAAG,CAACG;IACpB,CAAC;IACDC,QAAQ,EAAEP,KAAK,EAAEO,QAAQ;IACzBC,QAAQ,EAAER,KAAK,EAAEQ,QAAQ;IACzBC,QAAQ,EAAET,KAAK,EAAES,QAAQ;IACzBC,OAAO,EAAEV,KAAK,EAAEU,OAAO;IACvBZ,GAAG;IACHC,WAAW;IACXH,UAAU;IACVe,IAAI,EAAEhB,KAAK,CAACiB,WAAW;IACvBC,KAAK,EAAElB,KAAK,CAACmB,YAAY;IACzB,iBAAiB,EAAEnB,KAAK,CAACgB,IAAI,KAAK,KAAK,CAAC;IACxC,GAAGd;EACL,CAAC;EACD,MAAMkB,OAAO,GAAG,CAAC,MAAM;IACrB,MAAM;MAAEnB,UAAU,EAAEoB,CAAC;MAAE,GAAGC;IAAU,CAAC,GAAGhB,cAAc;IACtD,OAAO;MACL,GAAGgB,SAAS;MACZJ,KAAK,EAAElB,KAAK,CAACkB,KAAK;MAClBK,aAAa,EAAE1B,QAAQ,CAACG,KAAK,CAACuB,aAAa,CAAC;MAC5CC,kBAAkB,EAAE3B,QAAQ,CAACG,KAAK,CAACwB,kBAAkB,EAAE;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC;MACtEC,iBAAiB,EAAE7B,QAAQ,CAACG,KAAK,CAAC0B,iBAAiB,CAAC;MACpDC,YAAY,EAAE9B,QAAQ,CAACG,KAAK,CAAC2B,YAAY;IAC3C,CAAC;EACH,CAAC,EAAE,CAAC;EACJ,MAAM,CAACC,KAAK,EAAEC,IAAI,EAAEC,OAAO,CAAC,GAAGvC,UAAU,CAACD,QAAQ,CAACyC,OAAO,CAACzB,cAAc,CAAC,EAAE;IAC1Ec;EACF,CAAC,CAAC;EACF1B,SAAS,CAAC,MAAM;IACdoC,OAAO,CAACE,UAAU,CAAC;MAAE/B;IAAW,CAAC,CAAC;EACpC,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAChB,OAAOX,QAAQ,CAAC2C,OAAO,CAACL,KAAK,EAAEC,IAAI,EAAErC,cAAc,CAAC;AACtD,CAAC;AAED,SAASO,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}