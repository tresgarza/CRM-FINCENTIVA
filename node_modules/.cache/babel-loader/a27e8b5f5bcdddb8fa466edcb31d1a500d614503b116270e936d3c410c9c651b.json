{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/NotificationPopup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n// Map NotificationType to basic types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapNotificationTypeToBasic = type => {\n  switch (type) {\n    case 'info':\n    case 'new_application':\n    case 'new_message':\n      return 'info';\n    case 'success':\n    case 'approval_required':\n    case 'application_status_updated':\n      return 'success';\n    case 'warning':\n      return 'warning';\n    case 'error':\n    case 'application_comment':\n      return 'error';\n    default:\n      return 'info';\n  }\n};\n\n// Preload sounds to avoid playback issues\nconst preloadedSounds = {};\n\n// List of sounds to preload on app initialization\nconst soundsToPreload = ['/sounds/clean-notification.mp3', '/sounds/notification-simple.mp3', '/sounds/triple-tone.mp3', '/sounds/beep.mp3', '/sounds/alert.mp3', '/sounds/approval.mp3'];\n\n// Preload sounds on app initialization\nif (typeof window !== 'undefined') {\n  // Function to preload a sound with retry\n  const preloadSound = (soundPath, retryCount = 0) => {\n    try {\n      const audio = new Audio(soundPath);\n      audio.volume = 0.2; // Set low volume by default\n\n      // Set up event listeners\n      audio.addEventListener('canplaythrough', () => {\n        preloadedSounds[soundPath] = audio;\n        console.log(`Successfully preloaded sound: ${soundPath}`);\n      });\n      audio.addEventListener('error', err => {\n        console.warn(`Error preloading sound ${soundPath}:`, err);\n        if (retryCount < 2) {\n          // Retry loading after a short delay\n          setTimeout(() => preloadSound(soundPath, retryCount + 1), 1000);\n        }\n      });\n\n      // Start loading the audio file\n      audio.load();\n    } catch (err) {\n      console.error(`Failed to preload sound ${soundPath}:`, err);\n    }\n  };\n\n  // Preload all sounds\n  soundsToPreload.forEach(soundPath => preloadSound(soundPath));\n}\n\n// Add a global listener for user interaction to enable audio\nif (typeof window !== 'undefined' && !document.documentElement.hasAttribute('data-listeners-added')) {\n  document.documentElement.setAttribute('data-listeners-added', 'true');\n  const userInteractionEvents = ['click', 'touchstart', 'keydown'];\n  const handleUserInteraction = () => {\n    document.documentElement.setAttribute('data-user-interacted', 'true');\n\n    // Remove listeners after first interaction\n    userInteractionEvents.forEach(event => {\n      document.removeEventListener(event, handleUserInteraction);\n    });\n\n    // Play a silent sound to unlock audio on iOS\n    try {\n      const silentSound = new Audio();\n      silentSound.volume = 0.01;\n      silentSound.play().catch(() => {/* Ignore errors */});\n    } catch (e) {\n      // Ignore errors\n    }\n  };\n\n  // Add listeners for all interaction types\n  userInteractionEvents.forEach(event => {\n    document.addEventListener(event, handleUserInteraction);\n  });\n  console.log('User interaction listeners added for sound enablement');\n}\nconst NotificationPopup = ({\n  title,\n  message,\n  type = 'info',\n  duration = 5000,\n  // Por defecto, 5 segundos\n  onClose,\n  playSound = true,\n  soundType = 'notification',\n  customSound,\n  centerScreen = false,\n  relatedItemId\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(true);\n  const [exiting, setExiting] = useState(false);\n  const [soundPlayed, setSoundPlayed] = useState(false);\n\n  // Define closeNotification function before it's used in useEffect\n  const closeNotification = () => {\n    setExiting(true);\n    // Agregar un pequeño retraso para la animación de salida\n    setTimeout(() => {\n      setIsVisible(false);\n      if (onClose) onClose();\n    }, 300);\n  };\n\n  // Configurar el auto-cierre\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        closeNotification();\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n  }, [duration]);\n\n  // Reproducir sonido de notificación una sola vez\n  useEffect(() => {\n    if (playSound && !soundPlayed) {\n      // Prevent playing the sound more than once for the same notification\n      setSoundPlayed(true);\n\n      // Intentar reproducir el sonido con diferentes enfoques\n      playNotificationSound();\n    }\n  }, [playSound, customSound, soundType, soundPlayed]);\n  const playNotificationSound = () => {\n    try {\n      // Priority list of sounds to try - primary options first\n      const soundOptions = [customSound || '/sounds/clean-notification.mp3',\n      // New reliable sound\n      '/sounds/notification-simple.mp3',\n      // Simple backup sound\n      '/sounds/triple-tone.mp3', '/sounds/beep.mp3', '/sounds/alert.mp3'];\n\n      // Function to play a sound with proper error handling\n      const tryPlaySound = soundPath => {\n        return new Promise((resolve, reject) => {\n          try {\n            // Try using a preloaded sound first\n            if (preloadedSounds[soundPath]) {\n              const preloadedAudio = preloadedSounds[soundPath];\n              preloadedAudio.currentTime = 0; // Reset playback position\n\n              preloadedAudio.play().then(() => {\n                console.log(`Successfully played preloaded sound: ${soundPath}`);\n                resolve();\n              }).catch(err => {\n                console.warn(`Failed to play preloaded sound ${soundPath}:`, err);\n                reject(err);\n              });\n              return;\n            }\n\n            // Fallback to creating a new audio instance\n            const audio = new Audio(soundPath);\n            audio.volume = 0.2; // Subtle volume\n\n            // Setup success handlers\n            audio.oncanplaythrough = () => {\n              audio.play().then(() => {\n                console.log(`Successfully played sound: ${soundPath}`);\n                resolve();\n              }).catch(err => {\n                console.warn(`Failed to play sound ${soundPath}:`, err);\n                reject(err);\n              });\n            };\n\n            // Setup error handlers\n            audio.onerror = err => {\n              console.warn(`Error loading sound ${soundPath}:`, err);\n              reject(err);\n            };\n\n            // Start loading the audio\n            audio.load();\n\n            // Set timeout to avoid hanging\n            setTimeout(() => {\n              reject(new Error(`Timeout loading sound ${soundPath}`));\n            }, 1500);\n          } catch (err) {\n            console.warn(`Exception while trying to play ${soundPath}:`, err);\n            reject(err);\n          }\n        });\n      };\n\n      // Try each sound in sequence until one works\n      const tryNextSound = index => {\n        if (index >= soundOptions.length) {\n          console.error('All sound playback attempts failed');\n          return;\n        }\n        const soundPath = soundOptions[index];\n        tryPlaySound(soundPath).catch(() => {\n          // If this sound failed, try the next one\n          tryNextSound(index + 1);\n        });\n      };\n\n      // Start with the first sound\n      tryNextSound(0);\n    } catch (error) {\n      console.error('Failed to play notification sound:', error);\n    }\n  };\n  if (!isVisible) return null;\n\n  // Mapeo de estilos según el tipo\n  const typeStyles = {\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-800',\n      title: 'text-blue-900'\n    },\n    success: {\n      bg: 'bg-green-50',\n      border: 'border-green-200',\n      text: 'text-green-800',\n      title: 'text-green-900'\n    },\n    warning: {\n      bg: 'bg-yellow-50',\n      border: 'border-yellow-200',\n      text: 'text-yellow-800',\n      title: 'text-yellow-900'\n    },\n    error: {\n      bg: 'bg-red-50',\n      border: 'border-red-200',\n      text: 'text-red-800',\n      title: 'text-red-900'\n    }\n  };\n\n  // Map complex notification types to the basic ones\n  const basicType = mapNotificationTypeToBasic(type);\n\n  // Use the mapped type to get styles\n  const styles = typeStyles[basicType] || typeStyles.info;\n\n  // Estilos de posición según si debe estar centrado o no\n  const positionClasses = centerScreen ? \"fixed inset-0 flex items-center justify-center z-50\" : \"fixed top-5 right-5 z-50 max-w-md w-full\";\n\n  // Ancho según si debe estar centrado o no\n  const widthClasses = centerScreen ? \"w-full max-w-xl mx-4\" // Más ancho cuando está centrado\n  : \"w-full\";\n\n  // Determinar si el mensaje es HTML, renderizarlo de manera segura\n  const isHtmlMessage = message && message.trim().startsWith('<');\n\n  // Renderizar el contenido de la notificación\n  const renderContent = () => {\n    if (!isHtmlMessage) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-1 text-sm\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Si el mensaje es HTML, creamos un div contenedor con styles\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(message, 'text/html');\n    const body = doc.body;\n\n    // Aplicar clase de estilo al primer div si es una grid\n    const firstDiv = body.querySelector('div');\n    if (firstDiv && firstDiv.className.includes('grid')) {\n      firstDiv.className = 'grid grid-cols-2 gap-2 text-sm mt-2';\n    }\n\n    // Dar estilos a los elementos semibold\n    const semiboldElements = body.querySelectorAll('.font-semibold');\n    semiboldElements.forEach(el => {\n      el.className = 'font-semibold text-gray-700';\n    });\n\n    // Buscar el tipo de aplicación para aplicar estilos específicos\n    const typeLabel = Array.from(body.querySelectorAll('.text-gray-900')).find(el => {\n      var _el$previousElementSi, _el$previousElementSi2;\n      return (_el$previousElementSi = el.previousElementSibling) === null || _el$previousElementSi === void 0 ? void 0 : (_el$previousElementSi2 = _el$previousElementSi.textContent) === null || _el$previousElementSi2 === void 0 ? void 0 : _el$previousElementSi2.includes('Tipo:');\n    });\n    if (typeLabel) {\n      var _typeLabel$textConten;\n      const applicationType = (_typeLabel$textConten = typeLabel.textContent) === null || _typeLabel$textConten === void 0 ? void 0 : _typeLabel$textConten.trim().toLowerCase();\n\n      // Aplicar estilos específicos según el tipo de aplicación\n      if (applicationType) {\n        // Personalizar los elementos según el tipo\n        if (applicationType.includes('planes seleccionados')) {\n          // Destacar monto de pago mensual para planes seleccionados\n          const monthlyPaymentElem = Array.from(body.querySelectorAll('.text-gray-900')).find(el => {\n            var _el$previousElementSi3, _el$previousElementSi4;\n            return (_el$previousElementSi3 = el.previousElementSibling) === null || _el$previousElementSi3 === void 0 ? void 0 : (_el$previousElementSi4 = _el$previousElementSi3.textContent) === null || _el$previousElementSi4 === void 0 ? void 0 : _el$previousElementSi4.includes('Pago mensual:');\n          });\n          if (monthlyPaymentElem) {\n            monthlyPaymentElem.className = 'text-gray-900 font-bold text-blue-600';\n          }\n        } else if (applicationType.includes('solicitud de efectivo')) {\n          // Destacar monto solicitado para solicitudes de efectivo\n          const amountElem = Array.from(body.querySelectorAll('.text-gray-900')).find(el => {\n            var _el$previousElementSi5, _el$previousElementSi6;\n            return (_el$previousElementSi5 = el.previousElementSibling) === null || _el$previousElementSi5 === void 0 ? void 0 : (_el$previousElementSi6 = _el$previousElementSi5.textContent) === null || _el$previousElementSi6 === void 0 ? void 0 : _el$previousElementSi6.includes('Monto solicitado:');\n          });\n          if (amountElem) {\n            amountElem.className = 'text-gray-900 font-bold text-green-600';\n          }\n        } else if (applicationType.includes('simulación de producto')) {\n          // Destacar monto para simulaciones de producto\n          const amountElem = Array.from(body.querySelectorAll('.text-gray-900')).find(el => {\n            var _el$previousElementSi7, _el$previousElementSi8;\n            return (_el$previousElementSi7 = el.previousElementSibling) === null || _el$previousElementSi7 === void 0 ? void 0 : (_el$previousElementSi8 = _el$previousElementSi7.textContent) === null || _el$previousElementSi8 === void 0 ? void 0 : _el$previousElementSi8.includes('Monto:');\n          });\n          if (amountElem) {\n            amountElem.className = 'text-gray-900 font-bold text-purple-600';\n          }\n        } else if (applicationType.includes('préstamo')) {\n          // Destacar monto para préstamos\n          const amountElem = Array.from(body.querySelectorAll('.text-gray-900')).find(el => {\n            var _el$previousElementSi9, _el$previousElementSi10;\n            return (_el$previousElementSi9 = el.previousElementSibling) === null || _el$previousElementSi9 === void 0 ? void 0 : (_el$previousElementSi10 = _el$previousElementSi9.textContent) === null || _el$previousElementSi10 === void 0 ? void 0 : _el$previousElementSi10.includes('Monto del préstamo:');\n          });\n          if (amountElem) {\n            amountElem.className = 'text-gray-900 font-bold text-orange-600';\n          }\n        }\n      }\n    }\n\n    // Estilizar los valores\n    const valueElements = Array.from(body.querySelectorAll('div')).filter(el => el.previousElementSibling && el.previousElementSibling.className.includes('font-semibold'));\n    valueElements.forEach(el => {\n      // Si no tiene una clase personalizada ya asignada, aplicar la predeterminada\n      if (!el.className.includes('font-bold')) {\n        el.className = 'text-gray-900';\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 notification-content prose prose-sm max-w-none\",\n      dangerouslySetInnerHTML: {\n        __html: body.innerHTML\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: positionClasses,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.bg} ${styles.border} ${styles.text} rounded-lg shadow-lg p-4 border ${exiting ? 'animate-popup-exit' : 'animate-popup-entry'} ${widthClasses}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-base font-semibold ${styles.title}`,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), renderContent()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeNotification,\n          className: \"flex-shrink-0 ml-2 text-gray-400 hover:text-gray-500 focus:outline-none\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 398,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationPopup, \"H+hz1giYHV1kev4Qop1PMA18D/A=\");\n_c = NotificationPopup;\nexport default NotificationPopup;\nvar _c;\n$RefreshReg$(_c, \"NotificationPopup\");","map":{"version":3,"names":["React","useEffect","useState","XMarkIcon","jsxDEV","_jsxDEV","mapNotificationTypeToBasic","type","preloadedSounds","soundsToPreload","window","preloadSound","soundPath","retryCount","audio","Audio","volume","addEventListener","console","log","err","warn","setTimeout","load","error","forEach","document","documentElement","hasAttribute","setAttribute","userInteractionEvents","handleUserInteraction","event","removeEventListener","silentSound","play","catch","e","NotificationPopup","title","message","duration","onClose","playSound","soundType","customSound","centerScreen","relatedItemId","_s","isVisible","setIsVisible","exiting","setExiting","soundPlayed","setSoundPlayed","closeNotification","timer","clearTimeout","playNotificationSound","soundOptions","tryPlaySound","Promise","resolve","reject","preloadedAudio","currentTime","then","oncanplaythrough","onerror","Error","tryNextSound","index","length","typeStyles","info","bg","border","text","success","warning","basicType","styles","positionClasses","widthClasses","isHtmlMessage","trim","startsWith","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","parser","DOMParser","doc","parseFromString","body","firstDiv","querySelector","includes","semiboldElements","querySelectorAll","el","typeLabel","Array","from","find","_el$previousElementSi","_el$previousElementSi2","previousElementSibling","textContent","_typeLabel$textConten","applicationType","toLowerCase","monthlyPaymentElem","_el$previousElementSi3","_el$previousElementSi4","amountElem","_el$previousElementSi5","_el$previousElementSi6","_el$previousElementSi7","_el$previousElementSi8","_el$previousElementSi9","_el$previousElementSi10","valueElements","filter","dangerouslySetInnerHTML","__html","innerHTML","onClick","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/NotificationPopup.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n// Map NotificationType to basic types\nconst mapNotificationTypeToBasic = (type: string): 'info' | 'success' | 'warning' | 'error' => {\n  switch (type) {\n    case 'info':\n    case 'new_application':\n    case 'new_message':\n      return 'info';\n    case 'success':\n    case 'approval_required':\n    case 'application_status_updated':\n      return 'success';\n    case 'warning':\n      return 'warning';\n    case 'error':\n    case 'application_comment':\n      return 'error';\n    default:\n      return 'info';\n  }\n};\n\n// Preload sounds to avoid playback issues\nconst preloadedSounds: { [key: string]: HTMLAudioElement } = {};\n\n// List of sounds to preload on app initialization\nconst soundsToPreload = [\n  '/sounds/clean-notification.mp3',\n  '/sounds/notification-simple.mp3',\n  '/sounds/triple-tone.mp3',\n  '/sounds/beep.mp3',\n  '/sounds/alert.mp3',\n  '/sounds/approval.mp3'\n];\n\n// Preload sounds on app initialization\nif (typeof window !== 'undefined') {\n  // Function to preload a sound with retry\n  const preloadSound = (soundPath: string, retryCount = 0): void => {\n    try {\n      const audio = new Audio(soundPath);\n      audio.volume = 0.2; // Set low volume by default\n      \n      // Set up event listeners\n      audio.addEventListener('canplaythrough', () => {\n        preloadedSounds[soundPath] = audio;\n        console.log(`Successfully preloaded sound: ${soundPath}`);\n      });\n      \n      audio.addEventListener('error', (err) => {\n        console.warn(`Error preloading sound ${soundPath}:`, err);\n        if (retryCount < 2) {\n          // Retry loading after a short delay\n          setTimeout(() => preloadSound(soundPath, retryCount + 1), 1000);\n        }\n      });\n      \n      // Start loading the audio file\n      audio.load();\n    } catch (err) {\n      console.error(`Failed to preload sound ${soundPath}:`, err);\n    }\n  };\n  \n  // Preload all sounds\n  soundsToPreload.forEach(soundPath => preloadSound(soundPath));\n}\n\n// Add a global listener for user interaction to enable audio\nif (typeof window !== 'undefined' && !document.documentElement.hasAttribute('data-listeners-added')) {\n  document.documentElement.setAttribute('data-listeners-added', 'true');\n  \n  const userInteractionEvents = ['click', 'touchstart', 'keydown'];\n  \n  const handleUserInteraction = () => {\n    document.documentElement.setAttribute('data-user-interacted', 'true');\n    \n    // Remove listeners after first interaction\n    userInteractionEvents.forEach(event => {\n      document.removeEventListener(event, handleUserInteraction);\n    });\n    \n    // Play a silent sound to unlock audio on iOS\n    try {\n      const silentSound = new Audio();\n      silentSound.volume = 0.01;\n      silentSound.play().catch(() => {/* Ignore errors */});\n    } catch (e) {\n      // Ignore errors\n    }\n  };\n  \n  // Add listeners for all interaction types\n  userInteractionEvents.forEach(event => {\n    document.addEventListener(event, handleUserInteraction);\n  });\n  \n  console.log('User interaction listeners added for sound enablement');\n}\n\ninterface NotificationPopupProps {\n  title: string;\n  message: string;\n  type?: 'info' | 'success' | 'warning' | 'error' | string;\n  duration?: number; // Duración en milisegundos\n  onClose?: () => void;\n  playSound?: boolean;\n  soundType?: 'notification' | 'alert' | 'approval'; // Diferentes tipos de sonido\n  customSound?: string; // Ruta personalizada para el sonido\n  centerScreen?: boolean; // Opción para centrar en la pantalla\n  relatedItemId?: string; // ID del elemento relacionado (como una aplicación)\n}\n\nconst NotificationPopup: React.FC<NotificationPopupProps> = ({\n  title,\n  message,\n  type = 'info',\n  duration = 5000, // Por defecto, 5 segundos\n  onClose,\n  playSound = true,\n  soundType = 'notification',\n  customSound,\n  centerScreen = false,\n  relatedItemId\n}) => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [exiting, setExiting] = useState(false);\n  const [soundPlayed, setSoundPlayed] = useState(false);\n\n  // Define closeNotification function before it's used in useEffect\n  const closeNotification = () => {\n    setExiting(true);\n    // Agregar un pequeño retraso para la animación de salida\n    setTimeout(() => {\n      setIsVisible(false);\n      if (onClose) onClose();\n    }, 300);\n  };\n\n  // Configurar el auto-cierre\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        closeNotification();\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n  }, [duration]);\n\n  // Reproducir sonido de notificación una sola vez\n  useEffect(() => {\n    if (playSound && !soundPlayed) {\n      // Prevent playing the sound more than once for the same notification\n      setSoundPlayed(true);\n      \n      // Intentar reproducir el sonido con diferentes enfoques\n      playNotificationSound();\n    }\n  }, [playSound, customSound, soundType, soundPlayed]);\n\n  const playNotificationSound = () => {\n    try {\n      // Priority list of sounds to try - primary options first\n      const soundOptions = [\n        customSound || '/sounds/clean-notification.mp3', // New reliable sound\n        '/sounds/notification-simple.mp3', // Simple backup sound\n        '/sounds/triple-tone.mp3',\n        '/sounds/beep.mp3',\n        '/sounds/alert.mp3'\n      ];\n\n      // Function to play a sound with proper error handling\n      const tryPlaySound = (soundPath: string): Promise<void> => {\n        return new Promise((resolve, reject) => {\n          try {\n            // Try using a preloaded sound first\n            if (preloadedSounds[soundPath]) {\n              const preloadedAudio = preloadedSounds[soundPath];\n              preloadedAudio.currentTime = 0; // Reset playback position\n              \n              preloadedAudio.play()\n                .then(() => {\n                  console.log(`Successfully played preloaded sound: ${soundPath}`);\n                  resolve();\n                })\n                .catch(err => {\n                  console.warn(`Failed to play preloaded sound ${soundPath}:`, err);\n                  reject(err);\n                });\n              return;\n            }\n            \n            // Fallback to creating a new audio instance\n            const audio = new Audio(soundPath);\n            audio.volume = 0.2; // Subtle volume\n            \n            // Setup success handlers\n            audio.oncanplaythrough = () => {\n              audio.play()\n                .then(() => {\n                  console.log(`Successfully played sound: ${soundPath}`);\n                  resolve();\n                })\n                .catch(err => {\n                  console.warn(`Failed to play sound ${soundPath}:`, err);\n                  reject(err);\n                });\n            };\n            \n            // Setup error handlers\n            audio.onerror = (err) => {\n              console.warn(`Error loading sound ${soundPath}:`, err);\n              reject(err);\n            };\n            \n            // Start loading the audio\n            audio.load();\n            \n            // Set timeout to avoid hanging\n            setTimeout(() => {\n              reject(new Error(`Timeout loading sound ${soundPath}`));\n            }, 1500);\n          } catch (err) {\n            console.warn(`Exception while trying to play ${soundPath}:`, err);\n            reject(err);\n          }\n        });\n      };\n\n      // Try each sound in sequence until one works\n      const tryNextSound = (index: number) => {\n        if (index >= soundOptions.length) {\n          console.error('All sound playback attempts failed');\n          return;\n        }\n        \n        const soundPath = soundOptions[index];\n        \n        tryPlaySound(soundPath)\n          .catch(() => {\n            // If this sound failed, try the next one\n            tryNextSound(index + 1);\n          });\n      };\n      \n      // Start with the first sound\n      tryNextSound(0);\n        \n    } catch (error) {\n      console.error('Failed to play notification sound:', error);\n    }\n  };\n\n  if (!isVisible) return null;\n\n  // Mapeo de estilos según el tipo\n  const typeStyles = {\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-800',\n      title: 'text-blue-900'\n    },\n    success: {\n      bg: 'bg-green-50',\n      border: 'border-green-200',\n      text: 'text-green-800',\n      title: 'text-green-900'\n    },\n    warning: {\n      bg: 'bg-yellow-50',\n      border: 'border-yellow-200',\n      text: 'text-yellow-800',\n      title: 'text-yellow-900'\n    },\n    error: {\n      bg: 'bg-red-50',\n      border: 'border-red-200',\n      text: 'text-red-800',\n      title: 'text-red-900'\n    }\n  };\n\n  // Map complex notification types to the basic ones\n  const basicType = mapNotificationTypeToBasic(type);\n  \n  // Use the mapped type to get styles\n  const styles = typeStyles[basicType] || typeStyles.info;\n\n  // Estilos de posición según si debe estar centrado o no\n  const positionClasses = centerScreen \n    ? \"fixed inset-0 flex items-center justify-center z-50\"\n    : \"fixed top-5 right-5 z-50 max-w-md w-full\";\n\n  // Ancho según si debe estar centrado o no\n  const widthClasses = centerScreen \n    ? \"w-full max-w-xl mx-4\" // Más ancho cuando está centrado\n    : \"w-full\";\n\n  // Determinar si el mensaje es HTML, renderizarlo de manera segura\n  const isHtmlMessage = message && message.trim().startsWith('<');\n\n  // Renderizar el contenido de la notificación\n  const renderContent = () => {\n    if (!isHtmlMessage) {\n      return <div className=\"mt-1 text-sm\">{message}</div>;\n    }\n\n    // Si el mensaje es HTML, creamos un div contenedor con styles\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(message, 'text/html');\n    const body = doc.body;\n\n    // Aplicar clase de estilo al primer div si es una grid\n    const firstDiv = body.querySelector('div');\n    if (firstDiv && firstDiv.className.includes('grid')) {\n      firstDiv.className = 'grid grid-cols-2 gap-2 text-sm mt-2';\n    }\n\n    // Dar estilos a los elementos semibold\n    const semiboldElements = body.querySelectorAll('.font-semibold');\n    semiboldElements.forEach(el => {\n      el.className = 'font-semibold text-gray-700';\n    });\n\n    // Buscar el tipo de aplicación para aplicar estilos específicos\n    const typeLabel = Array.from(body.querySelectorAll('.text-gray-900')).find(el => \n      el.previousElementSibling?.textContent?.includes('Tipo:')\n    );\n    \n    if (typeLabel) {\n      const applicationType = typeLabel.textContent?.trim().toLowerCase();\n      \n      // Aplicar estilos específicos según el tipo de aplicación\n      if (applicationType) {\n        // Personalizar los elementos según el tipo\n        if (applicationType.includes('planes seleccionados')) {\n          // Destacar monto de pago mensual para planes seleccionados\n          const monthlyPaymentElem = Array.from(body.querySelectorAll('.text-gray-900')).find(el => \n            el.previousElementSibling?.textContent?.includes('Pago mensual:')\n          );\n          if (monthlyPaymentElem) {\n            monthlyPaymentElem.className = 'text-gray-900 font-bold text-blue-600';\n          }\n        }\n        else if (applicationType.includes('solicitud de efectivo')) {\n          // Destacar monto solicitado para solicitudes de efectivo\n          const amountElem = Array.from(body.querySelectorAll('.text-gray-900')).find(el => \n            el.previousElementSibling?.textContent?.includes('Monto solicitado:')\n          );\n          if (amountElem) {\n            amountElem.className = 'text-gray-900 font-bold text-green-600';\n          }\n        }\n        else if (applicationType.includes('simulación de producto')) {\n          // Destacar monto para simulaciones de producto\n          const amountElem = Array.from(body.querySelectorAll('.text-gray-900')).find(el => \n            el.previousElementSibling?.textContent?.includes('Monto:')\n          );\n          if (amountElem) {\n            amountElem.className = 'text-gray-900 font-bold text-purple-600';\n          }\n        }\n        else if (applicationType.includes('préstamo')) {\n          // Destacar monto para préstamos\n          const amountElem = Array.from(body.querySelectorAll('.text-gray-900')).find(el => \n            el.previousElementSibling?.textContent?.includes('Monto del préstamo:')\n          );\n          if (amountElem) {\n            amountElem.className = 'text-gray-900 font-bold text-orange-600';\n          }\n        }\n      }\n    }\n\n    // Estilizar los valores\n    const valueElements = Array.from(body.querySelectorAll('div')).filter(el => \n      el.previousElementSibling && el.previousElementSibling.className.includes('font-semibold')\n    );\n    valueElements.forEach(el => {\n      // Si no tiene una clase personalizada ya asignada, aplicar la predeterminada\n      if (!el.className.includes('font-bold')) {\n        el.className = 'text-gray-900';\n      }\n    });\n\n    return (\n      <div \n        className=\"mt-2 notification-content prose prose-sm max-w-none\" \n        dangerouslySetInnerHTML={{ __html: body.innerHTML }}\n      />\n    );\n  };\n\n  return (\n    <div className={positionClasses}>\n      <div\n        className={`${styles.bg} ${styles.border} ${styles.text} rounded-lg shadow-lg p-4 border ${\n          exiting ? 'animate-popup-exit' : 'animate-popup-entry'\n        } ${widthClasses}`}\n      >\n        <div className=\"flex justify-between items-start\">\n          <div className=\"flex-1\">\n            <h3 className={`text-base font-semibold ${styles.title}`}>{title}</h3>\n            {renderContent()}\n          </div>\n          <button\n            onClick={closeNotification}\n            className=\"flex-shrink-0 ml-2 text-gray-400 hover:text-gray-500 focus:outline-none\"\n          >\n            <XMarkIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationPopup; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}