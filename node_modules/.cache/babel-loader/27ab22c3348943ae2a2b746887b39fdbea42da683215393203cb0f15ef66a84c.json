{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{USER_ROLES}from'../utils/constants/roles';// Tipos\nimport{jsx as _jsx}from\"react/jsx-runtime\";// Constantes para almacenamiento\nconst STORAGE_KEY_USER='crm_user';const STORAGE_KEY_TOKEN='crm_token';const STORAGE_KEY_TOKEN_EXP='crm_token_exp';const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[session,setSession]=useState(null);const[loading,setLoading]=useState(true);// Cambiado a true para evitar parpadeo\n// Generar un token único para la sesión (simplificado)\nconst generateToken=()=>{const randomPart=Math.random().toString(36).substring(2,15);const timestampPart=Date.now().toString(36);return`${randomPart}${timestampPart}`;};// Establecer el token con tiempo de expiración (12 horas por defecto)\nconst setSessionToken=function(token){let expireHours=arguments.length>1&&arguments[1]!==undefined?arguments[1]:12;const expiration=new Date();expiration.setHours(expiration.getHours()+expireHours);localStorage.setItem(STORAGE_KEY_TOKEN,token);localStorage.setItem(STORAGE_KEY_TOKEN_EXP,expiration.toISOString());};// Verificar si el token ha expirado\nconst isTokenExpired=()=>{const expirationStr=localStorage.getItem(STORAGE_KEY_TOKEN_EXP);if(!expirationStr)return true;const expiration=new Date(expirationStr);return new Date()>expiration;};// Verificar sesión al iniciar\nuseEffect(()=>{const checkStoredSession=()=>{try{// Primero verificar si el token existe y no ha expirado\nconst token=localStorage.getItem(STORAGE_KEY_TOKEN);if(token&&!isTokenExpired()){// Si el token es válido, recuperar datos del usuario\nconst storedUser=localStorage.getItem(STORAGE_KEY_USER);if(storedUser){setUser(JSON.parse(storedUser));}}else if(token){// Si el token ha expirado, limpiar la sesión\nconsole.log('La sesión ha expirado');localStorage.removeItem(STORAGE_KEY_TOKEN);localStorage.removeItem(STORAGE_KEY_TOKEN_EXP);localStorage.removeItem(STORAGE_KEY_USER);}}catch(error){console.error('Error checking stored session:',error);}finally{setLoading(false);}};checkStoredSession();// Listener para sincronizar múltiples pestañas\nconst handleStorageChange=event=>{if(event.key===STORAGE_KEY_USER){if(!event.newValue){// Usuario se deslogueó en otra pestaña\nsetUser(null);setSession(null);}else{// Usuario se logueó en otra pestaña\nsetUser(JSON.parse(event.newValue));}}};window.addEventListener('storage',handleStorageChange);return()=>{window.removeEventListener('storage',handleStorageChange);};},[]);const signIn=async(email,password)=>{try{setLoading(true);// Simulación de autenticación\nif(email==='admin@fincentiva.com'&&password==='admin123'){const mockUser={id:'1',email:'admin@fincentiva.com',name:'Administrador',role:'SUPERADMIN'};// Generar y guardar token de sesión\nconst token=generateToken();setSessionToken(token);// Guardar datos del usuario\nlocalStorage.setItem(STORAGE_KEY_USER,JSON.stringify(mockUser));setUser(mockUser);return{data:{user:mockUser},error:null};}return{data:null,error:'Credenciales inválidas'};}catch(error){console.error('Error signing in:',error);return{error,data:null};}finally{setLoading(false);}};const signInWithCode=async(accessCode,userType)=>{try{setLoading(true);// Consultar la base de datos para verificar el access_code\nlet queryUrl='http://localhost:3100/query';let queryBody={};if(userType===USER_ROLES.ADVISOR){queryBody={query:`SELECT * FROM advisors WHERE access_code = '${accessCode}' LIMIT 1`};}else if(userType===USER_ROLES.COMPANY_ADMIN){queryBody={query:`SELECT * FROM company_admins WHERE access_code = '${accessCode}' LIMIT 1`};}else{return{data:null,error:'Tipo de usuario no válido'};}const response=await fetch(queryUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(queryBody)});const result=await response.json();if(result.error){console.error('Database error:',result.error);return{data:null,error:'Error de base de datos'};}if(result.data&&result.data.length>0){const userData=result.data[0];const userInfo={id:userData.id,email:userData.email,name:userData.name,role:userType,entityId:userType===USER_ROLES.COMPANY_ADMIN?userData.company_id:userData.id};// Generar y guardar token de sesión\nconst token=generateToken();setSessionToken(token);// Guardar datos del usuario\nlocalStorage.setItem(STORAGE_KEY_USER,JSON.stringify(userInfo));setUser(userInfo);return{data:{user:userInfo},error:null};}return{data:null,error:'Código de acceso inválido'};}catch(error){console.error('Error signing in with code:',error);// Ensure returned error is always a string\nreturn{error:error instanceof Error?error.message:'Error al iniciar sesión',data:null};}finally{setLoading(false);}};const signOut=async()=>{try{// Eliminar todos los datos de sesión\nlocalStorage.removeItem(STORAGE_KEY_USER);localStorage.removeItem(STORAGE_KEY_TOKEN);localStorage.removeItem(STORAGE_KEY_TOKEN_EXP);setUser(null);setSession(null);}catch(error){console.error('Error signing out:',error);}};const value={user,session,loading,signIn,signInWithCode,signOut,setUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","USER_ROLES","jsx","_jsx","STORAGE_KEY_USER","STORAGE_KEY_TOKEN","STORAGE_KEY_TOKEN_EXP","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","session","setSession","loading","setLoading","generateToken","randomPart","Math","random","toString","substring","timestampPart","Date","now","setSessionToken","token","expireHours","arguments","length","expiration","setHours","getHours","localStorage","setItem","toISOString","isTokenExpired","expirationStr","getItem","checkStoredSession","storedUser","JSON","parse","console","log","removeItem","error","handleStorageChange","event","key","newValue","window","addEventListener","removeEventListener","signIn","email","password","mockUser","id","name","role","stringify","data","signInWithCode","accessCode","userType","queryUrl","queryBody","ADVISOR","query","COMPANY_ADMIN","response","fetch","method","headers","body","result","json","userData","userInfo","entityId","company_id","message","signOut","value","Provider"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Session } from '@supabase/supabase-js';\nimport { USER_ROLES } from '../utils/constants/roles';\n\n// Tipos\ninterface User {\n  id: string;\n  email: string;\n  name?: string;\n  role: string;\n  entityId?: string; // ID del asesor o empresa asociada\n}\n\ninterface AuthContextType {\n  user: User | null;\n  session: Session | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<{\n    error: any | null;\n    data: any | null;\n  }>;\n  signInWithCode: (accessCode: string, userType: string) => Promise<{\n    error: any | null;\n    data: any | null;\n  }>;\n  signOut: () => Promise<void>;\n  setUser: React.Dispatch<React.SetStateAction<User | null>>;\n}\n\n// Constantes para almacenamiento\nconst STORAGE_KEY_USER = 'crm_user';\nconst STORAGE_KEY_TOKEN = 'crm_token';\nconst STORAGE_KEY_TOKEN_EXP = 'crm_token_exp';\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true); // Cambiado a true para evitar parpadeo\n\n  // Generar un token único para la sesión (simplificado)\n  const generateToken = (): string => {\n    const randomPart = Math.random().toString(36).substring(2, 15);\n    const timestampPart = Date.now().toString(36);\n    return `${randomPart}${timestampPart}`;\n  };\n\n  // Establecer el token con tiempo de expiración (12 horas por defecto)\n  const setSessionToken = (token: string, expireHours: number = 12) => {\n    const expiration = new Date();\n    expiration.setHours(expiration.getHours() + expireHours);\n    \n    localStorage.setItem(STORAGE_KEY_TOKEN, token);\n    localStorage.setItem(STORAGE_KEY_TOKEN_EXP, expiration.toISOString());\n  };\n\n  // Verificar si el token ha expirado\n  const isTokenExpired = (): boolean => {\n    const expirationStr = localStorage.getItem(STORAGE_KEY_TOKEN_EXP);\n    if (!expirationStr) return true;\n    \n    const expiration = new Date(expirationStr);\n    return new Date() > expiration;\n  };\n\n  // Verificar sesión al iniciar\n  useEffect(() => {\n    const checkStoredSession = () => {\n      try {\n        // Primero verificar si el token existe y no ha expirado\n        const token = localStorage.getItem(STORAGE_KEY_TOKEN);\n        \n        if (token && !isTokenExpired()) {\n          // Si el token es válido, recuperar datos del usuario\n          const storedUser = localStorage.getItem(STORAGE_KEY_USER);\n          if (storedUser) {\n            setUser(JSON.parse(storedUser));\n          }\n        } else if (token) {\n          // Si el token ha expirado, limpiar la sesión\n          console.log('La sesión ha expirado');\n          localStorage.removeItem(STORAGE_KEY_TOKEN);\n          localStorage.removeItem(STORAGE_KEY_TOKEN_EXP);\n          localStorage.removeItem(STORAGE_KEY_USER);\n        }\n      } catch (error) {\n        console.error('Error checking stored session:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkStoredSession();\n\n    // Listener para sincronizar múltiples pestañas\n    const handleStorageChange = (event: StorageEvent) => {\n      if (event.key === STORAGE_KEY_USER) {\n        if (!event.newValue) {\n          // Usuario se deslogueó en otra pestaña\n          setUser(null);\n          setSession(null);\n        } else {\n          // Usuario se logueó en otra pestaña\n          setUser(JSON.parse(event.newValue));\n        }\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    try {\n      setLoading(true);\n      \n      // Simulación de autenticación\n      if (email === 'admin@fincentiva.com' && password === 'admin123') {\n        const mockUser: User = {\n          id: '1',\n          email: 'admin@fincentiva.com',\n          name: 'Administrador',\n          role: 'SUPERADMIN',\n        };\n        \n        // Generar y guardar token de sesión\n        const token = generateToken();\n        setSessionToken(token);\n        \n        // Guardar datos del usuario\n        localStorage.setItem(STORAGE_KEY_USER, JSON.stringify(mockUser));\n        setUser(mockUser);\n        \n        return { data: { user: mockUser }, error: null };\n      }\n      \n      return { data: null, error: 'Credenciales inválidas' };\n    } catch (error) {\n      console.error('Error signing in:', error);\n      return { error, data: null };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signInWithCode = async (accessCode: string, userType: string) => {\n    try {\n      setLoading(true);\n      \n      // Consultar la base de datos para verificar el access_code\n      let queryUrl = 'http://localhost:3100/query';\n      let queryBody = {};\n      \n      if (userType === USER_ROLES.ADVISOR) {\n        queryBody = {\n          query: `SELECT * FROM advisors WHERE access_code = '${accessCode}' LIMIT 1`\n        };\n      } else if (userType === USER_ROLES.COMPANY_ADMIN) {\n        queryBody = {\n          query: `SELECT * FROM company_admins WHERE access_code = '${accessCode}' LIMIT 1`\n        };\n      } else {\n        return { data: null, error: 'Tipo de usuario no válido' };\n      }\n      \n      const response = await fetch(queryUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(queryBody),\n      });\n      \n      const result = await response.json();\n      \n      if (result.error) {\n        console.error('Database error:', result.error);\n        return { data: null, error: 'Error de base de datos' };\n      }\n      \n      if (result.data && result.data.length > 0) {\n        const userData = result.data[0];\n        const userInfo: User = {\n          id: userData.id,\n          email: userData.email,\n          name: userData.name,\n          role: userType,\n          entityId: userType === USER_ROLES.COMPANY_ADMIN ? userData.company_id : userData.id,\n        };\n        \n        // Generar y guardar token de sesión\n        const token = generateToken();\n        setSessionToken(token);\n        \n        // Guardar datos del usuario\n        localStorage.setItem(STORAGE_KEY_USER, JSON.stringify(userInfo));\n        setUser(userInfo);\n        \n        return { data: { user: userInfo }, error: null };\n      }\n      \n      return { data: null, error: 'Código de acceso inválido' };\n    } catch (error) {\n      console.error('Error signing in with code:', error);\n      // Ensure returned error is always a string\n      return { \n        error: error instanceof Error ? error.message : 'Error al iniciar sesión', \n        data: null \n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      // Eliminar todos los datos de sesión\n      localStorage.removeItem(STORAGE_KEY_USER);\n      localStorage.removeItem(STORAGE_KEY_TOKEN);\n      localStorage.removeItem(STORAGE_KEY_TOKEN_EXP);\n      setUser(null);\n      setSession(null);\n    } catch (error) {\n      console.error('Error signing out:', error);\n    }\n  };\n\n  const value = {\n    user,\n    session,\n    loading,\n    signIn,\n    signInWithCode,\n    signOut,\n    setUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}