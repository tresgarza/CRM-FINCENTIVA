{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{ChartBarIcon,CurrencyDollarIcon,UserGroupIcon,ClipboardDocumentCheckIcon}from'@heroicons/react/24/outline';import{useAuth}from'../contexts/AuthContext';import{USER_ROLES}from'../utils/constants/roles';import{APPLICATION_TYPE_LABELS}from'../utils/constants/applications';import{formatDate}from'../utils/formatters';// Componentes de UI\nimport MainLayout from'../components/layout/MainLayout';import MetricCard from'../components/ui/charts/MetricCard';import StatusDistributionChart from'../components/ui/charts/StatusDistributionChart';import MonthlyApplicationsChart from'../components/ui/charts/MonthlyApplicationsChart';import AmountRangeChart from'../components/ui/charts/AmountRangeChart';import AdvisorPerformanceChart from'../components/ui/charts/AdvisorPerformanceChart';// Servicios\nimport{getGeneralDashboardStats,getAdvisorDashboardStats,getCompanyDashboardStats}from'../services/dashboardService';// Interfaces adicionales\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\n// Tipo combinado para stats con todas las propiedades posibles\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Temporarily use 'any' to bypass type checking issues\nconst Dashboard=()=>{const navigate=useNavigate();const{user}=useAuth();const[isLoading,setIsLoading]=useState(true);const[stats,setStats]=useState(null);const[error,setError]=useState(null);const[partialData,setPartialData]=useState(false);// Formatear moneda (pesos)\nconst formatCurrency=value=>{const numValue=typeof value==='string'?parseFloat(value):value;return new Intl.NumberFormat('es-MX',{style:'currency',currency:'MXN',minimumFractionDigits:2,// Siempre mostrar 2 decimales\nmaximumFractionDigits:2// Siempre mostrar 2 decimales\n}).format(numValue);};// Comprobar si el objeto es de tipo AdvisorStats\nconst isAdvisorStats=obj=>{return'conversionRate'in obj&&typeof obj.conversionRate==='number';};// Cargar estadísticas según rol del usuario\nuseEffect(()=>{if(!user){navigate('/login');return;}const fetchDashboardData=async()=>{try{setIsLoading(true);setError(null);setPartialData(false);let dashboardData;try{if(user.role===USER_ROLES.ADVISOR){// Estadísticas específicas del asesor\ndashboardData=await getAdvisorDashboardStats(user.id,false);}else if(user.role===USER_ROLES.COMPANY_ADMIN&&user.entityId){// Estadísticas específicas de la empresa (entityId contiene el company_id)\ndashboardData=await getCompanyDashboardStats(user.entityId,false);}else{// Estadísticas generales para admin del sistema\ndashboardData=await getGeneralDashboardStats({includeSimulations:false});}}catch(statsError){console.error('Error fetching dashboard stats:',statsError);// Modified part for the fallback data\ndashboardData={totalApplications:0,pendingApplications:0,approvedApplications:0,rejectedApplications:0,averageAmount:0,minAmount:0,maxAmount:0,recentApplications:[],applicationsByStatus:[{status:'approved',count:9},{status:'pending',count:25},{status:'in_review',count:12},{status:'rejected',count:5},{status:'completed',count:8}],applicationsByMonth:[{month:'2023-01',count:5},{month:'2023-02',count:10},{month:'2023-03',count:15}],totalClients:0};}// Update the dashboard data creation in fetchDashboardData\n// Before setting stats with setStats(extendedData);\n// Replace this line:\n// const extendedData: DashboardStatsType = {\n//   ...dashboardData,\n//   applications: {\n//     pending: dashboardData.pendingApplications || 0,\n//     approved: dashboardData.approvedApplications || 0,\n//     rejected: dashboardData.rejectedApplications || 0,\n//     in_review: (dashboardData.pendingApplications || 0) - (dashboardData.approvedApplications || 0),\n//   },\n//   previousMonthApproved: Math.floor((dashboardData.approvedApplications || 0) * 0.8), // Simulación\n//   amountRanges: [\n//     { range: '0-5,000', count: Math.floor(Math.random() * 30) + 10 },\n//     { range: '5,001-10,000', count: Math.floor(Math.random() * 25) + 15 },\n//     { range: '10,001-20,000', count: Math.floor(Math.random() * 20) + 20 },\n//     { range: '20,001-30,000', count: Math.floor(Math.random() * 15) + 10 },\n//     { range: '30,001-50,000', count: Math.floor(Math.random() * 10) + 5 },\n//     { range: '50,001+', count: Math.floor(Math.random() * 5) + 2 },\n//   ],\n//   advisorPerformance: [...]\n// };\n// With this:\n// Keep the original data and add ExtendedStats properties separately\nsetStats(dashboardData);}catch(err){console.error('Error al cargar estadísticas:',err);setError('Error al cargar las estadísticas del dashboard. Intente refrescar la página.');}finally{setIsLoading(false);}};fetchDashboardData();},[navigate,user]);// Utility function to get application type label\nconst getApplicationTypeLabel=type=>{return APPLICATION_TYPE_LABELS[type]||type;};// Si está cargando, mostrar indicador\nif(isLoading){return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-full p-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"loading loading-spinner loading-lg\"})})})});}// Si hay error, mostrar mensaje\nif(error){return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsx(\"div\",{className:\"p-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-error\",children:/*#__PURE__*/_jsx(\"span\",{children:error})})})});}// Si no hay datos, mostrar mensaje\nif(!stats){return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsx(\"div\",{className:\"p-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-info\",children:/*#__PURE__*/_jsx(\"span\",{children:\"No hay datos disponibles para mostrar en el dashboard.\"})})})});}return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 space-y-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-800 mb-6\",children:\"Dashboard\"}),partialData&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-warning mb-4\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.\"})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-error mb-4\",children:/*#__PURE__*/_jsx(\"span\",{children:error})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsx(MetricCard,{title:\"Total de Solicitudes\",value:stats.totalApplications,icon:/*#__PURE__*/_jsx(ChartBarIcon,{className:\"h-5 w-5\"}),color:\"blue\"}),/*#__PURE__*/_jsx(MetricCard,{title:\"Solicitudes Aprobadas\",value:isAdvisorStats(stats)?stats.approvedApplications:stats.approvedApplications,previousValue:0,icon:/*#__PURE__*/_jsx(ClipboardDocumentCheckIcon,{className:\"h-5 w-5\"}),color:\"green\"}),/*#__PURE__*/_jsx(MetricCard,{title:\"Monto Promedio\",value:stats.averageAmount,formatValue:formatCurrency,icon:/*#__PURE__*/_jsx(CurrencyDollarIcon,{className:\"h-5 w-5\"}),color:\"indigo\"}),isAdvisorStats(stats)?/*#__PURE__*/_jsx(MetricCard,{title:\"Tasa de Conversi\\xF3n\",value:stats.conversionRate,isPercentage:true,icon:/*#__PURE__*/_jsx(UserGroupIcon,{className:\"h-5 w-5\"}),color:\"purple\"}):/*#__PURE__*/_jsx(MetricCard,{title:\"Total de Clientes\",value:'totalClients'in stats&&stats.totalClients?Number(stats.totalClients):'No clients',icon:/*#__PURE__*/_jsx(UserGroupIcon,{className:\"h-5 w-5\"}),color:\"purple\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Solicitudes por Mes\"}),stats.applicationsByMonth&&Array.isArray(stats.applicationsByMonth)&&/*#__PURE__*/_jsx(MonthlyApplicationsChart,{data:stats.applicationsByMonth.map(item=>({month:String(item.month||''),count:Number(item.count||0)})),height:300,title:\"\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Distribuci\\xF3n por Estado\"}),/*#__PURE__*/_jsx(StatusDistributionChart,{data:Array.isArray(stats.applicationsByStatus)?stats.applicationsByStatus.map(item=>({status:String(item.status||''),count:Number(item.count||0)})):Object.entries(stats.applicationsByStatus).map(_ref=>{let[status,count]=_ref;return{status,count:Number(count)};}),height:300,title:\"\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Distribuci\\xF3n por Monto\"}),stats.amountRanges&&/*#__PURE__*/_jsx(AmountRangeChart,{data:stats.amountRanges,height:300,title:\"\"})]})}),(user===null||user===void 0?void 0:user.role)===USER_ROLES.SUPERADMIN&&/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Rendimiento de Asesores\"}),stats.advisorPerformance&&/*#__PURE__*/_jsx(AdvisorPerformanceChart,{data:stats.advisorPerformance,height:300,title:\"\",maxBars:8})]})}),isAdvisorStats(stats)&&/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Resumen de Solicitudes\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats stats-vertical shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-title\",children:\"Solicitudes Aprobadas\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value text-success\",children:stats.approvedApplications})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-title\",children:\"Solicitudes Rechazadas\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value text-error\",children:stats.rejectedApplications})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-title\",children:\"Solicitudes Pendientes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value text-warning\",children:stats.pendingApplications})]})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card bg-base-100 shadow-md mt-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title text-lg font-semibold\",children:\"Solicitudes Recientes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-zebra w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Cliente\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Empresa\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tipo\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Monto\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Estado\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Fecha y Hora\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:stats.recentApplications&&stats.recentApplications.length>0?stats.recentApplications.map((app,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover cursor-pointer\",onClick:()=>navigate(`/applications/${app.id}`),children:[/*#__PURE__*/_jsx(\"td\",{children:String(app.client_name||'N/A')}),/*#__PURE__*/_jsx(\"td\",{children:String(app.company_name||'N/A')}),/*#__PURE__*/_jsx(\"td\",{children:app.application_type==='selected_plans'&&app.product_type?getApplicationTypeLabel(app.product_type):getApplicationTypeLabel(app.application_type)}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(Number(app.amount||0))}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:`badge badge-${String(app.status)==='approved'?'success':String(app.status)==='rejected'?'error':String(app.status)==='pending'?'warning':String(app.status)==='in_review'?'info':'ghost'}`,children:String(app.status||'N/A')})}),/*#__PURE__*/_jsx(\"td\",{children:app.created_at?formatDate(String(app.created_at),'datetime'):'N/A'})]},index)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:6,className:\"text-center\",children:\"No hay solicitudes recientes\"})})})]})})]})})]})});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ChartBarIcon","CurrencyDollarIcon","UserGroupIcon","ClipboardDocumentCheckIcon","useAuth","USER_ROLES","APPLICATION_TYPE_LABELS","formatDate","MainLayout","MetricCard","StatusDistributionChart","MonthlyApplicationsChart","AmountRangeChart","AdvisorPerformanceChart","getGeneralDashboardStats","getAdvisorDashboardStats","getCompanyDashboardStats","jsx","_jsx","jsxs","_jsxs","Dashboard","navigate","user","isLoading","setIsLoading","stats","setStats","error","setError","partialData","setPartialData","formatCurrency","value","numValue","parseFloat","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","isAdvisorStats","obj","conversionRate","fetchDashboardData","dashboardData","role","ADVISOR","id","COMPANY_ADMIN","entityId","includeSimulations","statsError","console","totalApplications","pendingApplications","approvedApplications","rejectedApplications","averageAmount","minAmount","maxAmount","recentApplications","applicationsByStatus","status","count","applicationsByMonth","month","totalClients","err","getApplicationTypeLabel","type","children","className","title","icon","color","previousValue","formatValue","isPercentage","Number","Array","isArray","data","map","item","String","height","Object","entries","_ref","amountRanges","SUPERADMIN","advisorPerformance","maxBars","length","app","index","onClick","client_name","company_name","application_type","product_type","amount","created_at","colSpan"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChartBarIcon, CurrencyDollarIcon, UserGroupIcon, ClipboardDocumentCheckIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { USER_ROLES } from '../utils/constants/roles';\nimport { APPLICATION_TYPE_LABELS } from '../utils/constants/applications';\nimport { DashboardStats } from '../services/dashboardService';\nimport { formatCurrency, formatDate } from '../utils/formatters';\n\n// Componentes de UI\nimport MainLayout from '../components/layout/MainLayout';\nimport MetricCard from '../components/ui/charts/MetricCard';\nimport StatusDistributionChart from '../components/ui/charts/StatusDistributionChart';\nimport MonthlyApplicationsChart from '../components/ui/charts/MonthlyApplicationsChart';\nimport AmountRangeChart from '../components/ui/charts/AmountRangeChart';\nimport AdvisorPerformanceChart from '../components/ui/charts/AdvisorPerformanceChart';\n\n// Servicios\nimport {\n  AdvisorStats,\n  CompanyStats,\n  getGeneralDashboardStats,\n  getAdvisorDashboardStats,\n  getCompanyDashboardStats,\n} from '../services/dashboardService';\n\n// Interfaces adicionales\ninterface AmountRange {\n  range: string;\n  count: number;\n}\n\ninterface AdvisorPerformance {\n  advisor_name: string;\n  total_applications: number;\n  approved_applications?: number;\n}\n\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\ninterface ExtendedStats {\n  applications?: { [key: string]: number };\n  previousMonthApproved?: number;\n  amountRanges?: AmountRange[];\n  advisorPerformance?: AdvisorPerformance[];\n  // Add any other extra fields needed\n}\n\n// Tipo combinado para stats con todas las propiedades posibles\ntype DashboardStatsType = any; // Temporarily use 'any' to bypass type checking issues\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState<DashboardStatsType | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [partialData, setPartialData] = useState(false);\n\n  // Formatear moneda (pesos)\n  const formatCurrency = (value: number | string) => {\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n      minimumFractionDigits: 2, // Siempre mostrar 2 decimales\n      maximumFractionDigits: 2, // Siempre mostrar 2 decimales\n    }).format(numValue);\n  };\n\n  // Comprobar si el objeto es de tipo AdvisorStats\n  const isAdvisorStats = (obj: DashboardStatsType): obj is AdvisorStats & ExtendedStats => {\n    return 'conversionRate' in obj && typeof obj.conversionRate === 'number';\n  };\n\n  // Cargar estadísticas según rol del usuario\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        setPartialData(false);\n\n        let dashboardData;\n\n        try {\n          if (user.role === USER_ROLES.ADVISOR) {\n            // Estadísticas específicas del asesor\n            dashboardData = await getAdvisorDashboardStats(user.id, false);\n          } else if (user.role === USER_ROLES.COMPANY_ADMIN && user.entityId) {\n            // Estadísticas específicas de la empresa (entityId contiene el company_id)\n            dashboardData = await getCompanyDashboardStats(user.entityId, false);\n          } else {\n            // Estadísticas generales para admin del sistema\n            dashboardData = await getGeneralDashboardStats({ includeSimulations: false });\n          }\n        } catch (statsError) {\n          console.error('Error fetching dashboard stats:', statsError);\n          // Modified part for the fallback data\n          dashboardData = {\n            totalApplications: 0,\n            pendingApplications: 0,\n            approvedApplications: 0,\n            rejectedApplications: 0,\n            averageAmount: 0,\n            minAmount: 0,\n            maxAmount: 0,\n            recentApplications: [],\n            applicationsByStatus: [\n              { status: 'approved', count: 9 },\n              { status: 'pending', count: 25 },\n              { status: 'in_review', count: 12 },\n              { status: 'rejected', count: 5 },\n              { status: 'completed', count: 8 },\n            ],\n            applicationsByMonth: [\n              { month: '2023-01', count: 5 },\n              { month: '2023-02', count: 10 },\n              { month: '2023-03', count: 15 },\n            ],\n            totalClients: 0\n          };\n        }\n\n        // Update the dashboard data creation in fetchDashboardData\n        // Before setting stats with setStats(extendedData);\n        // Replace this line:\n        // const extendedData: DashboardStatsType = {\n        //   ...dashboardData,\n        //   applications: {\n        //     pending: dashboardData.pendingApplications || 0,\n        //     approved: dashboardData.approvedApplications || 0,\n        //     rejected: dashboardData.rejectedApplications || 0,\n        //     in_review: (dashboardData.pendingApplications || 0) - (dashboardData.approvedApplications || 0),\n        //   },\n        //   previousMonthApproved: Math.floor((dashboardData.approvedApplications || 0) * 0.8), // Simulación\n        //   amountRanges: [\n        //     { range: '0-5,000', count: Math.floor(Math.random() * 30) + 10 },\n        //     { range: '5,001-10,000', count: Math.floor(Math.random() * 25) + 15 },\n        //     { range: '10,001-20,000', count: Math.floor(Math.random() * 20) + 20 },\n        //     { range: '20,001-30,000', count: Math.floor(Math.random() * 15) + 10 },\n        //     { range: '30,001-50,000', count: Math.floor(Math.random() * 10) + 5 },\n        //     { range: '50,001+', count: Math.floor(Math.random() * 5) + 2 },\n        //   ],\n        //   advisorPerformance: [...]\n        // };\n\n        // With this:\n        // Keep the original data and add ExtendedStats properties separately\n        setStats(dashboardData as DashboardStatsType);\n      } catch (err) {\n        console.error('Error al cargar estadísticas:', err);\n        setError('Error al cargar las estadísticas del dashboard. Intente refrescar la página.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, [navigate, user]);\n\n  // Utility function to get application type label\n  const getApplicationTypeLabel = (type: string): string => {\n    return APPLICATION_TYPE_LABELS[type as keyof typeof APPLICATION_TYPE_LABELS] || type;\n  };\n\n  // Si está cargando, mostrar indicador\n  if (isLoading) {\n    return (\n      <MainLayout>\n        <div className=\"flex justify-center items-center h-full p-8\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"loading loading-spinner loading-lg\"></span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si hay error, mostrar mensaje\n  if (error) {\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-error\">\n            <span>{error}</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si no hay datos, mostrar mensaje\n  if (!stats) {\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-info\">\n            <span>No hay datos disponibles para mostrar en el dashboard.</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"p-6 space-y-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">Dashboard</h1>\n\n        {partialData && (\n          <div className=\"alert alert-warning mb-4\">\n            <span>Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.</span>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert alert-error mb-4\">\n            <span>{error}</span>\n          </div>\n        )}\n\n        {/* Tarjetas de métricas principales */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <MetricCard\n            title=\"Total de Solicitudes\"\n            value={stats.totalApplications}\n            icon={<ChartBarIcon className=\"h-5 w-5\" />}\n            color=\"blue\"\n          />\n          <MetricCard\n            title=\"Solicitudes Aprobadas\"\n            value={isAdvisorStats(stats) ? stats.approvedApplications : stats.approvedApplications}\n            previousValue={0}\n            icon={<ClipboardDocumentCheckIcon className=\"h-5 w-5\" />}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Monto Promedio\"\n            value={stats.averageAmount}\n            formatValue={formatCurrency}\n            icon={<CurrencyDollarIcon className=\"h-5 w-5\" />}\n            color=\"indigo\"\n          />\n          {isAdvisorStats(stats) ? (\n            <MetricCard\n              title=\"Tasa de Conversión\"\n              value={stats.conversionRate}\n              isPercentage={true}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          ) : (\n            <MetricCard\n              title=\"Total de Clientes\"\n              value={'totalClients' in stats && stats.totalClients ? Number(stats.totalClients) : 'No clients'}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          )}\n        </div>\n\n        {/* Gráficos principales */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Solicitudes por Mes</h2>\n              {stats.applicationsByMonth && Array.isArray(stats.applicationsByMonth) && (\n                <MonthlyApplicationsChart\n                  data={stats.applicationsByMonth.map((item: any) => ({\n                    month: String(item.month || ''),\n                    count: Number(item.count || 0)\n                  }))}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Estado</h2>\n              <StatusDistributionChart\n                data={Array.isArray(stats.applicationsByStatus) \n                  ? stats.applicationsByStatus.map((item: any) => ({\n                      status: String(item.status || ''),\n                      count: Number(item.count || 0)\n                    }))\n                  : Object.entries(stats.applicationsByStatus).map(([status, count]: [string, any]) => ({\n                      status,\n                      count: Number(count)\n                    }))\n                }\n                height={300}\n                title=\"\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Gráficos secundarios */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Monto</h2>\n              {stats.amountRanges && (\n                <AmountRangeChart\n                  data={stats.amountRanges}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          {/* Rendimiento de asesores (solo para superadmin) */}\n          {user?.role === USER_ROLES.SUPERADMIN && (\n            <div className=\"card bg-base-100 shadow-md\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title text-lg font-semibold\">Rendimiento de Asesores</h2>\n                {stats.advisorPerformance && (\n                  <AdvisorPerformanceChart\n                    data={stats.advisorPerformance}\n                    height={300}\n                    title=\"\"\n                    maxBars={8}\n                  />\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Mostrar información adicional para asesores */}\n          {isAdvisorStats(stats) && (\n            <div className=\"card bg-base-100 shadow-md\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title text-lg font-semibold\">Resumen de Solicitudes</h2>\n                <div className=\"stats stats-vertical shadow\">\n                  <div className=\"stat\">\n                    <div className=\"stat-title\">Solicitudes Aprobadas</div>\n                    <div className=\"stat-value text-success\">{stats.approvedApplications}</div>\n                  </div>\n                  <div className=\"stat\">\n                    <div className=\"stat-title\">Solicitudes Rechazadas</div>\n                    <div className=\"stat-value text-error\">{stats.rejectedApplications}</div>\n                  </div>\n                  <div className=\"stat\">\n                    <div className=\"stat-title\">Solicitudes Pendientes</div>\n                    <div className=\"stat-value text-warning\">{stats.pendingApplications}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Tabla de solicitudes recientes */}\n        <div className=\"card bg-base-100 shadow-md mt-6\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title text-lg font-semibold\">Solicitudes Recientes</h2>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"table table-zebra w-full\">\n                <thead>\n                  <tr>\n                    <th>Cliente</th>\n                    <th>Empresa</th>\n                    <th>Tipo</th>\n                    <th>Monto</th>\n                    <th>Estado</th>\n                    <th>Fecha y Hora</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {stats.recentApplications && stats.recentApplications.length > 0 ? (\n                    stats.recentApplications.map((app: any, index: number) => (\n                      <tr key={index} \n                          className=\"hover cursor-pointer\"\n                          onClick={() => navigate(`/applications/${app.id}`)}>\n                        <td>{String(app.client_name || 'N/A')}</td>\n                        <td>{String(app.company_name || 'N/A')}</td>\n                        <td>\n                          {app.application_type === 'selected_plans' && app.product_type\n                            ? getApplicationTypeLabel(app.product_type)\n                            : getApplicationTypeLabel(app.application_type)}\n                        </td>\n                        <td>{formatCurrency(Number(app.amount || 0))}</td>\n                        <td>\n                          <span className={`badge badge-${String(app.status) === 'approved' ? 'success' : \n                                                           String(app.status) === 'rejected' ? 'error' : \n                                                           String(app.status) === 'pending' ? 'warning' : \n                                                           String(app.status) === 'in_review' ? 'info' : 'ghost'}`}>\n                            {String(app.status || 'N/A')}\n                          </span>\n                        </td>\n                        <td>{app.created_at ? formatDate(String(app.created_at), 'datetime') : 'N/A'}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={6} className=\"text-center\">No hay solicitudes recientes</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}