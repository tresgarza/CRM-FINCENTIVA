{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/pages/NewClient.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport MainLayout from '../components/layout/MainLayout';\nimport ClientForm from '../components/clients/ClientForm';\nimport { createClient } from '../services/clientService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Default company ID (Herramental)\nconst DEFAULT_COMPANY_ID = \"70b2aa97-a5b6-4b5e-91db-be8acbd3701a\";\nconst NewClient = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [sectionSubmitting, setSectionSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [draftClient, setDraftClient] = useState(null);\n  const location = useLocation();\n  const handleSubmit = async (data, documents) => {\n    setIsSubmitting(true);\n    setError(null);\n    console.log('Submitting client data:', data);\n    try {\n      // Si el usuario es asesor o admin de empresa, asignar los IDs correspondientes\n      const clientData = {\n        ...data\n      };\n\n      // Handle advisor_id assignment\n      if (user && user.role === 'ADVISOR') {\n        clientData.advisor_id = user.id;\n      }\n\n      // Handle the company_id requirement - only set default if not selected in form\n      if (!clientData.company_id) {\n        console.log('No company selected in form, applying default/user company logic');\n        if (user) {\n          if (user.role === 'COMPANY_ADMIN') {\n            clientData.company_id = user.entityId;\n            console.log('Using company_id from COMPANY_ADMIN user:', clientData.company_id);\n          } else {\n            // For other roles without company selection, use default\n            clientData.company_id = DEFAULT_COMPANY_ID;\n            console.log('Using default company_id for user with role:', user.role);\n          }\n        } else {\n          // No user information available, use default company_id\n          clientData.company_id = DEFAULT_COMPANY_ID;\n          console.log('No user context, using default company_id');\n        }\n      } else {\n        console.log('Using company_id selected in form:', clientData.company_id);\n      }\n\n      // Crear el cliente\n      const newClient = await createClient(clientData, documents, user === null || user === void 0 ? void 0 : user.id);\n      console.log('Client created successfully:', newClient);\n\n      // Clear local storage\n      localStorage.removeItem('clientFormData');\n      localStorage.removeItem('clientFormStep');\n\n      // Redireccionar a la lista de clientes\n      navigate('/clients');\n    } catch (error) {\n      console.error('Error al crear cliente:', error);\n      setError(error.message || 'Error al crear el cliente. Por favor, intente de nuevo.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleSavePartial = async (data, step) => {\n    try {\n      setSectionSubmitting(true);\n      console.log(`Saving partial data for step ${step}:`, data);\n\n      // Update our local draft client data\n      const updatedDraftClient = {\n        ...draftClient,\n        ...data\n      };\n      setDraftClient(updatedDraftClient);\n\n      // Save to local storage for persistence\n      try {\n        localStorage.setItem('draftClient', JSON.stringify(updatedDraftClient));\n        setSuccessMessage('Los datos temporales se han guardado correctamente.');\n      } catch (e) {\n        console.error('Error saving to localStorage:', e);\n        setError('No se pudieron guardar los datos temporales.');\n        return null;\n      }\n      return updatedDraftClient;\n    } catch (error) {\n      console.error('Error saving partial data:', error);\n      setError('Error al guardar los datos parciales.');\n      return null;\n    } finally {\n      setSectionSubmitting(false);\n    }\n  };\n\n  // Helper to ensure we have all required fields\n  const ensureRequiredFields = clientData => {\n    // Handle advisor_id assignment\n    if (user && user.role === 'ADVISOR') {\n      clientData.advisor_id = user.id;\n    }\n\n    // Handle the company_id requirement - only set default if not selected in form\n    if (!clientData.company_id) {\n      console.log('🔍 No se seleccionó empresa en el formulario, aplicando lógica predeterminada');\n      if (user) {\n        if (user.role === 'COMPANY_ADMIN') {\n          clientData.company_id = user.entityId;\n          console.log('🔍 Usando company_id del usuario COMPANY_ADMIN:', clientData.company_id);\n        } else {\n          // For other roles without company selection, use default\n          clientData.company_id = DEFAULT_COMPANY_ID;\n          console.log('🔍 Usando company_id predeterminado para usuario con rol:', user.role);\n        }\n      } else {\n        // No user information available, use default company_id\n        clientData.company_id = DEFAULT_COMPANY_ID;\n        console.log('🔍 Sin contexto de usuario, usando company_id predeterminado');\n      }\n    } else {\n      console.log('🔍 Usando company_id seleccionado en el formulario:', clientData.company_id);\n    }\n  };\n\n  // Helper to collect fields based on step\n  const collectFieldsForStep = (data, step) => {\n    const result = {};\n\n    // Always preserve these fields if they exist\n    if (data.id) result.id = data.id;\n    if (data.company_id) result.company_id = data.company_id;\n    if (data.advisor_id) result.advisor_id = data.advisor_id;\n    switch (step) {\n      case 1:\n        // Personal data\n        const personalFields = ['first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone', 'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address', 'city', 'state', 'postal_code'];\n        personalFields.forEach(field => {\n          if (field in data) {\n            result[field] = data[field];\n          }\n        });\n        break;\n      case 2:\n        // Financial details\n        const financialFields = ['employment_type', 'employment_years', 'monthly_income', 'additional_income', 'monthly_expenses', 'other_loan_balances'];\n        financialFields.forEach(field => {\n          if (field in data) {\n            result[field] = data[field];\n          }\n        });\n        break;\n      case 3:\n        // Bank details\n        const bankFields = ['bank_name', 'bank_clabe', 'bank_account_number', 'bank_account_type', 'bank_account_origin'];\n        bankFields.forEach(field => {\n          if (field in data) {\n            result[field] = data[field];\n          }\n        });\n        break;\n      default:\n        console.warn(`🔍 Paso desconocido para guardado parcial: ${step}`);\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/clients'),\n          className: \"btn btn-sm btn-outline mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5 mr-1\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), \"Volver\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"Nuevo Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setError(null),\n            className: \"ml-auto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSuccessMessage(null),\n            className: \"ml-auto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ClientForm, {\n        initialData: draftClient || undefined,\n        onSubmit: handleSubmit,\n        onSavePartial: handleSavePartial,\n        isSubmitting: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(NewClient, \"IwqddxorlEj7FDQPZAl9XSp0oYU=\", false, function () {\n  return [useNavigate, useAuth, useLocation];\n});\n_c = NewClient;\nexport default NewClient;\nvar _c;\n$RefreshReg$(_c, \"NewClient\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","useAuth","MainLayout","ClientForm","createClient","jsxDEV","_jsxDEV","DEFAULT_COMPANY_ID","NewClient","_s","navigate","user","isSubmitting","setIsSubmitting","sectionSubmitting","setSectionSubmitting","error","setError","successMessage","setSuccessMessage","draftClient","setDraftClient","location","handleSubmit","data","documents","console","log","clientData","role","advisor_id","id","company_id","entityId","newClient","localStorage","removeItem","message","handleSavePartial","step","updatedDraftClient","setItem","JSON","stringify","e","ensureRequiredFields","collectFieldsForStep","result","personalFields","forEach","field","financialFields","bankFields","warn","children","className","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","fileName","_jsxFileName","lineNumber","columnNumber","stroke","strokeLinecap","strokeLinejoin","strokeWidth","initialData","undefined","onSubmit","onSavePartial","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/NewClient.tsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport MainLayout from '../components/layout/MainLayout';\nimport ClientForm from '../components/clients/ClientForm';\nimport { Client, ClientDocument, createClient, updateClient } from '../services/clientService';\nimport Alert from '../components/ui/Alert';\n\n// Default company ID (Herramental)\nconst DEFAULT_COMPANY_ID = \"70b2aa97-a5b6-4b5e-91db-be8acbd3701a\";\n\nconst NewClient: React.FC = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [sectionSubmitting, setSectionSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [draftClient, setDraftClient] = useState<Partial<Client> | null>(null);\n  const location = useLocation();\n\n  const handleSubmit = async (data: Partial<Client>, documents: ClientDocument[]) => {\n    setIsSubmitting(true);\n    setError(null);\n    console.log('Submitting client data:', data);\n    \n    try {\n      // Si el usuario es asesor o admin de empresa, asignar los IDs correspondientes\n      const clientData: Partial<Client> = { ...data };\n      \n      // Handle advisor_id assignment\n      if (user && user.role === 'ADVISOR') {\n        clientData.advisor_id = user.id;\n      }\n      \n      // Handle the company_id requirement - only set default if not selected in form\n      if (!clientData.company_id) {\n        console.log('No company selected in form, applying default/user company logic');\n        \n        if (user) {\n          if (user.role === 'COMPANY_ADMIN') {\n            clientData.company_id = user.entityId;\n            console.log('Using company_id from COMPANY_ADMIN user:', clientData.company_id);\n          } else {\n            // For other roles without company selection, use default\n            clientData.company_id = DEFAULT_COMPANY_ID;\n            console.log('Using default company_id for user with role:', user.role);\n          }\n        } else {\n          // No user information available, use default company_id\n          clientData.company_id = DEFAULT_COMPANY_ID;\n          console.log('No user context, using default company_id');\n        }\n      } else {\n        console.log('Using company_id selected in form:', clientData.company_id);\n      }\n      \n      // Crear el cliente\n      const newClient = await createClient(clientData as Omit<Client, 'id' | 'created_at'>, documents, user?.id);\n      console.log('Client created successfully:', newClient);\n      \n      // Clear local storage\n      localStorage.removeItem('clientFormData');\n      localStorage.removeItem('clientFormStep');\n      \n      // Redireccionar a la lista de clientes\n      navigate('/clients');\n    } catch (error: any) {\n      console.error('Error al crear cliente:', error);\n      setError(error.message || 'Error al crear el cliente. Por favor, intente de nuevo.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleSavePartial = async (data: Partial<Client>, step: number) => {\n    try {\n      setSectionSubmitting(true);\n      console.log(`Saving partial data for step ${step}:`, data);\n      \n      // Update our local draft client data\n      const updatedDraftClient = { ...draftClient, ...data };\n      setDraftClient(updatedDraftClient);\n      \n      // Save to local storage for persistence\n      try {\n        localStorage.setItem('draftClient', JSON.stringify(updatedDraftClient));\n        setSuccessMessage('Los datos temporales se han guardado correctamente.');\n      } catch (e) {\n        console.error('Error saving to localStorage:', e);\n        setError('No se pudieron guardar los datos temporales.');\n        return null;\n      }\n      \n      return updatedDraftClient;\n    } catch (error) {\n      console.error('Error saving partial data:', error);\n      setError('Error al guardar los datos parciales.');\n      return null;\n    } finally {\n      setSectionSubmitting(false);\n    }\n  };\n  \n  // Helper to ensure we have all required fields\n  const ensureRequiredFields = (clientData: Partial<Client>) => {\n    // Handle advisor_id assignment\n    if (user && user.role === 'ADVISOR') {\n      clientData.advisor_id = user.id;\n    }\n    \n    // Handle the company_id requirement - only set default if not selected in form\n    if (!clientData.company_id) {\n      console.log('🔍 No se seleccionó empresa en el formulario, aplicando lógica predeterminada');\n      \n      if (user) {\n        if (user.role === 'COMPANY_ADMIN') {\n          clientData.company_id = user.entityId;\n          console.log('🔍 Usando company_id del usuario COMPANY_ADMIN:', clientData.company_id);\n        } else {\n          // For other roles without company selection, use default\n          clientData.company_id = DEFAULT_COMPANY_ID;\n          console.log('🔍 Usando company_id predeterminado para usuario con rol:', user.role);\n        }\n      } else {\n        // No user information available, use default company_id\n        clientData.company_id = DEFAULT_COMPANY_ID;\n        console.log('🔍 Sin contexto de usuario, usando company_id predeterminado');\n      }\n    } else {\n      console.log('🔍 Usando company_id seleccionado en el formulario:', clientData.company_id);\n    }\n  };\n  \n  // Helper to collect fields based on step\n  const collectFieldsForStep = (data: Partial<Client>, step: number): Partial<Client> => {\n    const result: Partial<Client> = {};\n    \n    // Always preserve these fields if they exist\n    if (data.id) result.id = data.id;\n    if (data.company_id) result.company_id = data.company_id;\n    if (data.advisor_id) result.advisor_id = data.advisor_id;\n    \n    switch(step) {\n      case 1: // Personal data\n        const personalFields = [\n          'first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone',\n          'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address',\n          'city', 'state', 'postal_code'\n        ];\n        personalFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      case 2: // Financial details\n        const financialFields = [\n          'employment_type', 'employment_years', 'monthly_income',\n          'additional_income', 'monthly_expenses', 'other_loan_balances'\n        ];\n        financialFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      case 3: // Bank details\n        const bankFields = [\n          'bank_name', 'bank_clabe', 'bank_account_number',\n          'bank_account_type', 'bank_account_origin'\n        ];\n        bankFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      default:\n        console.warn(`🔍 Paso desconocido para guardado parcial: ${step}`);\n    }\n    \n    return result;\n  };\n\n  return (\n    <MainLayout>\n      <div className=\"p-6\">\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={() => navigate('/clients')} \n            className=\"btn btn-sm btn-outline mr-4\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n            </svg>\n            Volver\n          </button>\n          <h1 className=\"text-2xl font-bold\">Nuevo Cliente</h1>\n        </div>\n        \n        {/* Display error message */}\n        {error && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-error\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{error}</span>\n              <button onClick={() => setError(null)} className=\"ml-auto\">×</button>\n            </div>\n          </div>\n        )}\n        \n        {/* Display success message */}\n        {successMessage && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-success\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{successMessage}</span>\n              <button onClick={() => setSuccessMessage(null)} className=\"ml-auto\">×</button>\n            </div>\n          </div>\n        )}\n        \n        <ClientForm \n          initialData={draftClient || undefined}\n          onSubmit={handleSubmit}\n          onSavePartial={handleSavePartial}\n          isSubmitting={isSubmitting}\n        />\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default NewClient; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}