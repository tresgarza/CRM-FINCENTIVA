{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/contexts/PermissionsContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PermissionsContext = /*#__PURE__*/createContext(undefined);\nexport const usePermissions = () => {\n  _s();\n  const context = useContext(PermissionsContext);\n  if (context === undefined) {\n    throw new Error('usePermissions must be used within a PermissionsProvider');\n  }\n  return context;\n};\n_s(usePermissions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const PermissionsProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user\n  } = useAuth();\n\n  // Para desarrollo, el usuario SUPERADMIN tiene todos los permisos\n  const userCan = permission => {\n    if (!user || !user.role) return false;\n\n    // En modo desarrollo, el SUPERADMIN siempre tiene todos los permisos\n    if (user.role === 'SUPERADMIN') {\n      return true;\n    }\n\n    // Otros roles tendrían permisos específicos en una implementación real\n    return false;\n  };\n  const userCanAll = permissions => {\n    if (!user || !user.role) return false;\n\n    // En modo desarrollo, el SUPERADMIN siempre tiene todos los permisos\n    if (user.role === 'SUPERADMIN') {\n      return true;\n    }\n\n    // Para otros roles, verificar cada permiso\n    return permissions.every(permission => userCan(permission));\n  };\n  const userCanAny = permissions => {\n    if (!user || !user.role) return false;\n\n    // En modo desarrollo, el SUPERADMIN siempre tiene todos los permisos\n    if (user.role === 'SUPERADMIN') {\n      return true;\n    }\n\n    // Para otros roles, verificar si tiene al menos un permiso\n    return permissions.some(permission => userCan(permission));\n  };\n  const value = {\n    userCan,\n    userCanAll,\n    userCanAny\n  };\n  return /*#__PURE__*/_jsxDEV(PermissionsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n};\n_s2(PermissionsProvider, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c = PermissionsProvider;\nvar _c;\n$RefreshReg$(_c, \"PermissionsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useAuth","jsxDEV","_jsxDEV","PermissionsContext","undefined","usePermissions","_s","context","Error","PermissionsProvider","children","_s2","user","userCan","permission","role","userCanAll","permissions","every","userCanAny","some","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/contexts/PermissionsContext.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { useAuth } from './AuthContext';\nimport { PERMISSIONS } from '../utils/constants/permissions';\n\ninterface PermissionsContextType {\n  userCan: (permission: PERMISSIONS) => boolean;\n  userCanAll: (permissions: PERMISSIONS[]) => boolean;\n  userCanAny: (permissions: PERMISSIONS[]) => boolean;\n}\n\nconst PermissionsContext = createContext<PermissionsContextType | undefined>(undefined);\n\nexport const usePermissions = () => {\n  const context = useContext(PermissionsContext);\n  if (context === undefined) {\n    throw new Error('usePermissions must be used within a PermissionsProvider');\n  }\n  return context;\n};\n\nexport const PermissionsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { user } = useAuth();\n\n  // Para desarrollo, el usuario SUPERADMIN tiene todos los permisos\n  const userCan = (permission: PERMISSIONS): boolean => {\n    if (!user || !user.role) return false;\n    \n    // En modo desarrollo, el SUPERADMIN siempre tiene todos los permisos\n    if (user.role === 'SUPERADMIN') {\n      return true;\n    }\n    \n    // Otros roles tendrían permisos específicos en una implementación real\n    return false;\n  };\n\n  const userCanAll = (permissions: PERMISSIONS[]): boolean => {\n    if (!user || !user.role) return false;\n    \n    // En modo desarrollo, el SUPERADMIN siempre tiene todos los permisos\n    if (user.role === 'SUPERADMIN') {\n      return true;\n    }\n    \n    // Para otros roles, verificar cada permiso\n    return permissions.every(permission => userCan(permission));\n  };\n\n  const userCanAny = (permissions: PERMISSIONS[]): boolean => {\n    if (!user || !user.role) return false;\n    \n    // En modo desarrollo, el SUPERADMIN siempre tiene todos los permisos\n    if (user.role === 'SUPERADMIN') {\n      return true;\n    }\n    \n    // Para otros roles, verificar si tiene al menos un permiso\n    return permissions.some(permission => userCan(permission));\n  };\n\n  const value = {\n    userCan,\n    userCanAll,\n    userCanAny,\n  };\n\n  return <PermissionsContext.Provider value={value}>{children}</PermissionsContext.Provider>;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASxC,MAAMC,kBAAkB,gBAAGL,aAAa,CAAqCM,SAAS,CAAC;AAEvF,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGR,UAAU,CAACI,kBAAkB,CAAC;EAC9C,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,0DAA0D,CAAC;EAC7E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,cAAc;AAQ3B,OAAO,MAAMI,mBAA4D,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5F,MAAM;IAAEC;EAAK,CAAC,GAAGZ,OAAO,CAAC,CAAC;;EAE1B;EACA,MAAMa,OAAO,GAAIC,UAAuB,IAAc;IACpD,IAAI,CAACF,IAAI,IAAI,CAACA,IAAI,CAACG,IAAI,EAAE,OAAO,KAAK;;IAErC;IACA,IAAIH,IAAI,CAACG,IAAI,KAAK,YAAY,EAAE;MAC9B,OAAO,IAAI;IACb;;IAEA;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMC,UAAU,GAAIC,WAA0B,IAAc;IAC1D,IAAI,CAACL,IAAI,IAAI,CAACA,IAAI,CAACG,IAAI,EAAE,OAAO,KAAK;;IAErC;IACA,IAAIH,IAAI,CAACG,IAAI,KAAK,YAAY,EAAE;MAC9B,OAAO,IAAI;IACb;;IAEA;IACA,OAAOE,WAAW,CAACC,KAAK,CAACJ,UAAU,IAAID,OAAO,CAACC,UAAU,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMK,UAAU,GAAIF,WAA0B,IAAc;IAC1D,IAAI,CAACL,IAAI,IAAI,CAACA,IAAI,CAACG,IAAI,EAAE,OAAO,KAAK;;IAErC;IACA,IAAIH,IAAI,CAACG,IAAI,KAAK,YAAY,EAAE;MAC9B,OAAO,IAAI;IACb;;IAEA;IACA,OAAOE,WAAW,CAACG,IAAI,CAACN,UAAU,IAAID,OAAO,CAACC,UAAU,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMO,KAAK,GAAG;IACZR,OAAO;IACPG,UAAU;IACVG;EACF,CAAC;EAED,oBAAOjB,OAAA,CAACC,kBAAkB,CAACmB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAX,QAAA,EAAEA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA8B,CAAC;AAC5F,CAAC;AAACf,GAAA,CA/CWF,mBAA4D;EAAA,QACtDT,OAAO;AAAA;AAAA2B,EAAA,GADblB,mBAA4D;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}