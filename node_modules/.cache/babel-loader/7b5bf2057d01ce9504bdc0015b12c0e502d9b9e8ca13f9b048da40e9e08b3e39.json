{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/NotificationPopup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n// Map NotificationType to basic types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapNotificationTypeToBasic = type => {\n  switch (type) {\n    case 'info':\n    case 'new_message':\n      return 'info';\n    case 'success':\n    case 'approval_required':\n    case 'application_status_updated':\n      return 'success';\n    case 'warning':\n      return 'warning';\n    case 'error':\n    case 'application_comment':\n      return 'error';\n    case 'new_application':\n      return 'info';\n    // Mantener en info para consistencia\n    default:\n      return 'info';\n  }\n};\n\n// Add a global listener for user interaction to enable audio\nif (typeof window !== 'undefined' && !document.documentElement.hasAttribute('data-listeners-added')) {\n  document.documentElement.setAttribute('data-listeners-added', 'true');\n  const userInteractionEvents = ['click', 'touchstart', 'keydown'];\n  const handleUserInteraction = () => {\n    document.documentElement.setAttribute('data-user-interacted', 'true');\n\n    // Remove listeners after first interaction\n    userInteractionEvents.forEach(event => {\n      document.removeEventListener(event, handleUserInteraction);\n    });\n\n    // Play a silent sound to unlock audio on iOS\n    try {\n      const silentSound = new Audio();\n      silentSound.volume = 0.01;\n      silentSound.play().catch(() => {/* Ignore errors */});\n    } catch (e) {\n      // Ignore errors\n    }\n  };\n\n  // Add listeners for all interaction types\n  userInteractionEvents.forEach(event => {\n    document.addEventListener(event, handleUserInteraction);\n  });\n  console.log('User interaction listeners added for sound enablement');\n}\nconst NotificationPopup = ({\n  title,\n  message,\n  type = 'info',\n  duration = 5000,\n  // Por defecto, 5 segundos\n  onClose,\n  playSound = true,\n  soundType = 'notification'\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(true);\n  const [exiting, setExiting] = useState(false);\n  const [soundPlayed, setSoundPlayed] = useState(false);\n\n  // Configurar el auto-cierre\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        closeNotification();\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n  }, [duration]);\n\n  // Reproducir sonido de notificación\n  useEffect(() => {\n    if (playSound && !soundPlayed) {\n      try {\n        // Set the flag to prevent multiple playbacks\n        setSoundPlayed(true);\n\n        // Handle the three-beeps special case\n        if (soundType === 'three-beeps') {\n          playThreeBeeps();\n          return;\n        }\n\n        // Create a single standardized audio element\n        const audio = new Audio();\n\n        // Set the source based on the sound type with fallback to WAV format\n        let audioSource = '';\n        switch (soundType) {\n          case 'notification':\n            audioSource = '/sounds/notification';\n            break;\n          case 'alert':\n            audioSource = '/sounds/alert';\n            break;\n          case 'approval':\n            audioSource = '/sounds/approval';\n            break;\n          default:\n            audioSource = '/sounds/notification';\n        }\n\n        // Create a fallback system with different formats\n        audio.innerHTML = `\n          <source src=\"${audioSource}.mp3\" type=\"audio/mp3\">\n          <source src=\"${audioSource}.wav\" type=\"audio/wav\">\n        `;\n\n        // Explicitly set the src for the Audio element too (as backup)\n        audio.src = `${audioSource}.mp3`;\n\n        // Set volume before playing\n        audio.volume = 0.5;\n\n        // Add error handling for the audio element\n        audio.addEventListener('error', e => {\n          console.error('Error playing notification sound', e);\n\n          // Try fallback to WAV if MP3 fails\n          if (audio.src.endsWith('.mp3')) {\n            console.log('Attempting to play WAV fallback');\n            audio.src = `${audioSource}.wav`;\n            audio.load();\n            audio.play().catch(err => {\n              console.error('Fallback sound playback failed:', err);\n            });\n          }\n        });\n\n        // Wait a moment to ensure browser is ready\n        setTimeout(() => {\n          const playPromise = audio.play();\n          if (playPromise !== undefined) {\n            playPromise.catch(err => {\n              console.log('Browser blocked autoplay, needs user interaction first');\n\n              // Mark that we've attempted to play audio\n              if (!document.documentElement.hasAttribute('data-audio-attempted')) {\n                document.documentElement.setAttribute('data-audio-attempted', 'true');\n              }\n            });\n          }\n        }, 100);\n      } catch (error) {\n        console.error('Failed to initialize sound:', error);\n      }\n    }\n  }, [playSound, soundType, soundPlayed]);\n\n  // Function to play three sequential beeps\n  const playThreeBeeps = () => {\n    const beepSound = '/sounds/three-beeps.mp3';\n    let beepCount = 0;\n    let isPlaying = false;\n    const playBeep = () => {\n      // Prevent concurrent or repeated plays\n      if (beepCount >= 3 || isPlaying) return;\n      isPlaying = true;\n      const audio = new Audio(beepSound);\n      audio.volume = 0.5;\n\n      // Play the beep\n      const playPromise = audio.play();\n      if (playPromise) {\n        playPromise.then(() => {\n          beepCount++;\n          isPlaying = false;\n          if (beepCount < 3) {\n            // Schedule the next beep after a delay\n            setTimeout(playBeep, 700);\n          }\n        }).catch(err => {\n          console.error('Error playing beep sound:', err);\n          isPlaying = false;\n          if (document.documentElement.hasAttribute('data-user-interacted')) {\n            // If user has interacted, try once more after a delay\n            setTimeout(playBeep, 500);\n          }\n        });\n      }\n    };\n\n    // Start playing beeps\n    playBeep();\n  };\n  const closeNotification = () => {\n    setExiting(true);\n    // Agregar un pequeño retraso para la animación de salida\n    setTimeout(() => {\n      setIsVisible(false);\n      if (onClose) onClose();\n    }, 300);\n  };\n  if (!isVisible) return null;\n\n  // Mapeo de estilos según el tipo\n  const typeStyles = {\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-800',\n      title: 'text-blue-900'\n    },\n    success: {\n      bg: 'bg-green-50',\n      border: 'border-green-200',\n      text: 'text-green-800',\n      title: 'text-green-900'\n    },\n    warning: {\n      bg: 'bg-yellow-50',\n      border: 'border-yellow-200',\n      text: 'text-yellow-800',\n      title: 'text-yellow-900'\n    },\n    error: {\n      bg: 'bg-red-50',\n      border: 'border-red-200',\n      text: 'text-red-800',\n      title: 'text-red-900'\n    }\n  };\n\n  // Map complex notification types to the basic ones\n  const basicType = mapNotificationTypeToBasic(type);\n\n  // Apply special styling for new application notifications\n  const extraClass = type === 'new_application' ? 'border-l-4 border-l-blue-500 shadow-lg' : '';\n\n  // Use the mapped type to get styles\n  const styles = typeStyles[basicType] || typeStyles.info;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-5 right-5 z-50 max-w-md w-full animate-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.bg} ${styles.border} ${styles.text} ${extraClass} rounded-lg shadow-lg p-4 border ${exiting ? 'animate-popup-exit' : 'animate-popup-entry'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-base font-semibold ${styles.title}`,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 text-sm\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeNotification,\n          className: \"flex-shrink-0 ml-2 text-gray-400 hover:text-gray-500 focus:outline-none\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationPopup, \"H+hz1giYHV1kev4Qop1PMA18D/A=\");\n_c = NotificationPopup;\nexport default NotificationPopup;\nvar _c;\n$RefreshReg$(_c, \"NotificationPopup\");","map":{"version":3,"names":["React","useEffect","useState","XMarkIcon","jsxDEV","_jsxDEV","mapNotificationTypeToBasic","type","window","document","documentElement","hasAttribute","setAttribute","userInteractionEvents","handleUserInteraction","forEach","event","removeEventListener","silentSound","Audio","volume","play","catch","e","addEventListener","console","log","NotificationPopup","title","message","duration","onClose","playSound","soundType","_s","isVisible","setIsVisible","exiting","setExiting","soundPlayed","setSoundPlayed","timer","setTimeout","closeNotification","clearTimeout","playThreeBeeps","audio","audioSource","innerHTML","src","error","endsWith","load","err","playPromise","undefined","beepSound","beepCount","isPlaying","playBeep","then","typeStyles","info","bg","border","text","success","warning","basicType","extraClass","styles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/NotificationPopup.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n// Map NotificationType to basic types\nconst mapNotificationTypeToBasic = (type: string): 'info' | 'success' | 'warning' | 'error' => {\n  switch (type) {\n    case 'info':\n    case 'new_message':\n      return 'info';\n    case 'success':\n    case 'approval_required':\n    case 'application_status_updated':\n      return 'success';\n    case 'warning':\n      return 'warning';\n    case 'error':\n    case 'application_comment':\n      return 'error';\n    case 'new_application':\n      return 'info'; // Mantener en info para consistencia\n    default:\n      return 'info';\n  }\n};\n\n// Add a global listener for user interaction to enable audio\nif (typeof window !== 'undefined' && !document.documentElement.hasAttribute('data-listeners-added')) {\n  document.documentElement.setAttribute('data-listeners-added', 'true');\n  \n  const userInteractionEvents = ['click', 'touchstart', 'keydown'];\n  \n  const handleUserInteraction = () => {\n    document.documentElement.setAttribute('data-user-interacted', 'true');\n    \n    // Remove listeners after first interaction\n    userInteractionEvents.forEach(event => {\n      document.removeEventListener(event, handleUserInteraction);\n    });\n    \n    // Play a silent sound to unlock audio on iOS\n    try {\n      const silentSound = new Audio();\n      silentSound.volume = 0.01;\n      silentSound.play().catch(() => {/* Ignore errors */});\n    } catch (e) {\n      // Ignore errors\n    }\n  };\n  \n  // Add listeners for all interaction types\n  userInteractionEvents.forEach(event => {\n    document.addEventListener(event, handleUserInteraction);\n  });\n  \n  console.log('User interaction listeners added for sound enablement');\n}\n\ninterface NotificationPopupProps {\n  title: string;\n  message: string;\n  type?: 'info' | 'success' | 'warning' | 'error' | string;\n  duration?: number; // Duración en milisegundos\n  onClose?: () => void;\n  playSound?: boolean;\n  soundType?: 'notification' | 'alert' | 'approval' | 'three-beeps'; // Añadir nuevo tipo\n}\n\nconst NotificationPopup: React.FC<NotificationPopupProps> = ({\n  title,\n  message,\n  type = 'info',\n  duration = 5000, // Por defecto, 5 segundos\n  onClose,\n  playSound = true,\n  soundType = 'notification'\n}) => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [exiting, setExiting] = useState(false);\n  const [soundPlayed, setSoundPlayed] = useState(false);\n\n  // Configurar el auto-cierre\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        closeNotification();\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n  }, [duration]);\n\n  // Reproducir sonido de notificación\n  useEffect(() => {\n    if (playSound && !soundPlayed) {\n      try {\n        // Set the flag to prevent multiple playbacks\n        setSoundPlayed(true);\n        \n        // Handle the three-beeps special case\n        if (soundType === 'three-beeps') {\n          playThreeBeeps();\n          return;\n        }\n        \n        // Create a single standardized audio element\n        const audio = new Audio();\n        \n        // Set the source based on the sound type with fallback to WAV format\n        let audioSource = '';\n        switch (soundType) {\n          case 'notification':\n            audioSource = '/sounds/notification';\n            break;\n          case 'alert':\n            audioSource = '/sounds/alert';\n            break;\n          case 'approval':\n            audioSource = '/sounds/approval';\n            break;\n          default:\n            audioSource = '/sounds/notification';\n        }\n        \n        // Create a fallback system with different formats\n        audio.innerHTML = `\n          <source src=\"${audioSource}.mp3\" type=\"audio/mp3\">\n          <source src=\"${audioSource}.wav\" type=\"audio/wav\">\n        `;\n        \n        // Explicitly set the src for the Audio element too (as backup)\n        audio.src = `${audioSource}.mp3`;\n        \n        // Set volume before playing\n        audio.volume = 0.5;\n        \n        // Add error handling for the audio element\n        audio.addEventListener('error', (e) => {\n          console.error('Error playing notification sound', e);\n          \n          // Try fallback to WAV if MP3 fails\n          if (audio.src.endsWith('.mp3')) {\n            console.log('Attempting to play WAV fallback');\n            audio.src = `${audioSource}.wav`;\n            audio.load();\n            audio.play().catch(err => {\n              console.error('Fallback sound playback failed:', err);\n            });\n          }\n        });\n        \n        // Wait a moment to ensure browser is ready\n        setTimeout(() => {\n          const playPromise = audio.play();\n          if (playPromise !== undefined) {\n            playPromise.catch(err => {\n              console.log('Browser blocked autoplay, needs user interaction first');\n              \n              // Mark that we've attempted to play audio\n              if (!document.documentElement.hasAttribute('data-audio-attempted')) {\n                document.documentElement.setAttribute('data-audio-attempted', 'true');\n              }\n            });\n          }\n        }, 100);\n      } catch (error) {\n        console.error('Failed to initialize sound:', error);\n      }\n    }\n  }, [playSound, soundType, soundPlayed]);\n\n  // Function to play three sequential beeps\n  const playThreeBeeps = () => {\n    const beepSound = '/sounds/three-beeps.mp3';\n    let beepCount = 0;\n    let isPlaying = false;\n    \n    const playBeep = () => {\n      // Prevent concurrent or repeated plays\n      if (beepCount >= 3 || isPlaying) return;\n      \n      isPlaying = true;\n      const audio = new Audio(beepSound);\n      audio.volume = 0.5;\n      \n      // Play the beep\n      const playPromise = audio.play();\n      if (playPromise) {\n        playPromise\n          .then(() => {\n            beepCount++;\n            isPlaying = false;\n            \n            if (beepCount < 3) {\n              // Schedule the next beep after a delay\n              setTimeout(playBeep, 700);\n            }\n          })\n          .catch(err => {\n            console.error('Error playing beep sound:', err);\n            isPlaying = false;\n            \n            if (document.documentElement.hasAttribute('data-user-interacted')) {\n              // If user has interacted, try once more after a delay\n              setTimeout(playBeep, 500);\n            }\n          });\n      }\n    };\n    \n    // Start playing beeps\n    playBeep();\n  };\n\n  const closeNotification = () => {\n    setExiting(true);\n    // Agregar un pequeño retraso para la animación de salida\n    setTimeout(() => {\n      setIsVisible(false);\n      if (onClose) onClose();\n    }, 300);\n  };\n\n  if (!isVisible) return null;\n\n  // Mapeo de estilos según el tipo\n  const typeStyles = {\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-800',\n      title: 'text-blue-900'\n    },\n    success: {\n      bg: 'bg-green-50',\n      border: 'border-green-200',\n      text: 'text-green-800',\n      title: 'text-green-900'\n    },\n    warning: {\n      bg: 'bg-yellow-50',\n      border: 'border-yellow-200',\n      text: 'text-yellow-800',\n      title: 'text-yellow-900'\n    },\n    error: {\n      bg: 'bg-red-50',\n      border: 'border-red-200',\n      text: 'text-red-800',\n      title: 'text-red-900'\n    }\n  };\n\n  // Map complex notification types to the basic ones\n  const basicType = mapNotificationTypeToBasic(type);\n  \n  // Apply special styling for new application notifications\n  const extraClass = type === 'new_application' ? 'border-l-4 border-l-blue-500 shadow-lg' : '';\n  \n  // Use the mapped type to get styles\n  const styles = typeStyles[basicType] || typeStyles.info;\n\n  return (\n    <div className=\"fixed top-5 right-5 z-50 max-w-md w-full animate-popup\">\n      <div\n        className={`${styles.bg} ${styles.border} ${styles.text} ${extraClass} rounded-lg shadow-lg p-4 border ${\n          exiting ? 'animate-popup-exit' : 'animate-popup-entry'\n        }`}\n      >\n        <div className=\"flex justify-between items-start\">\n          <div className=\"flex-1\">\n            <h3 className={`text-base font-semibold ${styles.title}`}>{title}</h3>\n            <div className=\"mt-1 text-sm\">{message}</div>\n          </div>\n          <button\n            onClick={closeNotification}\n            className=\"flex-shrink-0 ml-2 text-gray-400 hover:text-gray-500 focus:outline-none\"\n          >\n            <XMarkIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationPopup; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}