{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/pages/EditClient.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport MainLayout from '../components/layout/MainLayout';\nimport ClientForm from '../components/clients/ClientForm';\nimport { getClientById, updateClient, uploadClientDocuments } from '../services/clientService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Default company ID (Herramental)\nconst DEFAULT_COMPANY_ID = \"70b2aa97-a5b6-4b5e-91db-be8acbd3701a\";\nconst EditClient = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [client, setClient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  useEffect(() => {\n    if (id) {\n      fetchClientData(id);\n    }\n  }, [id]);\n  const fetchClientData = async clientId => {\n    try {\n      setLoading(true);\n      console.log(`Fetching client data for ID ${clientId}`);\n      const clientData = await getClientById(clientId);\n      if (clientData) {\n        console.log('Client data retrieved successfully:', clientData);\n        setClient(clientData);\n      } else {\n        setError('No se encontró el cliente especificado.');\n      }\n    } catch (err) {\n      console.error('Error al obtener datos del cliente:', err);\n      setError('Error al cargar los datos del cliente. Por favor, intente de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async (data, documents) => {\n    if (!id) return;\n    try {\n      setIsSubmitting(true);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(null); // Clear any previous success message\n\n      // First save the client data without documents\n      console.log('Updating client data first...', data);\n      const updatedClient = await updateClient(id, data);\n      console.log('Client data successfully updated', updatedClient);\n\n      // If documents were provided, upload them separately\n      if (documents && documents.length > 0 && user !== null && user !== void 0 && user.id) {\n        try {\n          console.log(`Uploading ${documents.length} documents for client ${id}...`);\n          await uploadClientDocuments(id, user.id, documents);\n          console.log('Documents uploaded successfully');\n        } catch (docError) {\n          console.error('Error uploading documents:', docError);\n          // Show warning but don't fail the whole operation\n          setSuccessMessage('El cliente se guardó correctamente, pero hubo problemas al subir algunos documentos. Puede intentar agregarlos nuevamente más tarde.');\n          return; // Don't navigate away in case of document errors\n        }\n      }\n\n      // Successfully updated\n      console.log('Client update complete');\n      navigate('/clients');\n    } catch (error) {\n      console.error('Error al actualizar cliente:', error);\n      setError(error.message || 'Error al guardar los cambios. Por favor, intente de nuevo.');\n\n      // Scroll to top to show the error message\n      window.scrollTo(0, 0);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle partial save\n  const handleSavePartial = async (data, step) => {\n    try {\n      // Log the saving attempt\n      console.log(`Saving client data at step ${step}...`);\n      console.log('Form data being saved:', data);\n\n      // Show saving indicator\n      setIsSubmitting(true);\n      if (!client || !client.id) {\n        throw new Error('No client data available for update');\n      }\n\n      // Prepare partial data based on step\n      const partialData = {};\n\n      // Add common fields that should be preserved\n      if (data.id) partialData.id = data.id;\n      if (data.company_id) partialData.company_id = data.company_id;\n      switch (step) {\n        case 1:\n          // Personal data\n          // Collect all personal data fields\n          const personalFields = ['first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone', 'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address', 'city', 'state', 'postal_code', 'company_id'];\n          personalFields.forEach(field => {\n            if (field in data) {\n              partialData[field] = data[field];\n            }\n          });\n          break;\n        case 2:\n          // Financial details\n          // Collect all financial fields\n          const financialFields = ['employment_type', 'employment_years', 'monthly_income', 'additional_income', 'monthly_expenses', 'other_loan_balances'];\n          financialFields.forEach(field => {\n            if (field in data) {\n              partialData[field] = data[field];\n            }\n          });\n          break;\n        case 3:\n          // Bank details\n          // Collect all bank details fields\n          const bankFields = ['bank_name', 'bank_clabe', 'bank_account_number', 'bank_account_type', 'bank_account_origin'];\n          bankFields.forEach(field => {\n            if (field in data) {\n              partialData[field] = data[field];\n            }\n          });\n          break;\n        default:\n          console.warn(`Unknown step ${step} for partial save`);\n      }\n      try {\n        // Update client with partial data\n        await updateClient(client.id, partialData);\n        console.log(`Successfully saved data for section ${step}`);\n\n        // Update local state with new data\n        setClient(prevClient => ({\n          ...prevClient,\n          ...partialData\n        }));\n\n        // Show success message\n        setSuccessMessage(`Se guardaron los datos de la sección ${step} correctamente`);\n\n        // Clear message after delay\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3000);\n        return partialData;\n      } catch (err) {\n        console.error(`Error updating client at step ${step}:`, err);\n        setError(`Error al guardar la sección ${step}: ${err.message || 'Error desconocido'}`);\n        throw err;\n      }\n    } catch (error) {\n      console.error(`Error in handleSavePartial at step ${step}:`, error);\n      setError(error.message || `Error al guardar la sección ${step}. Por favor, intente de nuevo.`);\n      throw error;\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading loading-spinner loading-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n  }\n  if (error || !client) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error || 'No se encontró el cliente solicitado.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/clients'),\n            className: \"btn btn-primary\",\n            children: \"Volver a Clientes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/clients'),\n          className: \"btn btn-sm btn-outline mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5 mr-1\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), \"Volver\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"Editar Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setError(null),\n            className: \"ml-auto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSuccessMessage(null),\n            className: \"ml-auto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ClientForm, {\n        initialData: client,\n        onSubmit: handleSubmit,\n        onSavePartial: handleSavePartial,\n        isSubmitting: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(EditClient, \"hNTKjFQfZWv2LXnl75sVxr7xiik=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = EditClient;\nexport default EditClient;\nvar _c;\n$RefreshReg$(_c, \"EditClient\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useAuth","MainLayout","ClientForm","getClientById","updateClient","uploadClientDocuments","jsxDEV","_jsxDEV","DEFAULT_COMPANY_ID","EditClient","_s","id","navigate","user","client","setClient","loading","setLoading","isSubmitting","setIsSubmitting","error","setError","successMessage","setSuccessMessage","fetchClientData","clientId","console","log","clientData","err","handleSubmit","data","documents","updatedClient","length","docError","message","window","scrollTo","handleSavePartial","step","Error","partialData","company_id","personalFields","forEach","field","financialFields","bankFields","warn","prevClient","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","fillRule","clipRule","initialData","onSubmit","onSavePartial","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/EditClient.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport MainLayout from '../components/layout/MainLayout';\nimport ClientForm from '../components/clients/ClientForm';\nimport { Client, ClientDocument, getClientById, updateClient, uploadClientDocuments } from '../services/clientService';\nimport { getClientDocuments } from '../services/documentService';\nimport Alert from '../components/ui/Alert';\n\n// Default company ID (Herramental)\nconst DEFAULT_COMPANY_ID = \"70b2aa97-a5b6-4b5e-91db-be8acbd3701a\";\n\nconst EditClient: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  \n  const [client, setClient] = useState<Client | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (id) {\n      fetchClientData(id);\n    }\n  }, [id]);\n\n  const fetchClientData = async (clientId: string) => {\n    try {\n      setLoading(true);\n      console.log(`Fetching client data for ID ${clientId}`);\n      const clientData = await getClientById(clientId);\n      \n      if (clientData) {\n        console.log('Client data retrieved successfully:', clientData);\n        setClient(clientData);\n      } else {\n        setError('No se encontró el cliente especificado.');\n      }\n    } catch (err) {\n      console.error('Error al obtener datos del cliente:', err);\n      setError('Error al cargar los datos del cliente. Por favor, intente de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (data: Partial<Client>, documents: ClientDocument[]) => {\n    if (!id) return;\n    \n    try {\n      setIsSubmitting(true);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(null); // Clear any previous success message\n      \n      // First save the client data without documents\n      console.log('Updating client data first...', data);\n      const updatedClient = await updateClient(id, data);\n      console.log('Client data successfully updated', updatedClient);\n      \n      // If documents were provided, upload them separately\n      if (documents && documents.length > 0 && user?.id) {\n        try {\n          console.log(`Uploading ${documents.length} documents for client ${id}...`);\n          await uploadClientDocuments(id, user.id, documents);\n          console.log('Documents uploaded successfully');\n        } catch (docError: any) {\n          console.error('Error uploading documents:', docError);\n          // Show warning but don't fail the whole operation\n          setSuccessMessage('El cliente se guardó correctamente, pero hubo problemas al subir algunos documentos. Puede intentar agregarlos nuevamente más tarde.');\n          return; // Don't navigate away in case of document errors\n        }\n      }\n      \n      // Successfully updated\n      console.log('Client update complete');\n      navigate('/clients');\n    } catch (error: any) {\n      console.error('Error al actualizar cliente:', error);\n      setError(error.message || 'Error al guardar los cambios. Por favor, intente de nuevo.');\n      \n      // Scroll to top to show the error message\n      window.scrollTo(0, 0);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  // Handle partial save\n  const handleSavePartial = async (data: Partial<Client>, step: number) => {\n    try {\n      // Log the saving attempt\n      console.log(`Saving client data at step ${step}...`);\n      console.log('Form data being saved:', data);\n      \n      // Show saving indicator\n      setIsSubmitting(true);\n      \n      if (!client || !client.id) {\n        throw new Error('No client data available for update');\n      }\n      \n      // Prepare partial data based on step\n      const partialData: Partial<Client> = {};\n      \n      // Add common fields that should be preserved\n      if (data.id) partialData.id = data.id;\n      if (data.company_id) partialData.company_id = data.company_id;\n      \n      switch(step) {\n        case 1: // Personal data\n          // Collect all personal data fields\n          const personalFields = [\n            'first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone',\n            'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address',\n            'city', 'state', 'postal_code', 'company_id'\n          ];\n          personalFields.forEach(field => {\n            if (field in data) {\n              (partialData as any)[field] = (data as any)[field];\n            }\n          });\n          break;\n          \n        case 2: // Financial details\n          // Collect all financial fields\n          const financialFields = [\n            'employment_type', 'employment_years', 'monthly_income',\n            'additional_income', 'monthly_expenses', 'other_loan_balances'\n          ];\n          financialFields.forEach(field => {\n            if (field in data) {\n              (partialData as any)[field] = (data as any)[field];\n            }\n          });\n          break;\n          \n        case 3: // Bank details\n          // Collect all bank details fields\n          const bankFields = [\n            'bank_name', 'bank_clabe', 'bank_account_number',\n            'bank_account_type', 'bank_account_origin'\n          ];\n          bankFields.forEach(field => {\n            if (field in data) {\n              (partialData as any)[field] = (data as any)[field];\n            }\n          });\n          break;\n          \n        default:\n          console.warn(`Unknown step ${step} for partial save`);\n      }\n      \n      try {\n        // Update client with partial data\n        await updateClient(client.id, partialData);\n        console.log(`Successfully saved data for section ${step}`);\n        \n        // Update local state with new data\n        setClient(prevClient => ({\n          ...prevClient as Client,\n          ...partialData\n        }));\n        \n        // Show success message\n        setSuccessMessage(`Se guardaron los datos de la sección ${step} correctamente`);\n        \n        // Clear message after delay\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3000);\n        \n        return partialData;\n      } catch (err: any) {\n        console.error(`Error updating client at step ${step}:`, err);\n        setError(`Error al guardar la sección ${step}: ${err.message || 'Error desconocido'}`);\n        throw err;\n      }\n    } catch (error: any) {\n      console.error(`Error in handleSavePartial at step ${step}:`, error);\n      setError(error.message || `Error al guardar la sección ${step}. Por favor, intente de nuevo.`);\n      throw error;\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <MainLayout>\n        <div className=\"p-6 flex justify-center\">\n          <span className=\"loading loading-spinner loading-lg\"></span>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  if (error || !client) {\n    return (\n      <MainLayout>\n        <div className=\"p-6\">\n          <div className=\"alert alert-error\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span>{error || 'No se encontró el cliente solicitado.'}</span>\n          </div>\n          <div className=\"mt-4\">\n            <button \n              onClick={() => navigate('/clients')}\n              className=\"btn btn-primary\"\n            >\n              Volver a Clientes\n            </button>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"p-6\">\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={() => navigate('/clients')} \n            className=\"btn btn-sm btn-outline mr-4\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n            </svg>\n            Volver\n          </button>\n          <h1 className=\"text-2xl font-bold\">Editar Cliente</h1>\n        </div>\n        \n        {/* Display error alert if there's an error */}\n        {error && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-error\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{error}</span>\n              <button onClick={() => setError(null)} className=\"ml-auto\">×</button>\n            </div>\n          </div>\n        )}\n        \n        {/* Display success message if there's one */}\n        {successMessage && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-success\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{successMessage}</span>\n              <button onClick={() => setSuccessMessage(null)} className=\"ml-auto\">×</button>\n            </div>\n          </div>\n        )}\n        \n        <ClientForm \n          initialData={client}\n          onSubmit={handleSubmit}\n          onSavePartial={handleSavePartial}\n          isSubmitting={isSubmitting}\n        />\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default EditClient; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}