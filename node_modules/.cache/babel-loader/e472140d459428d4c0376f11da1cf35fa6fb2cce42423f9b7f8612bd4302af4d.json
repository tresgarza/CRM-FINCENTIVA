{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';// Registrar componentes necesarios de Chart.js\nimport{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const AdvisorPerformanceChart=_ref=>{let{data,title='Rendimiento de Asesores',height=350,className='',maxBars=10}=_ref;const[chartData,setChartData]=useState({labels:[],datasets:[]});// Almacenar las etiquetas para acceder a ellas en las opciones del gráfico\nconst[chartLabels,setChartLabels]=useState([]);useEffect(()=>{if(!data||data.length===0)return;// Ordenar los datos por total de aplicaciones (descendente)\nconst sortedData=[...data].sort((a,b)=>b.total_applications-a.total_applications);// Tomar solo los primeros maxBars elementos\nconst limitedData=sortedData.slice(0,maxBars);const labels=limitedData.map(item=>item.advisor_name);const totalApps=limitedData.map(item=>item.total_applications);const approvedApps=limitedData.map(item=>item.approved_applications||0);// Guardar las etiquetas para usarlas en las opciones\nsetChartLabels(labels);setChartData({labels,datasets:[{label:'Total Solicitudes',data:totalApps,backgroundColor:'rgba(53, 162, 235, 0.7)',borderColor:'rgba(53, 162, 235, 1)',borderWidth:1},{label:'Aprobadas',data:approvedApps,backgroundColor:'rgba(75, 192, 192, 0.7)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1}]});},[data,maxBars]);const options={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'top'},title:{display:!!title,text:title,font:{size:16}},tooltip:{callbacks:{label:context=>{const label=context.dataset.label||'';const value=context.parsed.y;return`${label}: ${value}`;}}}},scales:{y:{beginAtZero:true,ticks:{precision:0}},x:{ticks:{callback:function(value,index){// Acortar nombres largos\nconst label=chartLabels[index];return(label===null||label===void 0?void 0:label.length)>12?label.substr(0,10)+'...':label;}}}}};return/*#__PURE__*/_jsx(\"div\",{className:`chart-container ${className}`,style:{height:`${height}px`},children:data&&data.length>0?/*#__PURE__*/_jsx(Bar,{data:chartData,options:options}):/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full bg-base-200 rounded-lg\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Sin datos disponibles\"})})});};export default AdvisorPerformanceChart;","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","register","AdvisorPerformanceChart","_ref","data","title","height","className","maxBars","chartData","setChartData","labels","datasets","chartLabels","setChartLabels","length","sortedData","sort","a","b","total_applications","limitedData","slice","map","item","advisor_name","totalApps","approvedApps","approved_applications","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","display","text","font","size","tooltip","callbacks","context","dataset","value","parsed","y","scales","beginAtZero","ticks","precision","x","callback","index","substr","style","children"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/charts/AdvisorPerformanceChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\n// Registrar componentes necesarios de Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface AdvisorData {\n  advisor_name: string;\n  total_applications: number;\n  approved_applications?: number;\n}\n\ninterface AdvisorPerformanceChartProps {\n  data: AdvisorData[];\n  title?: string;\n  height?: number;\n  className?: string;\n  maxBars?: number;\n}\n\nconst AdvisorPerformanceChart: React.FC<AdvisorPerformanceChartProps> = ({\n  data,\n  title = 'Rendimiento de Asesores',\n  height = 350,\n  className = '',\n  maxBars = 10,\n}) => {\n  const [chartData, setChartData] = useState<any>({\n    labels: [],\n    datasets: [],\n  });\n  // Almacenar las etiquetas para acceder a ellas en las opciones del gráfico\n  const [chartLabels, setChartLabels] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Ordenar los datos por total de aplicaciones (descendente)\n    const sortedData = [...data].sort((a, b) => b.total_applications - a.total_applications);\n    \n    // Tomar solo los primeros maxBars elementos\n    const limitedData = sortedData.slice(0, maxBars);\n    \n    const labels = limitedData.map(item => item.advisor_name);\n    const totalApps = limitedData.map(item => item.total_applications);\n    const approvedApps = limitedData.map(item => item.approved_applications || 0);\n\n    // Guardar las etiquetas para usarlas en las opciones\n    setChartLabels(labels);\n\n    setChartData({\n      labels,\n      datasets: [\n        {\n          label: 'Total Solicitudes',\n          data: totalApps,\n          backgroundColor: 'rgba(53, 162, 235, 0.7)',\n          borderColor: 'rgba(53, 162, 235, 1)',\n          borderWidth: 1,\n        },\n        {\n          label: 'Aprobadas',\n          data: approvedApps,\n          backgroundColor: 'rgba(75, 192, 192, 0.7)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1,\n        },\n      ],\n    });\n  }, [data, maxBars]);\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (context: any) => {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value}`;\n          },\n        },\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          precision: 0,\n        },\n      },\n      x: {\n        ticks: {\n          callback: function(value: any, index: number) {\n            // Acortar nombres largos\n            const label = chartLabels[index];\n            return label?.length > 12 ? label.substr(0, 10) + '...' : label;\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div className={`chart-container ${className}`} style={{ height: `${height}px` }}>\n      {data && data.length > 0 ? (\n        <Bar data={chartData} options={options} />\n      ) : (\n        <div className=\"flex items-center justify-center h-full bg-base-200 rounded-lg\">\n          <p className=\"text-sm text-gray-500\">Sin datos disponibles</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvisorPerformanceChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}