{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler}from'chart.js';// Registrar componentes necesarios de Chart.js\nimport{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler);const MonthlyApplicationsChart=_ref=>{let{data,title='Solicitudes por Mes',height=300,className='',color='rgba(53, 162, 235, 0.7)'}=_ref;const[chartData,setChartData]=useState({labels:[],datasets:[{label:'Solicitudes',data:[],borderColor:'rgba(53, 162, 235, 0.8)',backgroundColor:'rgba(53, 162, 235, 0.2)',fill:true,tension:0.3}]});useEffect(()=>{if(!data||data.length===0)return;// Ordenar los datos por mes\nconst sortedData=[...data].sort((a,b)=>a.month.localeCompare(b.month));// Formatear los meses para mostrar nombres en español\nconst formattedMonths=sortedData.map(item=>{const[year,month]=item.month.split('-');const date=new Date(parseInt(year),parseInt(month)-1,1);// Nombre del mes en español\nconst monthNames=['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'];return`${monthNames[date.getMonth()]} ${year}`;});// Extraer los valores para el gráfico\nconst counts=sortedData.map(item=>item.count);// Actualizar los datos del gráfico\nsetChartData({labels:formattedMonths,datasets:[{label:'Solicitudes',data:counts,borderColor:color,backgroundColor:color.replace('0.7','0.1'),fill:true,tension:0.3}]});},[data,color]);const options={responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false},title:{display:!!title,text:title,font:{size:16}},tooltip:{callbacks:{label:context=>{return`Solicitudes: ${context.parsed.y}`;}}}},scales:{y:{beginAtZero:true,ticks:{precision:0}},x:{grid:{display:false}}}};return/*#__PURE__*/_jsx(\"div\",{className:`chart-container ${className}`,style:{height:`${height}px`},children:data&&data.length>0?/*#__PURE__*/_jsx(Line,{data:chartData,options:options}):/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full bg-base-200 rounded-lg\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Sin datos disponibles\"})})});};export default MonthlyApplicationsChart;","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","jsx","_jsx","register","MonthlyApplicationsChart","_ref","data","title","height","className","color","chartData","setChartData","labels","datasets","label","borderColor","backgroundColor","fill","tension","length","sortedData","sort","a","b","month","localeCompare","formattedMonths","map","item","year","split","date","Date","parseInt","monthNames","getMonth","counts","count","replace","options","responsive","maintainAspectRatio","plugins","legend","display","text","font","size","tooltip","callbacks","context","parsed","y","scales","beginAtZero","ticks","precision","x","grid","style","children"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/charts/MonthlyApplicationsChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from 'chart.js';\n\n// Registrar componentes necesarios de Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\ninterface MonthlyApplicationsChartProps {\n  data: {\n    month: string;\n    count: number;\n  }[];\n  title?: string;\n  height?: number;\n  className?: string;\n  color?: string;\n}\n\nconst MonthlyApplicationsChart: React.FC<MonthlyApplicationsChartProps> = ({\n  data,\n  title = 'Solicitudes por Mes',\n  height = 300,\n  className = '',\n  color = 'rgba(53, 162, 235, 0.7)',\n}) => {\n  const [chartData, setChartData] = useState<any>({\n    labels: [],\n    datasets: [\n      {\n        label: 'Solicitudes',\n        data: [],\n        borderColor: 'rgba(53, 162, 235, 0.8)',\n        backgroundColor: 'rgba(53, 162, 235, 0.2)',\n        fill: true,\n        tension: 0.3,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // Ordenar los datos por mes\n    const sortedData = [...data].sort((a, b) => a.month.localeCompare(b.month));\n\n    // Formatear los meses para mostrar nombres en español\n    const formattedMonths = sortedData.map((item) => {\n      const [year, month] = item.month.split('-');\n      const date = new Date(parseInt(year), parseInt(month) - 1, 1);\n      \n      // Nombre del mes en español\n      const monthNames = [\n        'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\n        'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\n      ];\n      \n      return `${monthNames[date.getMonth()]} ${year}`;\n    });\n\n    // Extraer los valores para el gráfico\n    const counts = sortedData.map((item) => item.count);\n\n    // Actualizar los datos del gráfico\n    setChartData({\n      labels: formattedMonths,\n      datasets: [\n        {\n          label: 'Solicitudes',\n          data: counts,\n          borderColor: color,\n          backgroundColor: color.replace('0.7', '0.1'),\n          fill: true,\n          tension: 0.3,\n        },\n      ],\n    });\n  }, [data, color]);\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (context: any) => {\n            return `Solicitudes: ${context.parsed.y}`;\n          },\n        },\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          precision: 0,\n        },\n      },\n      x: {\n        grid: {\n          display: false,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className={`chart-container ${className}`} style={{ height: `${height}px` }}>\n      {data && data.length > 0 ? (\n        <Line data={chartData} options={options} />\n      ) : (\n        <div className=\"flex items-center justify-center h-full bg-base-200 rounded-lg\">\n          <p className=\"text-sm text-gray-500\">Sin datos disponibles</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MonthlyApplicationsChart; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,iBAAiB,CACtC,OACEC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,KAAK,CACLC,OAAO,CACPC,MAAM,CACNC,MAAM,KACD,UAAU,CAEjB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACAV,OAAO,CAACW,QAAQ,CACdV,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,KAAK,CACLC,OAAO,CACPC,MAAM,CACNC,MACF,CAAC,CAaD,KAAM,CAAAI,wBAAiE,CAAGC,IAAA,EAMpE,IANqE,CACzEC,IAAI,CACJC,KAAK,CAAG,qBAAqB,CAC7BC,MAAM,CAAG,GAAG,CACZC,SAAS,CAAG,EAAE,CACdC,KAAK,CAAG,yBACV,CAAC,CAAAL,IAAA,CACC,KAAM,CAACM,SAAS,CAAEC,YAAY,CAAC,CAAGvB,QAAQ,CAAM,CAC9CwB,MAAM,CAAE,EAAE,CACVC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,aAAa,CACpBT,IAAI,CAAE,EAAE,CACRU,WAAW,CAAE,yBAAyB,CACtCC,eAAe,CAAE,yBAAyB,CAC1CC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,GACX,CAAC,CAEL,CAAC,CAAC,CAEF/B,SAAS,CAAC,IAAM,CACd,GAAI,CAACkB,IAAI,EAAIA,IAAI,CAACc,MAAM,GAAK,CAAC,CAAE,OAEhC;AACA,KAAM,CAAAC,UAAU,CAAG,CAAC,GAAGf,IAAI,CAAC,CAACgB,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACE,KAAK,CAACC,aAAa,CAACF,CAAC,CAACC,KAAK,CAAC,CAAC,CAE3E;AACA,KAAM,CAAAE,eAAe,CAAGN,UAAU,CAACO,GAAG,CAAEC,IAAI,EAAK,CAC/C,KAAM,CAACC,IAAI,CAAEL,KAAK,CAAC,CAAGI,IAAI,CAACJ,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAC3C,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACC,QAAQ,CAACJ,IAAI,CAAC,CAAEI,QAAQ,CAACT,KAAK,CAAC,CAAG,CAAC,CAAE,CAAC,CAAC,CAE7D;AACA,KAAM,CAAAU,UAAU,CAAG,CACjB,OAAO,CAAE,SAAS,CAAE,OAAO,CAAE,OAAO,CAAE,MAAM,CAAE,OAAO,CACrD,OAAO,CAAE,QAAQ,CAAE,YAAY,CAAE,SAAS,CAAE,WAAW,CAAE,WAAW,CACrE,CAED,MAAO,GAAGA,UAAU,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC,IAAIN,IAAI,EAAE,CACjD,CAAC,CAAC,CAEF;AACA,KAAM,CAAAO,MAAM,CAAGhB,UAAU,CAACO,GAAG,CAAEC,IAAI,EAAKA,IAAI,CAACS,KAAK,CAAC,CAEnD;AACA1B,YAAY,CAAC,CACXC,MAAM,CAAEc,eAAe,CACvBb,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,aAAa,CACpBT,IAAI,CAAE+B,MAAM,CACZrB,WAAW,CAAEN,KAAK,CAClBO,eAAe,CAAEP,KAAK,CAAC6B,OAAO,CAAC,KAAK,CAAE,KAAK,CAAC,CAC5CrB,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,GACX,CAAC,CAEL,CAAC,CAAC,CACJ,CAAC,CAAE,CAACb,IAAI,CAAEI,KAAK,CAAC,CAAC,CAEjB,KAAM,CAAA8B,OAAO,CAAG,CACdC,UAAU,CAAE,IAAI,CAChBC,mBAAmB,CAAE,KAAK,CAC1BC,OAAO,CAAE,CACPC,MAAM,CAAE,CACNC,OAAO,CAAE,KACX,CAAC,CACDtC,KAAK,CAAE,CACLsC,OAAO,CAAE,CAAC,CAACtC,KAAK,CAChBuC,IAAI,CAAEvC,KAAK,CACXwC,IAAI,CAAE,CACJC,IAAI,CAAE,EACR,CACF,CAAC,CACDC,OAAO,CAAE,CACPC,SAAS,CAAE,CACTnC,KAAK,CAAGoC,OAAY,EAAK,CACvB,MAAO,gBAAgBA,OAAO,CAACC,MAAM,CAACC,CAAC,EAAE,CAC3C,CACF,CACF,CACF,CAAC,CACDC,MAAM,CAAE,CACND,CAAC,CAAE,CACDE,WAAW,CAAE,IAAI,CACjBC,KAAK,CAAE,CACLC,SAAS,CAAE,CACb,CACF,CAAC,CACDC,CAAC,CAAE,CACDC,IAAI,CAAE,CACJd,OAAO,CAAE,KACX,CACF,CACF,CACF,CAAC,CAED,mBACE3C,IAAA,QAAKO,SAAS,CAAE,mBAAmBA,SAAS,EAAG,CAACmD,KAAK,CAAE,CAAEpD,MAAM,CAAE,GAAGA,MAAM,IAAK,CAAE,CAAAqD,QAAA,CAC9EvD,IAAI,EAAIA,IAAI,CAACc,MAAM,CAAG,CAAC,cACtBlB,IAAA,CAACZ,IAAI,EAACgB,IAAI,CAAEK,SAAU,CAAC6B,OAAO,CAAEA,OAAQ,CAAE,CAAC,cAE3CtC,IAAA,QAAKO,SAAS,CAAC,gEAAgE,CAAAoD,QAAA,cAC7E3D,IAAA,MAAGO,SAAS,CAAC,uBAAuB,CAAAoD,QAAA,CAAC,uBAAqB,CAAG,CAAC,CAC3D,CACN,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzD,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}