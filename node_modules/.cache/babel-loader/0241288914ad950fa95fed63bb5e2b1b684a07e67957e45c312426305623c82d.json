{"ast":null,"code":"/**\n * Utility functions for error handling throughout the application\n */import{toast}from'react-hot-toast';/**\n * Error types for common application errors\n */export let ErrorType=/*#__PURE__*/function(ErrorType){ErrorType[\"VALIDATION\"]=\"VALIDATION\";ErrorType[\"AUTHENTICATION\"]=\"AUTHENTICATION\";ErrorType[\"AUTHORIZATION\"]=\"AUTHORIZATION\";ErrorType[\"SERVER\"]=\"SERVER\";ErrorType[\"NETWORK\"]=\"NETWORK\";ErrorType[\"UPLOAD\"]=\"UPLOAD\";ErrorType[\"NOT_FOUND\"]=\"NOT_FOUND\";ErrorType[\"DATABASE\"]=\"DATABASE\";ErrorType[\"UNKNOWN\"]=\"UNKNOWN\";return ErrorType;}({});/**\n * Standard interface for API errors\n *//**\n * Standard error shape for the application\n *//**\n * Creates a standardized error object from any error type\n * @param error The original error\n * @param context Additional context information about where the error occurred\n * @returns A standardized API error object\n */export const formatApiError=(error,context)=>{// Default error message\nlet formattedError={message:'Error desconocido',context};// Handle Error object\nif(error instanceof Error){formattedError.message=error.message;}// Handle Supabase-style errors\nelse if(typeof error==='object'&&error!==null){if(error.message){formattedError.message=error.message;}if(error.code){formattedError.code=error.code;// Add more descriptive messages for specific error codes\nif(error.code==='23505'){formattedError.message='Ya existe un registro con estos datos.';}else if(error.code==='42P01'){formattedError.message='La tabla no existe en la base de datos.';}}if(error.details){formattedError.details=error.details;}}return formattedError;};/**\n * Creates a user-friendly error message from an API error\n * @param error The API error object\n * @returns A user-friendly error message\n */export const getUserFriendlyErrorMessage=error=>{var _error$context;// Use the original message if already user-friendly\nif(error.handled){return error.message;}// Generic user-friendly messages based on context\nif(error.context==='document-upload'){return`Error al subir documentos: ${error.message}`;}if(error.context==='client-update'){return`Error al actualizar cliente: ${error.message}`;}if(error.context==='client-create'){return`Error al crear cliente: ${error.message}`;}if((_error$context=error.context)!==null&&_error$context!==void 0&&_error$context.includes('fetch')){return`Error al cargar datos: ${error.message}`;}// Default message\nreturn`Error: ${error.message}`;};/**\n * Creates an application error with standard shape\n */export const createAppError=(type,message,details,originalError)=>({type,message,details,originalError});/**\n * Shows error toast with appropriate messaging\n */export const showErrorToast=(error,title)=>{const message=typeof error==='string'?error:error.message||'An unexpected error occurred';toast.error(message,{duration:5000});};/**\n * Determines if an error is a specific type\n */export const isErrorType=(error,type)=>{return error.type===type;};/**\n * Determines if an error is a network error\n */export const isNetworkError=error=>{return error instanceof Error&&(error.message.includes('network')||error.message.includes('offline')||error.message.includes('failed to fetch')||error.message.includes('NetworkError'));};/**\n * Determines if an error is a server error\n */export const isServerError=error=>{return error instanceof Error&&(error.message.includes('500')||error.message.includes('server error'));};/**\n * Determines if an error is a transient error that may succeed on retry\n */export const isTransientError=error=>{if(error instanceof Error){return isNetworkError(error)||isServerError(error)||error.message.includes('timeout')||error.message.includes('rate limit');}return false;};/**\n * Handles API errors and returns a standardized AppError\n */export const handleApiError=error=>{if(error instanceof Error){if(error.message.includes('401')||error.message.includes('authentication')){return createAppError(ErrorType.AUTHENTICATION,'Authentication failed. Please log in again.',{},error);}if(error.message.includes('403')||error.message.includes('permission')){return createAppError(ErrorType.AUTHORIZATION,'You do not have permission to perform this action.',{},error);}if(error.message.includes('404')||error.message.includes('not found')){return createAppError(ErrorType.NOT_FOUND,'The requested resource was not found.',{},error);}if(isNetworkError(error)){return createAppError(ErrorType.NETWORK,'A network error occurred. Please check your connection and try again.',{},error);}if(isServerError(error)){return createAppError(ErrorType.SERVER,'A server error occurred. Please try again later.',{},error);}}return createAppError(ErrorType.UNKNOWN,'An unexpected error occurred.',{},error);};/**\n * Safely parses API response to extract error details\n */export const parseApiErrorResponse=response=>{return response.json().then(data=>{if(data&&data.error){return createAppError(data.type||ErrorType.UNKNOWN,data.error||'An error occurred',data.details||{},null);}return createAppError(ErrorType.UNKNOWN,'An unexpected error occurred',{},null);}).catch(()=>{return createAppError(ErrorType.UNKNOWN,`${response.status}: ${response.statusText||'An error occurred'}`,{},null);});};/**\n * Log error information with standard formatting\n */export const logError=(error,context,additionalInfo)=>{// In production, send to logging service\n// For development, just log to console\nconsole.error(`Error in ${context}:`,error);if(additionalInfo){console.error('Additional info:',additionalInfo);}// If AppError, log its details\nif(error&&typeof error==='object'&&'type'in error){const appError=error;console.error('Error type:',appError.type);console.error('Error message:',appError.message);if(appError.details){console.error('Error details:',appError.details);}if(appError.originalError){console.error('Original error:',appError.originalError);}}};/**\n * Parses an unknown error into a standardized AppError format\n */export const parseError=error=>{// Handle PostgrestError\nif(error&&typeof error==='object'&&'code'in error&&'message'in error){const pgError=error;return createAppError(pgError.code?ErrorType.DATABASE:ErrorType.UNKNOWN,pgError.message,{details:pgError.details,hint:pgError.hint},error);}// Handle Error objects\nif(error instanceof Error){// Convert to AppError format\nreturn createAppError(ErrorType.UNKNOWN,error.message,{},error);}// Handle string errors\nif(typeof error==='string'){return createAppError(ErrorType.UNKNOWN,error);}// Generic fallback for unknown error types\nreturn createAppError(ErrorType.UNKNOWN,'An unknown error occurred',{rawError:error});};/**\n * Safely handles promises and returns a standardized response\n * @param promise The promise to execute\n * @param errorContext Context string for error logging\n * @returns A tuple of [data, error]\n */export const safeAsync=async(promise,errorContext)=>{try{const data=await promise;return[data,null];}catch(error){const appError=parseError(error);logError(appError,errorContext);return[null,appError];}};/**\n * Checks if an error is related to Row Level Security violations\n * @param error The error to check\n * @returns Boolean indicating if this is an RLS violation\n */export const isRlsViolation=error=>{if(!error||!error.message)return false;return error.message.includes('violates row-level security policy')||error.message.includes('permission denied')||error.message.includes('Unauthorized')||error.message.includes('403');};/**\n * Creates a standard RLS violation error\n * @param operation The operation that was attempted (e.g., 'update', 'delete')\n * @param resourceType The type of resource (e.g., 'client', 'application')\n * @param resourceId The ID of the resource\n * @param originalError The original error object\n * @returns A standardized App Error for RLS violations\n */export const createRlsViolationError=(operation,resourceType,resourceId,originalError)=>{const rlsError=createAppError(ErrorType.AUTHORIZATION,`No tienes permisos para ${operation} este ${resourceType}. Esto puede deberse a políticas de seguridad RLS en Supabase.`,{originalError:(originalError===null||originalError===void 0?void 0:originalError.message)||'Unknown error'});logError(rlsError,`${operation}${resourceType}.RLS_VIOLATION`,{[`${resourceType}Id`]:resourceId});return rlsError;};/**\n * Creates a standard no-effect error for database operations that didn't affect any rows\n * @param operation The operation that was attempted (e.g., 'update', 'delete')\n * @param resourceType The type of resource (e.g., 'client', 'application')\n * @param resourceId The ID of the resource\n * @returns A standardized App Error for no-effect operations\n */export const createNoEffectError=(operation,resourceType,resourceId)=>{const operationName=operation==='update'?'actualización':operation==='delete'?'eliminación':operation;const noEffectError=createAppError(ErrorType.DATABASE,`La ${operationName} no tuvo efecto en la base de datos. Esto puede deberse a permisos insuficientes.`,{[`${resourceType}Id`]:resourceId});logError(noEffectError,`${operation}${resourceType}.NO_EFFECT`,{[`${resourceType}Id`]:resourceId});return noEffectError;};","map":{"version":3,"names":["toast","ErrorType","formatApiError","error","context","formattedError","message","Error","code","details","getUserFriendlyErrorMessage","_error$context","handled","includes","createAppError","type","originalError","showErrorToast","title","duration","isErrorType","isNetworkError","isServerError","isTransientError","handleApiError","AUTHENTICATION","AUTHORIZATION","NOT_FOUND","NETWORK","SERVER","UNKNOWN","parseApiErrorResponse","response","json","then","data","catch","status","statusText","logError","additionalInfo","console","appError","parseError","pgError","DATABASE","hint","rawError","safeAsync","promise","errorContext","isRlsViolation","createRlsViolationError","operation","resourceType","resourceId","rlsError","createNoEffectError","operationName","noEffectError"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/utils/errorHandling.ts"],"sourcesContent":["/**\n * Utility functions for error handling throughout the application\n */\n\nimport { PostgrestError } from '@supabase/supabase-js';\nimport { toast } from 'react-hot-toast';\n\n/**\n * Error types for common application errors\n */\nexport enum ErrorType {\n  VALIDATION = 'VALIDATION',\n  AUTHENTICATION = 'AUTHENTICATION',\n  AUTHORIZATION = 'AUTHORIZATION',\n  SERVER = 'SERVER',\n  NETWORK = 'NETWORK',\n  UPLOAD = 'UPLOAD',\n  NOT_FOUND = 'NOT_FOUND',\n  DATABASE = 'DATABASE',\n  UNKNOWN = 'UNKNOWN'\n}\n\n/**\n * Standard interface for API errors\n */\nexport interface ApiError {\n  message: string;\n  code?: string;\n  details?: string;\n  context?: string;\n  handled?: boolean;\n}\n\n/**\n * Standard error shape for the application\n */\nexport interface AppError {\n  type: ErrorType;\n  message: string;\n  details?: Record<string, unknown>;\n  originalError?: unknown;\n}\n\n/**\n * Creates a standardized error object from any error type\n * @param error The original error\n * @param context Additional context information about where the error occurred\n * @returns A standardized API error object\n */\nexport const formatApiError = (error: any, context: string): ApiError => {\n  // Default error message\n  let formattedError: ApiError = {\n    message: 'Error desconocido',\n    context\n  };\n\n  // Handle Error object\n  if (error instanceof Error) {\n    formattedError.message = error.message;\n  } \n  // Handle Supabase-style errors\n  else if (typeof error === 'object' && error !== null) {\n    if (error.message) {\n      formattedError.message = error.message;\n    }\n    \n    if (error.code) {\n      formattedError.code = error.code;\n      \n      // Add more descriptive messages for specific error codes\n      if (error.code === '23505') {\n        formattedError.message = 'Ya existe un registro con estos datos.';\n      } else if (error.code === '42P01') {\n        formattedError.message = 'La tabla no existe en la base de datos.';\n      }\n    }\n    \n    if (error.details) {\n      formattedError.details = error.details;\n    }\n  }\n  \n  return formattedError;\n};\n\n/**\n * Creates a user-friendly error message from an API error\n * @param error The API error object\n * @returns A user-friendly error message\n */\nexport const getUserFriendlyErrorMessage = (error: ApiError): string => {\n  // Use the original message if already user-friendly\n  if (error.handled) {\n    return error.message;\n  }\n  \n  // Generic user-friendly messages based on context\n  if (error.context === 'document-upload') {\n    return `Error al subir documentos: ${error.message}`;\n  }\n  \n  if (error.context === 'client-update') {\n    return `Error al actualizar cliente: ${error.message}`;\n  }\n  \n  if (error.context === 'client-create') {\n    return `Error al crear cliente: ${error.message}`;\n  }\n  \n  if (error.context?.includes('fetch')) {\n    return `Error al cargar datos: ${error.message}`;\n  }\n  \n  // Default message\n  return `Error: ${error.message}`;\n};\n\n/**\n * Creates an application error with standard shape\n */\nexport const createAppError = (\n  type: ErrorType,\n  message: string,\n  details?: Record<string, unknown>,\n  originalError?: unknown\n): AppError => ({\n  type,\n  message,\n  details,\n  originalError\n});\n\n/**\n * Shows error toast with appropriate messaging\n */\nexport const showErrorToast = (\n  error: AppError | string,\n  title?: string\n) => {\n  const message = typeof error === 'string' \n    ? error \n    : error.message || 'An unexpected error occurred';\n  \n  toast.error(message, {\n    duration: 5000\n  });\n};\n\n/**\n * Determines if an error is a specific type\n */\nexport const isErrorType = (error: AppError, type: ErrorType): boolean => {\n  return error.type === type;\n};\n\n/**\n * Determines if an error is a network error\n */\nexport const isNetworkError = (error: unknown): boolean => {\n  return (\n    error instanceof Error && \n    (error.message.includes('network') || \n     error.message.includes('offline') ||\n     error.message.includes('failed to fetch') ||\n     error.message.includes('NetworkError'))\n  );\n};\n\n/**\n * Determines if an error is a server error\n */\nexport const isServerError = (error: unknown): boolean => {\n  return (\n    error instanceof Error && \n    (error.message.includes('500') || \n     error.message.includes('server error'))\n  );\n};\n\n/**\n * Determines if an error is a transient error that may succeed on retry\n */\nexport const isTransientError = (error: unknown): boolean => {\n  if (error instanceof Error) {\n    return (\n      isNetworkError(error) ||\n      isServerError(error) ||\n      error.message.includes('timeout') ||\n      error.message.includes('rate limit')\n    );\n  }\n  return false;\n};\n\n/**\n * Handles API errors and returns a standardized AppError\n */\nexport const handleApiError = (error: unknown): AppError => {\n  if (error instanceof Error) {\n    if (error.message.includes('401') || error.message.includes('authentication')) {\n      return createAppError(\n        ErrorType.AUTHENTICATION,\n        'Authentication failed. Please log in again.',\n        {},\n        error\n      );\n    }\n    \n    if (error.message.includes('403') || error.message.includes('permission')) {\n      return createAppError(\n        ErrorType.AUTHORIZATION,\n        'You do not have permission to perform this action.',\n        {},\n        error\n      );\n    }\n    \n    if (error.message.includes('404') || error.message.includes('not found')) {\n      return createAppError(\n        ErrorType.NOT_FOUND,\n        'The requested resource was not found.',\n        {},\n        error\n      );\n    }\n    \n    if (isNetworkError(error)) {\n      return createAppError(\n        ErrorType.NETWORK,\n        'A network error occurred. Please check your connection and try again.',\n        {},\n        error\n      );\n    }\n    \n    if (isServerError(error)) {\n      return createAppError(\n        ErrorType.SERVER,\n        'A server error occurred. Please try again later.',\n        {},\n        error\n      );\n    }\n  }\n  \n  return createAppError(\n    ErrorType.UNKNOWN,\n    'An unexpected error occurred.',\n    {},\n    error\n  );\n};\n\n/**\n * Safely parses API response to extract error details\n */\nexport const parseApiErrorResponse = (response: Response): Promise<AppError> => {\n  return response.json()\n    .then(data => {\n      if (data && data.error) {\n        return createAppError(\n          data.type || ErrorType.UNKNOWN,\n          data.error || 'An error occurred',\n          data.details || {},\n          null\n        );\n      }\n      \n      return createAppError(\n        ErrorType.UNKNOWN,\n        'An unexpected error occurred',\n        {},\n        null\n      );\n    })\n    .catch(() => {\n      return createAppError(\n        ErrorType.UNKNOWN,\n        `${response.status}: ${response.statusText || 'An error occurred'}`,\n        {},\n        null\n      );\n    });\n};\n\n/**\n * Log error information with standard formatting\n */\nexport const logError = (\n  error: unknown,\n  context: string,\n  additionalInfo?: Record<string, any>\n): void => {\n  // In production, send to logging service\n  // For development, just log to console\n  console.error(`Error in ${context}:`, error);\n  \n  if (additionalInfo) {\n    console.error('Additional info:', additionalInfo);\n  }\n  \n  // If AppError, log its details\n  if (error && typeof error === 'object' && 'type' in error) {\n    const appError = error as AppError;\n    console.error('Error type:', appError.type);\n    console.error('Error message:', appError.message);\n    if (appError.details) {\n      console.error('Error details:', appError.details);\n    }\n    if (appError.originalError) {\n      console.error('Original error:', appError.originalError);\n    }\n  }\n};\n\n/**\n * Parses an unknown error into a standardized AppError format\n */\nexport const parseError = (error: unknown): AppError => {\n  // Handle PostgrestError\n  if (error && typeof error === 'object' && 'code' in error && 'message' in error) {\n    const pgError = error as PostgrestError;\n    return createAppError(\n      pgError.code ? ErrorType.DATABASE : ErrorType.UNKNOWN,\n      pgError.message,\n      { details: pgError.details, hint: pgError.hint },\n      error\n    );\n  }\n  \n  // Handle Error objects\n  if (error instanceof Error) {\n    // Convert to AppError format\n    return createAppError(\n      ErrorType.UNKNOWN,\n      error.message,\n      {},\n      error\n    );\n  }\n  \n  // Handle string errors\n  if (typeof error === 'string') {\n    return createAppError(\n      ErrorType.UNKNOWN,\n      error\n    );\n  }\n  \n  // Generic fallback for unknown error types\n  return createAppError(\n    ErrorType.UNKNOWN,\n    'An unknown error occurred',\n    { rawError: error }\n  );\n};\n\n/**\n * Safely handles promises and returns a standardized response\n * @param promise The promise to execute\n * @param errorContext Context string for error logging\n * @returns A tuple of [data, error]\n */\nexport const safeAsync = async <T>(\n  promise: Promise<T>,\n  errorContext: string\n): Promise<[T | null, AppError | null]> => {\n  try {\n    const data = await promise;\n    return [data, null];\n  } catch (error) {\n    const appError = parseError(error);\n    logError(appError, errorContext);\n    return [null, appError];\n  }\n};\n\n/**\n * Checks if an error is related to Row Level Security violations\n * @param error The error to check\n * @returns Boolean indicating if this is an RLS violation\n */\nexport const isRlsViolation = (error: any): boolean => {\n  if (!error || !error.message) return false;\n  \n  return error.message.includes('violates row-level security policy') ||\n    error.message.includes('permission denied') ||\n    error.message.includes('Unauthorized') ||\n    error.message.includes('403');\n};\n\n/**\n * Creates a standard RLS violation error\n * @param operation The operation that was attempted (e.g., 'update', 'delete')\n * @param resourceType The type of resource (e.g., 'client', 'application')\n * @param resourceId The ID of the resource\n * @param originalError The original error object\n * @returns A standardized App Error for RLS violations\n */\nexport const createRlsViolationError = (\n  operation: string,\n  resourceType: string,\n  resourceId: string,\n  originalError: any\n) => {\n  const rlsError = createAppError(\n    ErrorType.AUTHORIZATION,\n    `No tienes permisos para ${operation} este ${resourceType}. Esto puede deberse a políticas de seguridad RLS en Supabase.`,\n    { originalError: originalError?.message || 'Unknown error' }\n  );\n  \n  logError(rlsError, `${operation}${resourceType}.RLS_VIOLATION`, { [`${resourceType}Id`]: resourceId });\n  \n  return rlsError;\n};\n\n/**\n * Creates a standard no-effect error for database operations that didn't affect any rows\n * @param operation The operation that was attempted (e.g., 'update', 'delete')\n * @param resourceType The type of resource (e.g., 'client', 'application')\n * @param resourceId The ID of the resource\n * @returns A standardized App Error for no-effect operations\n */\nexport const createNoEffectError = (\n  operation: string,\n  resourceType: string,\n  resourceId: string\n) => {\n  const operationName = operation === 'update' ? 'actualización' : \n                         operation === 'delete' ? 'eliminación' : operation;\n  \n  const noEffectError = createAppError(\n    ErrorType.DATABASE,\n    `La ${operationName} no tuvo efecto en la base de datos. Esto puede deberse a permisos insuficientes.`,\n    { [`${resourceType}Id`]: resourceId }\n  );\n  \n  logError(noEffectError, `${operation}${resourceType}.NO_EFFECT`, { [`${resourceType}Id`]: resourceId });\n  \n  return noEffectError;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}